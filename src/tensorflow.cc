/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



#ifndef SWIG_V8_VERSION
#define SWIG_V8_VERSION 0x031110
#endif


#include <node.h>


#include <v8.h>

#include <errno.h>
#include <limits.h>
#include <stdlib.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* ---------------------------------------------------------------------------
 * These typedefs and defines are used to deal with v8 API changes
 *
 * ---------------------------------------------------------------------------*/

// First v8 version that uses "SetWeak" and not "MakeWeak"

#define SWIGV8_SETWEAK_VERSION 0x032224

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031803)
#define SWIGV8_STRING_NEW2(cstr, len) v8::String::New(cstr, len)
#else
#define SWIGV8_STRING_NEW2(cstr, len) v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), cstr, v8::String::kNormalString, len)
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
typedef v8::Handle<v8::Value> SwigV8ReturnValue;
typedef v8::Arguments SwigV8Arguments;
typedef v8::AccessorInfo SwigV8PropertyCallbackInfo;
#define SWIGV8_RETURN(val) return scope.Close(val)
#define SWIGV8_RETURN_INFO(val, info) return scope.Close(val)
#else
typedef void SwigV8ReturnValue;
typedef v8::FunctionCallbackInfo<v8::Value> SwigV8Arguments;
typedef v8::PropertyCallbackInfo<v8::Value> SwigV8PropertyCallbackInfo;
#define SWIGV8_RETURN(val) args.GetReturnValue().Set(val); return
#define SWIGV8_RETURN_INFO(val, info) info.GetReturnValue().Set(val); return
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032117)
#define SWIGV8_HANDLESCOPE() v8::HandleScope scope
#define SWIGV8_HANDLESCOPE_ESC() v8::HandleScope scope
#define SWIGV8_ESCAPE(val) return scope.Close(val)
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032224)
#define SWIGV8_HANDLESCOPE() v8::HandleScope scope(v8::Isolate::GetCurrent());
#define SWIGV8_HANDLESCOPE_ESC() v8::HandleScope scope(v8::Isolate::GetCurrent());
#define SWIGV8_ESCAPE(val) return scope.Close(val)
#else
#define SWIGV8_HANDLESCOPE() v8::HandleScope scope(v8::Isolate::GetCurrent());
#define SWIGV8_HANDLESCOPE_ESC() v8::EscapableHandleScope scope(v8::Isolate::GetCurrent());
#define SWIGV8_ESCAPE(val) return scope.Escape(val)
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032224)
#define SWIGV8_ADJUST_MEMORY(size) v8::V8::AdjustAmountOfExternalAllocatedMemory(size)
#define SWIGV8_CURRENT_CONTEXT() v8::Context::GetCurrent()
#define SWIGV8_THROW_EXCEPTION(err) v8::ThrowException(err)
#define SWIGV8_STRING_NEW(str) v8::String::New(str)
#define SWIGV8_SYMBOL_NEW(sym) v8::String::NewSymbol(sym)
#else
#define SWIGV8_ADJUST_MEMORY(size) v8::Isolate::GetCurrent()->AdjustAmountOfExternalAllocatedMemory(size)
#define SWIGV8_CURRENT_CONTEXT() v8::Isolate::GetCurrent()->GetCurrentContext()
#define SWIGV8_THROW_EXCEPTION(err) v8::Isolate::GetCurrent()->ThrowException(err)
#define SWIGV8_STRING_NEW(str) v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), str)
#define SWIGV8_SYMBOL_NEW(sym) v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), sym)
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032318)
#define SWIGV8_ARRAY_NEW() v8::Array::New()
#define SWIGV8_BOOLEAN_NEW(bool) v8::Boolean::New(bool)
#define SWIGV8_EXTERNAL_NEW(val) v8::External::New(val)
#define SWIGV8_FUNCTEMPLATE_NEW(func) v8::FunctionTemplate::New(func)
#define SWIGV8_FUNCTEMPLATE_NEW_VOID() v8::FunctionTemplate::New()
#define SWIGV8_INT32_NEW(num) v8::Int32::New(num)
#define SWIGV8_INTEGER_NEW(num) v8::Integer::New(num)
#define SWIGV8_INTEGER_NEW_UNS(num) v8::Integer::NewFromUnsigned(num)
#define SWIGV8_NUMBER_NEW(num) v8::Number::New(num)
#define SWIGV8_OBJECT_NEW() v8::Object::New()
#define SWIGV8_UNDEFINED() v8::Undefined()
#define SWIGV8_NULL() v8::Null()
#else
#define SWIGV8_ARRAY_NEW() v8::Array::New(v8::Isolate::GetCurrent())
#define SWIGV8_BOOLEAN_NEW(bool) v8::Boolean::New(v8::Isolate::GetCurrent(), bool)
#define SWIGV8_EXTERNAL_NEW(val) v8::External::New(v8::Isolate::GetCurrent(), val)
#define SWIGV8_FUNCTEMPLATE_NEW(func) v8::FunctionTemplate::New(v8::Isolate::GetCurrent(), func)
#define SWIGV8_FUNCTEMPLATE_NEW_VOID() v8::FunctionTemplate::New(v8::Isolate::GetCurrent())
#define SWIGV8_INT32_NEW(num) v8::Int32::New(v8::Isolate::GetCurrent(), num)
#define SWIGV8_INTEGER_NEW(num) v8::Integer::New(v8::Isolate::GetCurrent(), num)
#define SWIGV8_INTEGER_NEW_UNS(num) v8::Integer::NewFromUnsigned(v8::Isolate::GetCurrent(), num)
#define SWIGV8_NUMBER_NEW(num) v8::Number::New(v8::Isolate::GetCurrent(), num)
#define SWIGV8_OBJECT_NEW() v8::Object::New(v8::Isolate::GetCurrent())
#define SWIGV8_UNDEFINED() v8::Undefined(v8::Isolate::GetCurrent())
#define SWIGV8_NULL() v8::Null(v8::Isolate::GetCurrent())
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
#define SWIGV8_SET_CLASS_TEMPL(class_templ, class) class_templ = v8::Persistent<v8::FunctionTemplate>::New(class);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
#define SWIGV8_SET_CLASS_TEMPL(class_templ, class) class_templ = v8::Persistent<v8::FunctionTemplate>::New(v8::Isolate::GetCurrent(), class);
#else
#define SWIGV8_SET_CLASS_TEMPL(class_templ, class) class_templ.Reset(v8::Isolate::GetCurrent(), class);
#endif

/* ---------------------------------------------------------------------------
 * Error handling
 *
 * ---------------------------------------------------------------------------*/

#define SWIG_Error(code, msg)     SWIGV8_ErrorHandler.error(code, msg)
#define SWIG_exception(code, msg) do { SWIGV8_ErrorHandler.error(code, msg); SWIG_fail; } while (0)
#define SWIG_fail                 goto fail
#define SWIGV8_OVERLOAD false

SWIGINTERN void SWIG_V8_Raise(const char *msg) {
  SWIGV8_THROW_EXCEPTION(v8::Exception::Error(SWIGV8_STRING_NEW(msg)));
}

/*
  Note: There are two contexts for handling errors.
  A static V8ErrorHandler is used in not overloaded methods.
  For overloaded methods the throwing type checking mechanism is used
  during dispatching. As V8 exceptions can not be resetted properly
  the trick is to use a dynamic ErrorHandler with same local name as the global
  one.

  - See defintion of SWIG_Error above.
  - See code templates 'JS_function_dispatcher', 'JS_functionwrapper_overload',
    and 'JS_function_dispatch_case' in javascriptcode.swg

*/
class V8ErrorHandler {
public:
  virtual ~V8ErrorHandler() {}
  virtual void error(int code, const char *msg) {
    SWIG_V8_Raise(msg);
  }
};
// this is used in usually
SWIGRUNTIME V8ErrorHandler SWIGV8_ErrorHandler;

// instances of this are used in overloaded functions
class OverloadErrorHandler: public V8ErrorHandler {
public:
  virtual void error(int code, const char *msg) {
    err = v8::Exception::Error(SWIGV8_STRING_NEW(msg));
    if(code != SWIG_TypeError) {
        SWIGV8_THROW_EXCEPTION(err);
    }
  }
  v8::Handle<v8::Value> err;
};

/* ---------------------------------------------------------------------------
 * Basic Proxy object
 *
 * ---------------------------------------------------------------------------*/

// Note: to trigger the v8 gc more often one can tell v8 about the memory consumption
// TODO: we could add a v8 specific parameter to control this value
#define SWIGV8_AVG_OBJ_SIZE 1000

class SWIGV8_Proxy {
public:
  SWIGV8_Proxy(): swigCMemOwn(false), swigCObject(0), info(0) {
    SWIGV8_ADJUST_MEMORY(SWIGV8_AVG_OBJ_SIZE);
  };

  ~SWIGV8_Proxy() {
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
    handle.ClearWeak();
    handle.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
    handle.ClearWeak(v8::Isolate::GetCurrent());
    handle.Dispose(v8::Isolate::GetCurrent());
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    handle.ClearWeak();
    handle.Dispose();
#else    
    handle.ClearWeak();
    handle.Reset();
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    handle.Clear();
#endif

    SWIGV8_ADJUST_MEMORY(-SWIGV8_AVG_OBJ_SIZE);
  }

  bool swigCMemOwn;
  void *swigCObject;
  swig_type_info *info;
  v8::Persistent<v8::Object> handle;
};

class SWIGV8_ClientData {
public:
  v8::Persistent<v8::FunctionTemplate> class_templ;

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
  void (*dtor) (v8::Persistent< v8::Value> object, void *parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  void (*dtor) (v8::Isolate *isolate, v8::Persistent< v8::Value> object, void *parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
  void (*dtor) (v8::Isolate *isolate, v8::Persistent< v8::Object > *object, SWIGV8_Proxy *proxy);
#else
  void (*dtor) (const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data);
#endif
};

SWIGRUNTIME v8::Persistent<v8::FunctionTemplate> SWIGV8_SWIGTYPE_Proxy_class_templ;

SWIGRUNTIME int SWIG_V8_ConvertInstancePtr(v8::Handle<v8::Object> objRef, void **ptr, swig_type_info *info, int flags) {
  SWIGV8_HANDLESCOPE();

  if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
  v8::Handle<v8::Value> cdataRef = objRef->GetInternalField(0);
  SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(v8::External::Unwrap(cdataRef));
#else
  SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));
#endif

  if(cdata == NULL) {
    return SWIG_ERROR;
  }
  if(cdata->info != info) {
    swig_cast_info *tc = SWIG_TypeCheckStruct(cdata->info, info);
    if (!tc && cdata->info->name) {
      tc = SWIG_TypeCheck(cdata->info->name, info);
    }
    bool type_valid = tc != 0;
    if(!type_valid) {
      return SWIG_TypeError;
    }
  }
  *ptr = cdata->swigCObject;
  if(flags & SWIG_POINTER_DISOWN) {
    cdata->swigCMemOwn = false;
  }
  return SWIG_OK;
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
SWIGRUNTIME void SWIGV8_Proxy_DefaultDtor(v8::Persistent< v8::Value > object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
SWIGRUNTIME void SWIGV8_Proxy_DefaultDtor(v8::Isolate *, v8::Persistent< v8::Value > object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
SWIGRUNTIME void SWIGV8_Proxy_DefaultDtor(v8::Isolate *, v8::Persistent< v8::Object > *object, SWIGV8_Proxy *proxy) {
#else
SWIGRUNTIME void SWIGV8_Proxy_DefaultDtor(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
#endif

  delete proxy;
}

SWIGRUNTIME int SWIG_V8_GetInstancePtr(v8::Handle<v8::Value> valRef, void **ptr) {
  if(!valRef->IsObject()) {
    return SWIG_TypeError;
  }
  v8::Handle<v8::Object> objRef = valRef->ToObject();

  if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
  v8::Handle<v8::Value> cdataRef = objRef->GetInternalField(0);
  SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(v8::External::Unwrap(cdataRef));
#else
  SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));
#endif

  if(cdata == NULL) {
    return SWIG_ERROR;
  }

  *ptr = cdata->swigCObject;

  return SWIG_OK;
}

SWIGRUNTIME void SWIGV8_SetPrivateData(v8::Handle<v8::Object> obj, void *ptr, swig_type_info *info, int flags) {
  SWIGV8_Proxy *cdata = new SWIGV8_Proxy();
  cdata->swigCObject = ptr;
  cdata->swigCMemOwn = (flags & SWIG_POINTER_OWN) ? 1 : 0;
  cdata->info = info;

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
  obj->SetPointerInInternalField(0, cdata);
#else
  obj->SetAlignedPointerInInternalField(0, cdata);
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
  cdata->handle = v8::Persistent<v8::Object>::New(obj);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  cdata->handle = v8::Persistent<v8::Object>::New(v8::Isolate::GetCurrent(), obj);
#else
  cdata->handle.Reset(v8::Isolate::GetCurrent(), obj);
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
  // clientdata must be set for owned data as we need to register the dtor
  if(cdata->swigCMemOwn && (SWIGV8_ClientData*)info->clientdata) {
    cdata->handle.MakeWeak(cdata, ((SWIGV8_ClientData*)info->clientdata)->dtor);
  } else {
    cdata->handle.MakeWeak(cdata, SWIGV8_Proxy_DefaultDtor);
  }
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031918)
  if(cdata->swigCMemOwn && (SWIGV8_ClientData*)info->clientdata) {
    cdata->handle.MakeWeak(v8::Isolate::GetCurrent(), cdata, ((SWIGV8_ClientData*)info->clientdata)->dtor);
  } else {
    cdata->handle.MakeWeak(v8::Isolate::GetCurrent(), cdata, SWIGV8_Proxy_DefaultDtor);
  }
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
  if(cdata->swigCMemOwn && (SWIGV8_ClientData*)info->clientdata) {
    cdata->handle.MakeWeak(cdata, ((SWIGV8_ClientData*)info->clientdata)->dtor);
  } else {
    cdata->handle.MakeWeak(cdata, SWIGV8_Proxy_DefaultDtor);
  }
#else
  if(cdata->swigCMemOwn && (SWIGV8_ClientData*)info->clientdata) {
    cdata->handle.SetWeak(cdata, ((SWIGV8_ClientData*)info->clientdata)->dtor);
  } else {
    cdata->handle.SetWeak(cdata, SWIGV8_Proxy_DefaultDtor);
  }
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
  cdata->handle.MarkIndependent();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
  cdata->handle.MarkIndependent(v8::Isolate::GetCurrent());
#else
  cdata->handle.MarkIndependent();
#endif

}

SWIGRUNTIME int SWIG_V8_ConvertPtr(v8::Handle<v8::Value> valRef, void **ptr, swig_type_info *info, int flags) {
  SWIGV8_HANDLESCOPE();
  
  /* special case: JavaScript null => C NULL pointer */
  if(valRef->IsNull()) {
    *ptr=0;
    return SWIG_OK;
  }
  if(!valRef->IsObject()) {
    return SWIG_TypeError;
  }
  v8::Handle<v8::Object> objRef = valRef->ToObject();
  return SWIG_V8_ConvertInstancePtr(objRef, ptr, info, flags);
}

SWIGRUNTIME v8::Handle<v8::Value> SWIG_V8_NewPointerObj(void *ptr, swig_type_info *info, int flags) {
  SWIGV8_HANDLESCOPE_ESC();
  
  v8::Handle<v8::FunctionTemplate> class_templ;

  if (ptr == NULL) {
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    SWIGV8_ESCAPE(SWIGV8_NULL());
#else    
    v8::Local<v8::Primitive> result = SWIGV8_NULL();
    SWIGV8_ESCAPE(result);
#endif
  }

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
  if(info->clientdata != 0) {
    class_templ = ((SWIGV8_ClientData*) info->clientdata)->class_templ;
  } else {
    class_templ = SWIGV8_SWIGTYPE_Proxy_class_templ;
  }
#else
  v8::Isolate *isolate = v8::Isolate::GetCurrent();

  if(info->clientdata != 0) {
    class_templ = v8::Local<v8::FunctionTemplate>::New(isolate, ((SWIGV8_ClientData*) info->clientdata)->class_templ);
  } else {
    class_templ = v8::Local<v8::FunctionTemplate>::New(isolate, SWIGV8_SWIGTYPE_Proxy_class_templ);
  }
#endif

//  v8::Handle<v8::Object> result = class_templ->InstanceTemplate()->NewInstance();
  v8::Local<v8::Object> result = class_templ->InstanceTemplate()->NewInstance();
  SWIGV8_SetPrivateData(result, ptr, info, flags);

  SWIGV8_ESCAPE(result);
}

#define SWIG_ConvertPtr(obj, ptr, info, flags)    SWIG_V8_ConvertPtr(obj, ptr, info, flags)
#define SWIG_NewPointerObj(ptr, info, flags)      SWIG_V8_NewPointerObj(ptr, info, flags)

#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_V8_ConvertInstancePtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(thisvalue, type, flags)     SWIG_V8_NewPointerObj(thisvalue, type, flags)

#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_V8_ConvertPtr(obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_V8_NewPointerObj(ptr, type, 0)

#define SWIG_GetInstancePtr(obj, ptr)    SWIG_V8_GetInstancePtr(obj, ptr)

SWIGRUNTIME SwigV8ReturnValue _SWIGV8_wrap_equals(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  bool result;
  int res1;
  int res2;

  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for equals.");

  res1 = SWIG_GetInstancePtr(args.Holder(), &arg1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ERROR, "Could not get pointer from 'this' object for equals.");
  }
  res2 = SWIG_GetInstancePtr(args[0], &arg2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "equals" "', argument " "1"" of type '" "void *""'");
  }

  result = (bool)(arg1 == arg2);
  jsresult =  SWIGV8_BOOLEAN_NEW(result);

  SWIGV8_RETURN(jsresult);
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}

SWIGRUNTIME SwigV8ReturnValue _wrap_getCPtr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  void *arg1 = (void *) 0 ;
  long result;
  int res1;

  res1 = SWIG_GetInstancePtr(args.Holder(), &arg1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getCPtr" "', argument " "1"" of type '" "void *""'");
  }

  result = (long)arg1;
  jsresult = SWIGV8_NUMBER_NEW(result);

  SWIGV8_RETURN(jsresult);
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}

/* ---------------------------------------------------------------------------
 * PackedData object
 *
 * ---------------------------------------------------------------------------*/

class SwigV8PackedData {
public:
  SwigV8PackedData(void *data, size_t size, swig_type_info *type): data(data), size(size), type(type) {};

  ~SwigV8PackedData() {
  };

  void *data;
  size_t size;
  swig_type_info *type;

  v8::Persistent<v8::Object> handle;
};

SWIGRUNTIMEINLINE
int SwigV8Packed_Check(v8::Handle<v8::Value> valRef) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> objRef = valRef->ToObject();
  if(objRef->InternalFieldCount() < 1) return false;
  v8::Handle<v8::Value> flag = objRef->GetHiddenValue(SWIGV8_STRING_NEW("__swig__packed_data__"));
  return (flag->IsBoolean() && flag->BooleanValue());
}

SWIGRUNTIME
swig_type_info *SwigV8Packed_UnpackData(v8::Handle<v8::Value> valRef, void *ptr, size_t size) {
  if (SwigV8Packed_Check(valRef)) {
    SWIGV8_HANDLESCOPE();
    
    SwigV8PackedData *sobj;

    v8::Handle<v8::Object> objRef = valRef->ToObject();

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
    v8::Handle<v8::Value> cdataRef = objRef->GetInternalField(0);
    sobj = static_cast<SwigV8PackedData*>(v8::External::Unwrap(cdataRef));
#else
    sobj = static_cast<SwigV8PackedData*>(objRef->GetAlignedPointerFromInternalField(0));
#endif
    if (sobj == NULL || sobj->size != size) return 0;
    memcpy(ptr, sobj->data, size);
    return sobj->type;
  } else {
    return 0;
  }
}

SWIGRUNTIME
int SWIGV8_ConvertPacked(v8::Handle<v8::Value> valRef, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigV8Packed_UnpackData(valRef, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
SWIGRUNTIME void _wrap_SwigV8PackedData_delete(v8::Persistent< v8::Value > object, void *parameter) {
  SwigV8PackedData *cdata = static_cast<SwigV8PackedData *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
SWIGRUNTIME void _wrap_SwigV8PackedData_delete(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
  SwigV8PackedData *cdata = static_cast<SwigV8PackedData *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
SWIGRUNTIME void _wrap_SwigV8PackedData_delete(v8::Isolate *isolate, v8::Persistent<v8::Object> *object, SwigV8PackedData *cdata) {
#else
SWIGRUNTIME void _wrap_SwigV8PackedData_delete(const v8::WeakCallbackData<v8::Object, SwigV8PackedData> &data) {
  v8::Local<v8::Object> object = data.GetValue();
  SwigV8PackedData *cdata = data.GetParameter();
#endif

  delete cdata;

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
  object.Clear();
  object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  object.Clear();
  object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
  object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
  object->Dispose();
#else
  object.Clear();
#endif
}

SWIGRUNTIME
v8::Handle<v8::Value> SWIGV8_NewPackedObj(void *data, size_t size, swig_type_info *type) {
  SWIGV8_HANDLESCOPE_ESC();

  SwigV8PackedData *cdata = new SwigV8PackedData(data, size, type);
//  v8::Handle<v8::Object> obj = SWIGV8_OBJECT_NEW();
  v8::Local<v8::Object> obj = SWIGV8_OBJECT_NEW();

  obj->SetHiddenValue(SWIGV8_STRING_NEW("__swig__packed_data__"), SWIGV8_BOOLEAN_NEW(true));

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
  obj->SetPointerInInternalField(0, cdata);
#else
  obj->SetAlignedPointerInInternalField(0, cdata);
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
  cdata->handle = v8::Persistent<v8::Object>::New(obj);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  cdata->handle = v8::Persistent<v8::Object>::New(v8::Isolate::GetCurrent(), obj);
#else
  cdata->handle.Reset(v8::Isolate::GetCurrent(), obj);
#endif


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
  cdata->handle.MakeWeak(cdata, _wrap_SwigV8PackedData_delete);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031918)
  cdata->handle.MakeWeak(v8::Isolate::GetCurrent(), cdata, _wrap_SwigV8PackedData_delete);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
  cdata->handle.MakeWeak(cdata, _wrap_SwigV8PackedData_delete);
#else
  cdata->handle.SetWeak(cdata, _wrap_SwigV8PackedData_delete);
//  v8::V8::SetWeak(&cdata->handle, cdata, _wrap_SwigV8PackedData_delete);
#endif

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
  cdata->handle.MarkIndependent();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
  cdata->handle.MarkIndependent(v8::Isolate::GetCurrent());
#else
  cdata->handle.MarkIndependent();
#endif

  SWIGV8_ESCAPE(obj);
}

#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIGV8_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIGV8_NewPackedObj(ptr, sz, type)


/* ---------------------------------------------------------------------------
 * Support for IN/OUTPUT typemaps (see Lib/typemaps/inoutlist.swg)
 *
 * ---------------------------------------------------------------------------*/

SWIGRUNTIME

#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
v8::Handle<v8::Value> SWIGV8_AppendOutput(v8::Handle<v8::Value> result, v8::Handle<v8::Value> obj) {
#else
v8::Handle<v8::Value> SWIGV8_AppendOutput(v8::Local<v8::Value> result, v8::Handle<v8::Value> obj) {
#endif
  SWIGV8_HANDLESCOPE_ESC();
  
  if (result->IsUndefined()) {
    result = SWIGV8_ARRAY_NEW();
  }
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
  v8::Handle<v8::Array> arr = v8::Handle<v8::Array>::Cast(result);
#else  
  v8::Local<v8::Array> arr = v8::Local<v8::Array>::Cast(result);
#endif
  arr->Set(arr->Length(), obj);

  SWIGV8_ESCAPE(arr);
}



// Note: since 3.19 there are new CallBack types, since 03.21.9 the old ones have been removed
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
typedef v8::InvocationCallback  SwigV8FunctionCallback;
typedef v8::AccessorGetter      SwigV8AccessorGetterCallback;
typedef v8::AccessorSetter      SwigV8AccessorSetterCallback;
typedef v8::AccessorInfo        SwigV8PropertyCallbackInfoVoid;
#else
typedef v8::FunctionCallback            SwigV8FunctionCallback;
typedef v8::AccessorGetterCallback      SwigV8AccessorGetterCallback;
typedef v8::AccessorSetterCallback      SwigV8AccessorSetterCallback;
typedef v8::PropertyCallbackInfo<void>  SwigV8PropertyCallbackInfoVoid;
#endif

/**
 * Creates a class template for a class with specified initialization function.
 */
SWIGRUNTIME v8::Handle<v8::FunctionTemplate> SWIGV8_CreateClassTemplate(const char* symbol) {
    SWIGV8_HANDLESCOPE_ESC();
    
    v8::Local<v8::FunctionTemplate> class_templ = SWIGV8_FUNCTEMPLATE_NEW_VOID();
    class_templ->SetClassName(SWIGV8_SYMBOL_NEW(symbol));

    v8::Handle<v8::ObjectTemplate> inst_templ = class_templ->InstanceTemplate();
    inst_templ->SetInternalFieldCount(1);

    v8::Handle<v8::ObjectTemplate> equals_templ = class_templ->PrototypeTemplate();
    equals_templ->Set(SWIGV8_SYMBOL_NEW("equals"), SWIGV8_FUNCTEMPLATE_NEW(_SWIGV8_wrap_equals));

    v8::Handle<v8::ObjectTemplate> cptr_templ = class_templ->PrototypeTemplate();
    cptr_templ->Set(SWIGV8_SYMBOL_NEW("getCPtr"), SWIGV8_FUNCTEMPLATE_NEW(_wrap_getCPtr));

    SWIGV8_ESCAPE(class_templ);
}

/**
 * Registers a class method with given name for a given class template.
 */
SWIGRUNTIME void SWIGV8_AddMemberFunction(v8::Handle<v8::FunctionTemplate> class_templ, const char* symbol,
  SwigV8FunctionCallback _func) {
    v8::Handle<v8::ObjectTemplate> proto_templ = class_templ->PrototypeTemplate();
    proto_templ->Set(SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func));
}

/**
 * Registers a class property with given name for a given class template.
 */
SWIGRUNTIME void SWIGV8_AddMemberVariable(v8::Handle<v8::FunctionTemplate> class_templ, const char* symbol,
  SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter) {
  v8::Handle<v8::ObjectTemplate> proto_templ = class_templ->InstanceTemplate();
  proto_templ->SetAccessor(SWIGV8_SYMBOL_NEW(symbol), getter, setter);
}

/**
 * Registers a class method with given name for a given object.
 */
SWIGRUNTIME void SWIGV8_AddStaticFunction(v8::Handle<v8::Object> obj, const char* symbol,
  const SwigV8FunctionCallback& _func) {
  obj->Set(SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func)->GetFunction());
}

/**
 * Registers a class method with given name for a given object.
 */
SWIGRUNTIME void SWIGV8_AddStaticVariable(v8::Handle<v8::Object> obj, const char* symbol,
  SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter) {
  obj->SetAccessor(SWIGV8_SYMBOL_NEW(symbol), getter, setter);
}

SWIGRUNTIME void JS_veto_set_variable(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid& info)
{
    char buffer[256];
    char msg[512];
    int res;

    property->WriteUtf8(buffer, 256);
    res = sprintf(msg, "Tried to write read-only variable: %s.", buffer);

    if(res<0) {
      SWIG_exception(SWIG_ERROR, "Tried to write read-only variable.");
    } else {
      SWIG_exception(SWIG_ERROR, msg);
    }
fail: ;
}



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ArgDef swig_types[0]
#define SWIGTYPE_p_AttrDef swig_types[1]
#define SWIGTYPE_p_Reflection swig_types[2]
#define SWIGTYPE_p_TF_AttrMetadata swig_types[3]
#define SWIGTYPE_p_TF_AttrType swig_types[4]
#define SWIGTYPE_p_TF_Buffer swig_types[5]
#define SWIGTYPE_p_TF_Code swig_types[6]
#define SWIGTYPE_p_TF_DataType swig_types[7]
#define SWIGTYPE_p_TF_DeprecatedSession swig_types[8]
#define SWIGTYPE_p_TF_Graph swig_types[9]
#define SWIGTYPE_p_TF_ImportGraphDefOptions swig_types[10]
#define SWIGTYPE_p_TF_Input swig_types[11]
#define SWIGTYPE_p_TF_Library swig_types[12]
#define SWIGTYPE_p_TF_Operation swig_types[13]
#define SWIGTYPE_p_TF_OperationDescription swig_types[14]
#define SWIGTYPE_p_TF_Output swig_types[15]
#define SWIGTYPE_p_TF_Session swig_types[16]
#define SWIGTYPE_p_TF_SessionOptions swig_types[17]
#define SWIGTYPE_p_TF_Status swig_types[18]
#define SWIGTYPE_p_TF_Tensor swig_types[19]
#define SWIGTYPE_p_char swig_types[20]
#define SWIGTYPE_p_f_p_void_size_t__void swig_types[21]
#define SWIGTYPE_p_f_p_void_size_t_p_void__void swig_types[22]
#define SWIGTYPE_p_f_r_q_const__string__void swig_types[23]
#define SWIGTYPE_p_float swig_types[24]
#define SWIGTYPE_p_google__protobuf__Arena swig_types[25]
#define SWIGTYPE_p_google__protobuf__Descriptor swig_types[26]
#define SWIGTYPE_p_google__protobuf__EnumValueDescriptor swig_types[27]
#define SWIGTYPE_p_google__protobuf__FieldDescriptor swig_types[28]
#define SWIGTYPE_p_google__protobuf__Message swig_types[29]
#define SWIGTYPE_p_google__protobuf__MessageFactory swig_types[30]
#define SWIGTYPE_p_google__protobuf__MessageLite swig_types[31]
#define SWIGTYPE_p_google__protobuf__Metadata swig_types[32]
#define SWIGTYPE_p_google__protobuf__OneofDescriptor swig_types[33]
#define SWIGTYPE_p_google__protobuf__Reflection swig_types[34]
#define SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t swig_types[35]
#define SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_AttrDef_t swig_types[36]
#define SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_t swig_types[37]
#define SWIGTYPE_p_google__protobuf__UnknownFieldSet swig_types[38]
#define SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_ArgDef_t swig_types[39]
#define SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_AttrDef_t swig_types[40]
#define SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_t swig_types[41]
#define SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDeprecation_t swig_types[42]
#define SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpList_t swig_types[43]
#define SWIGTYPE_p_google__protobuf__io__CodedInputStream swig_types[44]
#define SWIGTYPE_p_google__protobuf__io__CodedOutputStream swig_types[45]
#define SWIGTYPE_p_google__protobuf__io__ZeroCopyInputStream swig_types[46]
#define SWIGTYPE_p_google__protobuf__io__ZeroCopyOutputStream swig_types[47]
#define SWIGTYPE_p_int swig_types[48]
#define SWIGTYPE_p_int16_t swig_types[49]
#define SWIGTYPE_p_int32_t swig_types[50]
#define SWIGTYPE_p_int64_t swig_types[51]
#define SWIGTYPE_p_int8_t swig_types[52]
#define SWIGTYPE_p_p_TF_Buffer swig_types[53]
#define SWIGTYPE_p_p_TF_Operation swig_types[54]
#define SWIGTYPE_p_p_TF_Tensor swig_types[55]
#define SWIGTYPE_p_p_char swig_types[56]
#define SWIGTYPE_p_p_int64_t swig_types[57]
#define SWIGTYPE_p_p_void swig_types[58]
#define SWIGTYPE_p_size_t swig_types[59]
#define SWIGTYPE_p_size_type swig_types[60]
#define SWIGTYPE_p_std__istream swig_types[61]
#define SWIGTYPE_p_std__ostream swig_types[62]
#define SWIGTYPE_p_std__string swig_types[63]
#define SWIGTYPE_p_std__vectorT_google__protobuf__FieldDescriptor_const_p_t swig_types[64]
#define SWIGTYPE_p_std__vectorT_string_t swig_types[65]
#define SWIGTYPE_p_std__string swig_types[66]
#define SWIGTYPE_p_tensorflow__AttrValue swig_types[67]
#define SWIGTYPE_p_tensorflow__DataType swig_types[68]
#define SWIGTYPE_p_tensorflow__OpDef swig_types[69]
#define SWIGTYPE_p_tensorflow__OpDef_ArgDef swig_types[70]
#define SWIGTYPE_p_tensorflow__OpDef_AttrDef swig_types[71]
#define SWIGTYPE_p_tensorflow__OpDeprecation swig_types[72]
#define SWIGTYPE_p_tensorflow__OpList swig_types[73]
#define SWIGTYPE_p_tensorflow__StringPiece swig_types[74]
#define SWIGTYPE_p_uint16_t swig_types[75]
#define SWIGTYPE_p_uint32_t swig_types[76]
#define SWIGTYPE_p_uint64_t swig_types[77]
#define SWIGTYPE_p_uint8_t swig_types[78]
#define SWIGTYPE_p_unsigned_char swig_types[79]
#define SWIGTYPE_p_unsigned_int swig_types[80]
#define SWIGTYPE_p_void swig_types[81]
static swig_type_info *swig_types[83];
static swig_module_info swig_module = {swig_types, 82, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */



#define SWIGVERSION 0x030012 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) (void *)((const void *)(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),(void**)(a)) 


#include <stdexcept>


#include "c_api.h"
#include "tensorflow/core/util/port.h"
#include "tensorflow/core/public/version.h"
#include "tensorflow/core/framework/op_def.pb.h"
#include "tensorflow/core/lib/core/stringpiece.h"

using namespace std;
#include "google/protobuf/stubs/port.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/message.h"


SWIGINTERNINLINE
v8::Handle<v8::Value>
SWIG_From_bool  (bool value)
{
  return SWIGV8_BOOLEAN_NEW(value);
}


SWIGINTERN
int SWIG_AsVal_int (v8::Handle<v8::Value> valRef, int* val)
{
  if (!valRef->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = valRef->IntegerValue();

  return SWIG_OK;
}


SWIGINTERNINLINE
v8::Handle<v8::Value> SWIG_From_int  (int value)
{
  return SWIGV8_INT32_NEW(value);
}


SWIGINTERNINLINE
v8::Handle<v8::Value> SWIG_From_long  (long value)
{
  return SWIGV8_NUMBER_NEW(value);
}


SWIGINTERNINLINE
v8::Handle<v8::Value> SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    SWIGV8_INTEGER_NEW_UNS(value) : SWIGV8_INTEGER_NEW((long)(value));
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE
v8::Handle<v8::Value> SWIG_From_long_SS_long  (long long value)
{
  return SWIGV8_NUMBER_NEW(value);
}
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE
v8::Handle<v8::Value> SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    SWIGV8_INTEGER_NEW_UNS(value) : SWIGV8_INTEGER_NEW((long)(value));
}
#endif


SWIGINTERNINLINE v8::Handle<v8::Value>
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  ((unsigned long)(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  ((unsigned long long)(value));
  }
#endif
}


SWIGINTERN
int SWIG_AsVal_double (v8::Handle<v8::Value> obj, double *val)
{
  if(!obj->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = obj->NumberValue();

  return SWIG_OK;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN
int SWIG_AsVal_long (v8::Handle<v8::Value> obj, long* val)
{
  if (!obj->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = (long) obj->IntegerValue();

  return SWIG_OK;
}


SWIGINTERN
int SWIG_AsVal_bool (v8::Handle<v8::Value> obj, bool *val)
{
  if(!obj->IsBoolean()) {
    return SWIG_ERROR;
  }

  if (val) *val = obj->BooleanValue();
  return SWIG_OK;
}


SWIGINTERN
v8::Handle<v8::Value> SWIG_From_double   (double val)
{
  return SWIGV8_NUMBER_NEW(val);
}


SWIGINTERNINLINE v8::Handle<v8::Value>
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined __cplusplus && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 *
 * extern "C++" is required as this fragment can end up inside an extern "C" { } block
 */
namespace std { }
extern "C++" template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (v8::Handle<v8::Value> obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = (float)(v);
    }
  }  
  return res;
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(v8::Handle<v8::Value> valRef, char** cptr, size_t* psize, int *alloc)
{
  if(valRef->IsString()) {
    v8::Handle<v8::String> js_str = valRef->ToString();

    size_t len = js_str->Utf8Length() + 1;
    char* cstr = new char[len];
    js_str->WriteUtf8(cstr, len);
    
    if(alloc) *alloc = SWIG_NEWOBJ;
    if(psize) *psize = len;
    if(cptr) *cptr = cstr;
    
    return SWIG_OK;
  } else {
    if(valRef->IsObject()) {
      v8::Handle<v8::Object> obj = valRef->ToObject();
      // try if the object is a wrapped char[]
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      if (pchar_descriptor) {
        void* vptr = 0;
        if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
          if (cptr) *cptr = (char *) vptr;
          if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
          if (alloc) *alloc = SWIG_OLDOBJ;
          return SWIG_OK;
        }
      }
      return SWIG_TypeError;
    } else {
      return SWIG_TypeError;
    }
  }
}





SWIGINTERNINLINE v8::Handle<v8::Value>
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      // TODO: handle extra long strings
      return SWIGV8_UNDEFINED();
    } else {
      v8::Handle<v8::String> js_str = SWIGV8_STRING_NEW2(carray, size);
      return js_str;
    }
  } else {
    return SWIGV8_UNDEFINED();
  }
}


SWIGINTERNINLINE v8::Handle<v8::Value> 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN
int SWIG_AsVal_unsigned_SS_long (v8::Handle<v8::Value> obj, unsigned long *val)
{
  if(!obj->IsNumber()) {
    return SWIG_TypeError;
  }

  long longVal = (long) obj->NumberValue();

  if(longVal < 0) {
      return SWIG_OverflowError;
  }

  if(val) *val = longVal;

  return SWIG_OK;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN
int SWIG_AsVal_unsigned_SS_long_SS_long (v8::Handle<v8::Value> obj, unsigned long long *val)
{
  if(!obj->IsNumber()) {
    return SWIG_TypeError;
  }

  long long longVal = (long long) obj->NumberValue();

  if(longVal < 0) {
      return SWIG_OverflowError;
  }

  if(val) *val = longVal;

  return SWIG_OK;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (v8::Handle<v8::Value> obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = (size_t)(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = (size_t)(v);
  }
#endif
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (v8::Handle<v8::Value> obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = (unsigned char)(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE v8::Handle<v8::Value>
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN int
SWIG_AsCharArray(v8::Handle<v8::Value> obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    /* special case of single char conversion when we don't need space for NUL */
    if (size == 1 && csize == 2 && cptr && !cptr[1]) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char (v8::Handle<v8::Value> obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long (obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = (char)(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}


#define SWIGV8_INIT tensorflow_initialize


SWIGV8_ClientData _exports_MessageLite_clientData;
SWIGV8_ClientData _exports_Metadata_clientData;
SWIGV8_ClientData _exports_Message_clientData;
SWIGV8_ClientData _exports_Reflection_clientData;
SWIGV8_ClientData _exports_MessageFactory_clientData;
SWIGV8_ClientData _exports_TF_Buffer_clientData;
SWIGV8_ClientData _exports_TF_Input_clientData;
SWIGV8_ClientData _exports_TF_Output_clientData;
SWIGV8_ClientData _exports_TF_AttrMetadata_clientData;
SWIGV8_ClientData _exports_OpDef_ArgDef_clientData;
SWIGV8_ClientData _exports_OpDef_AttrDef_clientData;
SWIGV8_ClientData _exports_OpDef_clientData;
SWIGV8_ClientData _exports_OpDeprecation_clientData;
SWIGV8_ClientData _exports_OpList_clientData;
SWIGV8_ClientData _exports_StringPiece_clientData;


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_MessageLite(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_MessageLite(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_MessageLite(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_MessageLite(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          google::protobuf::MessageLite * arg1 = (google::protobuf::MessageLite *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_MessageLite_GetTypeName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_GetTypeName.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_GetTypeName" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = ((google::protobuf::MessageLite const *)arg1)->GetTypeName();
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_New__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  google::protobuf::MessageLite *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_New" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = (google::protobuf::MessageLite *)((google::protobuf::MessageLite const *)arg1)->New();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_New__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  ::google::protobuf::Arena *arg2 = (::google::protobuf::Arena *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  google::protobuf::MessageLite *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_New" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_New" "', argument " "2"" of type '" "::google::protobuf::Arena *""'"); 
  }
  arg2 = (::google::protobuf::Arena *)(argp2);
  result = (google::protobuf::MessageLite *)((google::protobuf::MessageLite const *)arg1)->New(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite__wrap_MessageLite_New(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_MessageLite_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_MessageLite_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_MessageLite_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_MessageLite_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function New.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_GetArena(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Arena *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_GetArena.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_GetArena" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = (::google::protobuf::Arena *)((google::protobuf::MessageLite const *)arg1)->GetArena();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_GetMaybeArenaPointer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_GetMaybeArenaPointer.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_GetMaybeArenaPointer" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = (void *)((google::protobuf::MessageLite const *)arg1)->GetMaybeArenaPointer();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_Clear(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_Clear.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_Clear" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  (arg1)->Clear();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_IsInitialized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_IsInitialized.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_IsInitialized" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->IsInitialized();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_InitializationErrorString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_InitializationErrorString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_InitializationErrorString" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = ((google::protobuf::MessageLite const *)arg1)->InitializationErrorString();
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_CheckTypeAndMergeFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::MessageLite *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_CheckTypeAndMergeFrom.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_CheckTypeAndMergeFrom" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__MessageLite,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_CheckTypeAndMergeFrom" "', argument " "2"" of type '" "google::protobuf::MessageLite const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MessageLite_CheckTypeAndMergeFrom" "', argument " "2"" of type '" "google::protobuf::MessageLite const &""'"); 
  }
  arg2 = (google::protobuf::MessageLite *)(argp2);
  (arg1)->CheckTypeAndMergeFrom((google::protobuf::MessageLite const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParseFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::CodedInputStream *arg2 = (google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParseFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParseFromCodedStream" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParseFromCodedStream" "', argument " "2"" of type '" "google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->ParseFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParsePartialFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::CodedInputStream *arg2 = (google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParsePartialFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParsePartialFromCodedStream" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParsePartialFromCodedStream" "', argument " "2"" of type '" "google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->ParsePartialFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParseFromZeroCopyStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::ZeroCopyInputStream *arg2 = (google::protobuf::io::ZeroCopyInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParseFromZeroCopyStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParseFromZeroCopyStream" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__ZeroCopyInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParseFromZeroCopyStream" "', argument " "2"" of type '" "google::protobuf::io::ZeroCopyInputStream *""'"); 
  }
  arg2 = (google::protobuf::io::ZeroCopyInputStream *)(argp2);
  result = (bool)(arg1)->ParseFromZeroCopyStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParsePartialFromZeroCopyStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::ZeroCopyInputStream *arg2 = (google::protobuf::io::ZeroCopyInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParsePartialFromZeroCopyStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParsePartialFromZeroCopyStream" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__ZeroCopyInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParsePartialFromZeroCopyStream" "', argument " "2"" of type '" "google::protobuf::io::ZeroCopyInputStream *""'"); 
  }
  arg2 = (google::protobuf::io::ZeroCopyInputStream *)(argp2);
  result = (bool)(arg1)->ParsePartialFromZeroCopyStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParseFromBoundedZeroCopyStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::ZeroCopyInputStream *arg2 = (google::protobuf::io::ZeroCopyInputStream *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParseFromBoundedZeroCopyStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParseFromBoundedZeroCopyStream" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__ZeroCopyInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParseFromBoundedZeroCopyStream" "', argument " "2"" of type '" "google::protobuf::io::ZeroCopyInputStream *""'"); 
  }
  arg2 = (google::protobuf::io::ZeroCopyInputStream *)(argp2);
  ecode3 = SWIG_AsVal_int(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MessageLite_ParseFromBoundedZeroCopyStream" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (bool)(arg1)->ParseFromBoundedZeroCopyStream(arg2,arg3);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParsePartialFromBoundedZeroCopyStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::ZeroCopyInputStream *arg2 = (google::protobuf::io::ZeroCopyInputStream *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParsePartialFromBoundedZeroCopyStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParsePartialFromBoundedZeroCopyStream" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__ZeroCopyInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParsePartialFromBoundedZeroCopyStream" "', argument " "2"" of type '" "google::protobuf::io::ZeroCopyInputStream *""'"); 
  }
  arg2 = (google::protobuf::io::ZeroCopyInputStream *)(argp2);
  ecode3 = SWIG_AsVal_int(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MessageLite_ParsePartialFromBoundedZeroCopyStream" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (bool)(arg1)->ParsePartialFromBoundedZeroCopyStream(arg2,arg3);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParseFromString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParseFromString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParseFromString" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParseFromString" "', argument " "2"" of type '" "string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MessageLite_ParseFromString" "', argument " "2"" of type '" "string const &""'"); 
  }
  arg2 = (string *)(argp2);
  result = (bool)(arg1)->ParseFromString((string const &)*arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParsePartialFromString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParsePartialFromString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParsePartialFromString" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParsePartialFromString" "', argument " "2"" of type '" "string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MessageLite_ParsePartialFromString" "', argument " "2"" of type '" "string const &""'"); 
  }
  arg2 = (string *)(argp2);
  result = (bool)(arg1)->ParsePartialFromString((string const &)*arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParseFromArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  int val3 ;
  int ecode3 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParseFromArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParseFromArray" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg2), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParseFromArray" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_int(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MessageLite_ParseFromArray" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (bool)(arg1)->ParseFromArray((void const *)arg2,arg3);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ParsePartialFromArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  int val3 ;
  int ecode3 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ParsePartialFromArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ParsePartialFromArray" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg2), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_ParsePartialFromArray" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_int(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MessageLite_ParsePartialFromArray" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (bool)(arg1)->ParsePartialFromArray((void const *)arg2,arg3);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_MergeFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::CodedInputStream *arg2 = (google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_MergeFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_MergeFromCodedStream" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_MergeFromCodedStream" "', argument " "2"" of type '" "google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->MergeFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_MergePartialFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::CodedInputStream *arg2 = (google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_MergePartialFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_MergePartialFromCodedStream" "', argument " "1"" of type '" "google::protobuf::MessageLite *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_MergePartialFromCodedStream" "', argument " "2"" of type '" "google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->MergePartialFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializeToCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::CodedOutputStream *arg2 = (google::protobuf::io::CodedOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializeToCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializeToCodedStream" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializeToCodedStream" "', argument " "2"" of type '" "google::protobuf::io::CodedOutputStream *""'"); 
  }
  arg2 = (google::protobuf::io::CodedOutputStream *)(argp2);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->SerializeToCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializePartialToCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::CodedOutputStream *arg2 = (google::protobuf::io::CodedOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializePartialToCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializePartialToCodedStream" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializePartialToCodedStream" "', argument " "2"" of type '" "google::protobuf::io::CodedOutputStream *""'"); 
  }
  arg2 = (google::protobuf::io::CodedOutputStream *)(argp2);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->SerializePartialToCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializeToZeroCopyStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::ZeroCopyOutputStream *arg2 = (google::protobuf::io::ZeroCopyOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializeToZeroCopyStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializeToZeroCopyStream" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__ZeroCopyOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializeToZeroCopyStream" "', argument " "2"" of type '" "google::protobuf::io::ZeroCopyOutputStream *""'"); 
  }
  arg2 = (google::protobuf::io::ZeroCopyOutputStream *)(argp2);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->SerializeToZeroCopyStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializePartialToZeroCopyStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::ZeroCopyOutputStream *arg2 = (google::protobuf::io::ZeroCopyOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializePartialToZeroCopyStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializePartialToZeroCopyStream" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__ZeroCopyOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializePartialToZeroCopyStream" "', argument " "2"" of type '" "google::protobuf::io::ZeroCopyOutputStream *""'"); 
  }
  arg2 = (google::protobuf::io::ZeroCopyOutputStream *)(argp2);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->SerializePartialToZeroCopyStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializeToString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  string *arg2 = (string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializeToString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializeToString" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializeToString" "', argument " "2"" of type '" "string *""'"); 
  }
  arg2 = (string *)(argp2);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->SerializeToString(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializePartialToString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  string *arg2 = (string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializePartialToString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializePartialToString" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializePartialToString" "', argument " "2"" of type '" "string *""'"); 
  }
  arg2 = (string *)(argp2);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->SerializePartialToString(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializeToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  int val3 ;
  int ecode3 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializeToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializeToArray" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg2), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializeToArray" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_int(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MessageLite_SerializeToArray" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->SerializeToArray(arg2,arg3);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializePartialToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  int val3 ;
  int ecode3 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializePartialToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializePartialToArray" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg2), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializePartialToArray" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_int(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MessageLite_SerializePartialToArray" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->SerializePartialToArray(arg2,arg3);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializeAsString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializeAsString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializeAsString" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = ((google::protobuf::MessageLite const *)arg1)->SerializeAsString();
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializePartialAsString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializePartialAsString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializePartialAsString" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = ((google::protobuf::MessageLite const *)arg1)->SerializePartialAsString();
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_AppendToString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  string *arg2 = (string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_AppendToString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_AppendToString" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_AppendToString" "', argument " "2"" of type '" "string *""'"); 
  }
  arg2 = (string *)(argp2);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->AppendToString(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_AppendPartialToString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  string *arg2 = (string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_AppendPartialToString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_AppendPartialToString" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_AppendPartialToString" "', argument " "2"" of type '" "string *""'"); 
  }
  arg2 = (string *)(argp2);
  result = (bool)((google::protobuf::MessageLite const *)arg1)->AppendPartialToString(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ByteSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ByteSize.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ByteSize" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = (int)((google::protobuf::MessageLite const *)arg1)->ByteSize();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_ByteSizeLong(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_ByteSizeLong.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_ByteSizeLong" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = ((google::protobuf::MessageLite const *)arg1)->ByteSizeLong();
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializeWithCachedSizes(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::io::CodedOutputStream *arg2 = (google::protobuf::io::CodedOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializeWithCachedSizes.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializeWithCachedSizes" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializeWithCachedSizes" "', argument " "2"" of type '" "google::protobuf::io::CodedOutputStream *""'"); 
  }
  arg2 = (google::protobuf::io::CodedOutputStream *)(argp2);
  ((google::protobuf::MessageLite const *)arg1)->SerializeWithCachedSizes(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_SerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  google::protobuf::uint8 *arg2 = (google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_SerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_SerializeWithCachedSizesToArray" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageLite_SerializeWithCachedSizesToArray" "', argument " "2"" of type '" "google::protobuf::uint8 *""'"); 
  }
  arg2 = (google::protobuf::uint8 *)(argp2);
  result = (google::protobuf::uint8 *)((google::protobuf::MessageLite const *)arg1)->SerializeWithCachedSizesToArray(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_GetCachedSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_GetCachedSize.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_GetCachedSize" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  result = (int)((google::protobuf::MessageLite const *)arg1)->GetCachedSize();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageLite_InternalSerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageLite *arg1 = (google::protobuf::MessageLite *) 0 ;
  bool arg2 ;
  google::protobuf::uint8 *arg3 = (google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageLite_InternalSerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageLite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageLite_InternalSerializeWithCachedSizesToArray" "', argument " "1"" of type '" "google::protobuf::MessageLite const *""'"); 
  }
  arg1 = (google::protobuf::MessageLite *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MessageLite_InternalSerializeWithCachedSizesToArray" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MessageLite_InternalSerializeWithCachedSizesToArray" "', argument " "3"" of type '" "google::protobuf::uint8 *""'"); 
  }
  arg3 = (google::protobuf::uint8 *)(argp3);
  result = (google::protobuf::uint8 *)((google::protobuf::MessageLite const *)arg1)->InternalSerializeWithCachedSizesToArray(arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_veto_MessageLite(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIG_exception(SWIG_ERROR, "Class MessageLite can not be instantiated");
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_Metadata_descriptor_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  google::protobuf::Metadata *arg1 = (google::protobuf::Metadata *) 0 ;
  google::protobuf::Descriptor *arg2 = (google::protobuf::Descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Metadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metadata_descriptor_set" "', argument " "1"" of type '" "google::protobuf::Metadata *""'"); 
  }
  arg1 = (google::protobuf::Metadata *)(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_google__protobuf__Descriptor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Metadata_descriptor_set" "', argument " "2"" of type '" "google::protobuf::Descriptor const *""'"); 
  }
  arg2 = (google::protobuf::Descriptor *)(argp2);
  if (arg1) (arg1)->descriptor = (google::protobuf::Descriptor const *)arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_Metadata_descriptor_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Metadata *arg1 = (google::protobuf::Metadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  google::protobuf::Descriptor *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Metadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metadata_descriptor_get" "', argument " "1"" of type '" "google::protobuf::Metadata *""'"); 
  }
  arg1 = (google::protobuf::Metadata *)(argp1);
  result = (google::protobuf::Descriptor *) ((arg1)->descriptor);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Descriptor, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_Metadata_reflection_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  google::protobuf::Metadata *arg1 = (google::protobuf::Metadata *) 0 ;
  google::protobuf::Reflection *arg2 = (google::protobuf::Reflection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Metadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metadata_reflection_set" "', argument " "1"" of type '" "google::protobuf::Metadata *""'"); 
  }
  arg1 = (google::protobuf::Metadata *)(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_google__protobuf__Reflection, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Metadata_reflection_set" "', argument " "2"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg2 = (google::protobuf::Reflection *)(argp2);
  if (arg1) (arg1)->reflection = (google::protobuf::Reflection const *)arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_Metadata_reflection_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Metadata *arg1 = (google::protobuf::Metadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  google::protobuf::Reflection *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Metadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metadata_reflection_get" "', argument " "1"" of type '" "google::protobuf::Metadata *""'"); 
  }
  arg1 = (google::protobuf::Metadata *)(argp1);
  result = (google::protobuf::Reflection *) ((arg1)->reflection);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_Metadata(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  google::protobuf::Metadata *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_Metadata.");
  result = (google::protobuf::Metadata *)new google::protobuf::Metadata();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_google__protobuf__Metadata, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_Metadata(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_Metadata(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_Metadata(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_Metadata(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          google::protobuf::Metadata * arg1 = (google::protobuf::Metadata *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_Message(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_Message(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_Message(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_Message(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          google::protobuf::Message * arg1 = (google::protobuf::Message *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_Message_New__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_New" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = (google::protobuf::Message *)((google::protobuf::Message const *)arg1)->New();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_New__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  ::google::protobuf::Arena *arg2 = (::google::protobuf::Arena *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_New" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_New" "', argument " "2"" of type '" "::google::protobuf::Arena *""'"); 
  }
  arg2 = (::google::protobuf::Arena *)(argp2);
  result = (google::protobuf::Message *)((google::protobuf::Message const *)arg1)->New(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message__wrap_Message_New(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Message_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Message_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Message_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Message_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function New.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_CopyFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_CopyFrom.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_CopyFrom" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_CopyFrom" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Message_CopyFrom" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  (arg1)->CopyFrom((google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_MergeFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_MergeFrom.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_MergeFrom" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_MergeFrom" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Message_MergeFrom" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  (arg1)->MergeFrom((google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_CheckInitialized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_CheckInitialized.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_CheckInitialized" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  ((google::protobuf::Message const *)arg1)->CheckInitialized();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_FindInitializationErrors(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  std::vector< string > *arg2 = (std::vector< string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_FindInitializationErrors.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_FindInitializationErrors" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__vectorT_string_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_FindInitializationErrors" "', argument " "2"" of type '" "std::vector< string > *""'"); 
  }
  arg2 = (std::vector< string > *)(argp2);
  ((google::protobuf::Message const *)arg1)->FindInitializationErrors(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_InitializationErrorString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_InitializationErrorString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_InitializationErrorString" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = ((google::protobuf::Message const *)arg1)->InitializationErrorString();
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_DiscardUnknownFields(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_DiscardUnknownFields.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_DiscardUnknownFields" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  (arg1)->DiscardUnknownFields();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_SpaceUsed(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_SpaceUsed.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_SpaceUsed" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = (int)((google::protobuf::Message const *)arg1)->SpaceUsed();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_DebugString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_DebugString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_DebugString" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = ((google::protobuf::Message const *)arg1)->DebugString();
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_ShortDebugString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_ShortDebugString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_ShortDebugString" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = ((google::protobuf::Message const *)arg1)->ShortDebugString();
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_Utf8DebugString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_Utf8DebugString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_Utf8DebugString" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = ((google::protobuf::Message const *)arg1)->Utf8DebugString();
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_PrintDebugString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_PrintDebugString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_PrintDebugString" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  ((google::protobuf::Message const *)arg1)->PrintDebugString();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_ParseFromFileDescriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_ParseFromFileDescriptor.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_ParseFromFileDescriptor" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Message_ParseFromFileDescriptor" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (bool)(arg1)->ParseFromFileDescriptor(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_ParsePartialFromFileDescriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_ParsePartialFromFileDescriptor.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_ParsePartialFromFileDescriptor" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Message_ParsePartialFromFileDescriptor" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (bool)(arg1)->ParsePartialFromFileDescriptor(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_ParseFromIstream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  std::istream *arg2 = (std::istream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_ParseFromIstream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_ParseFromIstream" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__istream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_ParseFromIstream" "', argument " "2"" of type '" "std::istream *""'"); 
  }
  arg2 = (std::istream *)(argp2);
  result = (bool)(arg1)->ParseFromIstream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_ParsePartialFromIstream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  std::istream *arg2 = (std::istream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_ParsePartialFromIstream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_ParsePartialFromIstream" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__istream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_ParsePartialFromIstream" "', argument " "2"" of type '" "std::istream *""'"); 
  }
  arg2 = (std::istream *)(argp2);
  result = (bool)(arg1)->ParsePartialFromIstream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_SerializeToFileDescriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_SerializeToFileDescriptor.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_SerializeToFileDescriptor" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Message_SerializeToFileDescriptor" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (bool)((google::protobuf::Message const *)arg1)->SerializeToFileDescriptor(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_SerializePartialToFileDescriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_SerializePartialToFileDescriptor.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_SerializePartialToFileDescriptor" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Message_SerializePartialToFileDescriptor" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (bool)((google::protobuf::Message const *)arg1)->SerializePartialToFileDescriptor(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_SerializeToOstream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  std::ostream *arg2 = (std::ostream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_SerializeToOstream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_SerializeToOstream" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__ostream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_SerializeToOstream" "', argument " "2"" of type '" "std::ostream *""'"); 
  }
  arg2 = (std::ostream *)(argp2);
  result = (bool)((google::protobuf::Message const *)arg1)->SerializeToOstream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_SerializePartialToOstream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  std::ostream *arg2 = (std::ostream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_SerializePartialToOstream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_SerializePartialToOstream" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__ostream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_SerializePartialToOstream" "', argument " "2"" of type '" "std::ostream *""'"); 
  }
  arg2 = (std::ostream *)(argp2);
  result = (bool)((google::protobuf::Message const *)arg1)->SerializePartialToOstream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_GetTypeName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_GetTypeName.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_GetTypeName" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = ((google::protobuf::Message const *)arg1)->GetTypeName();
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_Clear(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_Clear.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_Clear" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  (arg1)->Clear();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_IsInitialized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_IsInitialized.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_IsInitialized" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = (bool)((google::protobuf::Message const *)arg1)->IsInitialized();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_CheckTypeAndMergeFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  google::protobuf::MessageLite *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_CheckTypeAndMergeFrom.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_CheckTypeAndMergeFrom" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__MessageLite,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_CheckTypeAndMergeFrom" "', argument " "2"" of type '" "google::protobuf::MessageLite const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Message_CheckTypeAndMergeFrom" "', argument " "2"" of type '" "google::protobuf::MessageLite const &""'"); 
  }
  arg2 = (google::protobuf::MessageLite *)(argp2);
  (arg1)->CheckTypeAndMergeFrom((google::protobuf::MessageLite const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_MergePartialFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  google::protobuf::io::CodedInputStream *arg2 = (google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_MergePartialFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_MergePartialFromCodedStream" "', argument " "1"" of type '" "google::protobuf::Message *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_MergePartialFromCodedStream" "', argument " "2"" of type '" "google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->MergePartialFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_ByteSizeLong(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_ByteSizeLong.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_ByteSizeLong" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = ((google::protobuf::Message const *)arg1)->ByteSizeLong();
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_SerializeWithCachedSizes(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  google::protobuf::io::CodedOutputStream *arg2 = (google::protobuf::io::CodedOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_SerializeWithCachedSizes.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_SerializeWithCachedSizes" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Message_SerializeWithCachedSizes" "', argument " "2"" of type '" "google::protobuf::io::CodedOutputStream *""'"); 
  }
  arg2 = (google::protobuf::io::CodedOutputStream *)(argp2);
  ((google::protobuf::Message const *)arg1)->SerializeWithCachedSizes(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_GetDescriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  google::protobuf::Descriptor *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_GetDescriptor.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_GetDescriptor" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = (google::protobuf::Descriptor *)((google::protobuf::Message const *)arg1)->GetDescriptor();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Descriptor, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Message_GetReflection(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Message *arg1 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  google::protobuf::Message::Reflection *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Message_GetReflection.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Message_GetReflection" "', argument " "1"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg1 = (google::protobuf::Message *)(argp1);
  result = (google::protobuf::Message::Reflection *)((google::protobuf::Message const *)arg1)->GetReflection();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_veto_Message(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIG_exception(SWIG_ERROR, "Class Message can not be instantiated");
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_Reflection(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_Reflection(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_Reflection(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_Reflection(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          google::protobuf::Reflection * arg1 = (google::protobuf::Reflection *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_Reflection_GetUnknownFields(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  google::protobuf::UnknownFieldSet *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetUnknownFields.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetUnknownFields" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetUnknownFields" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetUnknownFields" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  result = (google::protobuf::UnknownFieldSet *) &((google::protobuf::Reflection const *)arg1)->GetUnknownFields((google::protobuf::Message const &)*arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__UnknownFieldSet, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_MutableUnknownFields(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  google::protobuf::UnknownFieldSet *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_MutableUnknownFields.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_MutableUnknownFields" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_MutableUnknownFields" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  result = (google::protobuf::UnknownFieldSet *)((google::protobuf::Reflection const *)arg1)->MutableUnknownFields(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__UnknownFieldSet, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SpaceUsed(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SpaceUsed.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SpaceUsed" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SpaceUsed" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SpaceUsed" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  result = (int)((google::protobuf::Reflection const *)arg1)->SpaceUsed((google::protobuf::Message const &)*arg2);
  jsresult = SWIG_From_int((int)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_HasField(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_HasField.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_HasField" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_HasField" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_HasField" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_HasField" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (bool)((google::protobuf::Reflection const *)arg1)->HasField((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_FieldSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_FieldSize.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_FieldSize" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_FieldSize" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_FieldSize" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_FieldSize" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (int)((google::protobuf::Reflection const *)arg1)->FieldSize((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_From_int((int)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_ClearField(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_ClearField.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_ClearField" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_ClearField" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_ClearField" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ((google::protobuf::Reflection const *)arg1)->ClearField(arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_HasOneof(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::OneofDescriptor *arg3 = (google::protobuf::OneofDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_HasOneof.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_HasOneof" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_HasOneof" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_HasOneof" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__OneofDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_HasOneof" "', argument " "3"" of type '" "google::protobuf::OneofDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::OneofDescriptor *)(argp3);
  result = (bool)((google::protobuf::Reflection const *)arg1)->HasOneof((google::protobuf::Message const &)*arg2,(google::protobuf::OneofDescriptor const *)arg3);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_ClearOneof(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::OneofDescriptor *arg3 = (google::protobuf::OneofDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_ClearOneof.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_ClearOneof" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_ClearOneof" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__OneofDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_ClearOneof" "', argument " "3"" of type '" "google::protobuf::OneofDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::OneofDescriptor *)(argp3);
  ((google::protobuf::Reflection const *)arg1)->ClearOneof(arg2,(google::protobuf::OneofDescriptor const *)arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetOneofFieldDescriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::OneofDescriptor *arg3 = (google::protobuf::OneofDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::FieldDescriptor *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetOneofFieldDescriptor.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetOneofFieldDescriptor" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetOneofFieldDescriptor" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetOneofFieldDescriptor" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__OneofDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetOneofFieldDescriptor" "', argument " "3"" of type '" "google::protobuf::OneofDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::OneofDescriptor *)(argp3);
  result = (google::protobuf::FieldDescriptor *)((google::protobuf::Reflection const *)arg1)->GetOneofFieldDescriptor((google::protobuf::Message const &)*arg2,(google::protobuf::OneofDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_RemoveLast(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_RemoveLast.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_RemoveLast" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_RemoveLast" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_RemoveLast" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ((google::protobuf::Reflection const *)arg1)->RemoveLast(arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_ReleaseLast(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_ReleaseLast.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_ReleaseLast" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_ReleaseLast" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_ReleaseLast" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (google::protobuf::Message *)((google::protobuf::Reflection const *)arg1)->ReleaseLast(arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_Swap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::Message *arg3 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_Swap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_Swap" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_Swap" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_Swap" "', argument " "3"" of type '" "google::protobuf::Message *""'"); 
  }
  arg3 = (google::protobuf::Message *)(argp3);
  ((google::protobuf::Reflection const *)arg1)->Swap(arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SwapFields(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::Message *arg3 = (google::protobuf::Message *) 0 ;
  std::vector< google::protobuf::FieldDescriptor const * > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SwapFields.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SwapFields" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SwapFields" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SwapFields" "', argument " "3"" of type '" "google::protobuf::Message *""'"); 
  }
  arg3 = (google::protobuf::Message *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_std__vectorT_google__protobuf__FieldDescriptor_const_p_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_SwapFields" "', argument " "4"" of type '" "std::vector< google::protobuf::FieldDescriptor const * > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SwapFields" "', argument " "4"" of type '" "std::vector< google::protobuf::FieldDescriptor const * > const &""'"); 
  }
  arg4 = (std::vector< google::protobuf::FieldDescriptor const * > *)(argp4);
  ((google::protobuf::Reflection const *)arg1)->SwapFields(arg2,arg3,(std::vector< google::protobuf::FieldDescriptor const * > const &)*arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SwapElements(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SwapElements.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SwapElements" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SwapElements" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SwapElements" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SwapElements" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  ecode5 = SWIG_AsVal_int(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Reflection_SwapElements" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  ((google::protobuf::Reflection const *)arg1)->SwapElements(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_ListFields(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  std::vector< google::protobuf::FieldDescriptor const * > *arg3 = (std::vector< google::protobuf::FieldDescriptor const * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_ListFields.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_ListFields" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_ListFields" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_ListFields" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_std__vectorT_google__protobuf__FieldDescriptor_const_p_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_ListFields" "', argument " "3"" of type '" "std::vector< google::protobuf::FieldDescriptor const * > *""'"); 
  }
  arg3 = (std::vector< google::protobuf::FieldDescriptor const * > *)(argp3);
  ((google::protobuf::Reflection const *)arg1)->ListFields((google::protobuf::Message const &)*arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::int32 result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetInt32" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetInt32" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = ((google::protobuf::Reflection const *)arg1)->GetInt32((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj((new google::protobuf::int32((const google::protobuf::int32&)(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::int64 result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetInt64" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetInt64" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = ((google::protobuf::Reflection const *)arg1)->GetInt64((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj((new google::protobuf::int64((const google::protobuf::int64&)(result))), SWIGTYPE_p_int64_t, SWIG_POINTER_OWN |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetUInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::uint32 result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetUInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetUInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetUInt32" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetUInt32" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetUInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = ((google::protobuf::Reflection const *)arg1)->GetUInt32((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj((new google::protobuf::uint32((const google::protobuf::uint32&)(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetUInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::uint64 result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetUInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetUInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetUInt64" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetUInt64" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetUInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = ((google::protobuf::Reflection const *)arg1)->GetUInt64((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj((new google::protobuf::uint64((const google::protobuf::uint64&)(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetFloat.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetFloat" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetFloat" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetFloat" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetFloat" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (float)((google::protobuf::Reflection const *)arg1)->GetFloat((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_From_float((float)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetDouble(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetDouble.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetDouble" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetDouble" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetDouble" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetDouble" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (double)((google::protobuf::Reflection const *)arg1)->GetDouble((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_From_double((double)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetBool(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetBool.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetBool" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetBool" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetBool" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetBool" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (bool)((google::protobuf::Reflection const *)arg1)->GetBool((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  string result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetString" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetString" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetString" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetString" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = ((google::protobuf::Reflection const *)arg1)->GetString((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetEnum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::EnumValueDescriptor *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetEnum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetEnum" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetEnum" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetEnum" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetEnum" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (google::protobuf::EnumValueDescriptor *)((google::protobuf::Reflection const *)arg1)->GetEnum((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__EnumValueDescriptor, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetEnumValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetEnumValue.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetEnumValue" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetEnumValue" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetEnumValue" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetEnumValue" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (int)((google::protobuf::Reflection const *)arg1)->GetEnumValue((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_From_int((int)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetMessage__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::MessageFactory *arg4 = (google::protobuf::MessageFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetMessage" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetMessage" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_google__protobuf__MessageFactory, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_GetMessage" "', argument " "4"" of type '" "google::protobuf::MessageFactory *""'"); 
  }
  arg4 = (google::protobuf::MessageFactory *)(argp4);
  result = (google::protobuf::Message *) &((google::protobuf::Reflection const *)arg1)->GetMessage((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetMessage__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetMessage" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetMessage" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (google::protobuf::Message *) &((google::protobuf::Reflection const *)arg1)->GetMessage((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection__wrap_Reflection_GetMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 3) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Reflection_GetMessage__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Reflection_GetMessage__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Reflection_GetMessage__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Reflection_GetMessage__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function GetMessage.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetStringReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  string *arg4 = (string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  string *result = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetStringReference.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetStringReference" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetStringReference" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetStringReference" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetStringReference" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_GetStringReference" "', argument " "4"" of type '" "string *""'"); 
  }
  arg4 = (string *)(argp4);
  result = (string *) &((google::protobuf::Reflection const *)arg1)->GetStringReference((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::int32 arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetInt32" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  {
    res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_SetInt32" "', argument " "4"" of type '" "google::protobuf::int32""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetInt32" "', argument " "4"" of type '" "google::protobuf::int32""'");
    } else {
      arg4 = *((google::protobuf::int32 *)(argp4));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->SetInt32(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::int64 arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetInt64" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  {
    res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_int64_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_SetInt64" "', argument " "4"" of type '" "google::protobuf::int64""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetInt64" "', argument " "4"" of type '" "google::protobuf::int64""'");
    } else {
      arg4 = *((google::protobuf::int64 *)(argp4));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->SetInt64(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetUInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::uint32 arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetUInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetUInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetUInt32" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetUInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  {
    res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_SetUInt32" "', argument " "4"" of type '" "google::protobuf::uint32""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetUInt32" "', argument " "4"" of type '" "google::protobuf::uint32""'");
    } else {
      arg4 = *((google::protobuf::uint32 *)(argp4));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->SetUInt32(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetUInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::uint64 arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetUInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetUInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetUInt64" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetUInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  {
    res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_uint64_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_SetUInt64" "', argument " "4"" of type '" "google::protobuf::uint64""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetUInt64" "', argument " "4"" of type '" "google::protobuf::uint64""'");
    } else {
      arg4 = *((google::protobuf::uint64 *)(argp4));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->SetUInt64(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetFloat.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetFloat" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetFloat" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetFloat" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_float(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetFloat" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = (float)(val4);
  ((google::protobuf::Reflection const *)arg1)->SetFloat(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetDouble(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetDouble.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetDouble" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetDouble" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetDouble" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_double(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetDouble" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = (double)(val4);
  ((google::protobuf::Reflection const *)arg1)->SetDouble(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetBool(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetBool.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetBool" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetBool" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetBool" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_bool(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetBool" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = (bool)(val4);
  ((google::protobuf::Reflection const *)arg1)->SetBool(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetString" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetString" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetString" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_SetString" "', argument " "4"" of type '" "string const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetString" "', argument " "4"" of type '" "string const &""'"); 
  }
  arg4 = (string *)(argp4);
  ((google::protobuf::Reflection const *)arg1)->SetString(arg2,(google::protobuf::FieldDescriptor const *)arg3,(string const &)*arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetEnum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::EnumValueDescriptor *arg4 = (google::protobuf::EnumValueDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetEnum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetEnum" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetEnum" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetEnum" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_google__protobuf__EnumValueDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_SetEnum" "', argument " "4"" of type '" "google::protobuf::EnumValueDescriptor const *""'"); 
  }
  arg4 = (google::protobuf::EnumValueDescriptor *)(argp4);
  ((google::protobuf::Reflection const *)arg1)->SetEnum(arg2,(google::protobuf::FieldDescriptor const *)arg3,(google::protobuf::EnumValueDescriptor const *)arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetEnumValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetEnumValue.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetEnumValue" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetEnumValue" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetEnumValue" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetEnumValue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  ((google::protobuf::Reflection const *)arg1)->SetEnumValue(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_MutableMessage__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::MessageFactory *arg4 = (google::protobuf::MessageFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_MutableMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_MutableMessage" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_MutableMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_google__protobuf__MessageFactory, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_MutableMessage" "', argument " "4"" of type '" "google::protobuf::MessageFactory *""'"); 
  }
  arg4 = (google::protobuf::MessageFactory *)(argp4);
  result = (google::protobuf::Message *)((google::protobuf::Reflection const *)arg1)->MutableMessage(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_MutableMessage__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_MutableMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_MutableMessage" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_MutableMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (google::protobuf::Message *)((google::protobuf::Reflection const *)arg1)->MutableMessage(arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection__wrap_Reflection_MutableMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 3) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Reflection_MutableMessage__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Reflection_MutableMessage__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Reflection_MutableMessage__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Reflection_MutableMessage__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function MutableMessage.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetAllocatedMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::Message *arg3 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg4 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetAllocatedMessage.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetAllocatedMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetAllocatedMessage" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetAllocatedMessage" "', argument " "3"" of type '" "google::protobuf::Message *""'"); 
  }
  arg3 = (google::protobuf::Message *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_SetAllocatedMessage" "', argument " "4"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg4 = (google::protobuf::FieldDescriptor *)(argp4);
  ((google::protobuf::Reflection const *)arg1)->SetAllocatedMessage(arg2,arg3,(google::protobuf::FieldDescriptor const *)arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_ReleaseMessage__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::MessageFactory *arg4 = (google::protobuf::MessageFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_ReleaseMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_ReleaseMessage" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_ReleaseMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_google__protobuf__MessageFactory, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_ReleaseMessage" "', argument " "4"" of type '" "google::protobuf::MessageFactory *""'"); 
  }
  arg4 = (google::protobuf::MessageFactory *)(argp4);
  result = (google::protobuf::Message *)((google::protobuf::Reflection const *)arg1)->ReleaseMessage(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_ReleaseMessage__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_ReleaseMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_ReleaseMessage" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_ReleaseMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (google::protobuf::Message *)((google::protobuf::Reflection const *)arg1)->ReleaseMessage(arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection__wrap_Reflection_ReleaseMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 3) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Reflection_ReleaseMessage__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Reflection_ReleaseMessage__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Reflection_ReleaseMessage__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Reflection_ReleaseMessage__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function ReleaseMessage.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  google::protobuf::int32 result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedInt32" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedInt32" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedInt32" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = ((google::protobuf::Reflection const *)arg1)->GetRepeatedInt32((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj((new google::protobuf::int32((const google::protobuf::int32&)(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  google::protobuf::int64 result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedInt64" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedInt64" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedInt64" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = ((google::protobuf::Reflection const *)arg1)->GetRepeatedInt64((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj((new google::protobuf::int64((const google::protobuf::int64&)(result))), SWIGTYPE_p_int64_t, SWIG_POINTER_OWN |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedUInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  google::protobuf::uint32 result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedUInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedUInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedUInt32" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedUInt32" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedUInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedUInt32" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = ((google::protobuf::Reflection const *)arg1)->GetRepeatedUInt32((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj((new google::protobuf::uint32((const google::protobuf::uint32&)(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedUInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  google::protobuf::uint64 result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedUInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedUInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedUInt64" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedUInt64" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedUInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedUInt64" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = ((google::protobuf::Reflection const *)arg1)->GetRepeatedUInt64((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj((new google::protobuf::uint64((const google::protobuf::uint64&)(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedFloat.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedFloat" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedFloat" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedFloat" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedFloat" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedFloat" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = (float)((google::protobuf::Reflection const *)arg1)->GetRepeatedFloat((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_From_float((float)(result));
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedDouble(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  double result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedDouble.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedDouble" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedDouble" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedDouble" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedDouble" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedDouble" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = (double)((google::protobuf::Reflection const *)arg1)->GetRepeatedDouble((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_From_double((double)(result));
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedBool(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedBool.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedBool" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedBool" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedBool" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedBool" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedBool" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = (bool)((google::protobuf::Reflection const *)arg1)->GetRepeatedBool((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  string result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedString" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedString" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedString" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedString" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedString" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = ((google::protobuf::Reflection const *)arg1)->GetRepeatedString((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj((new string((const string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedEnum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  google::protobuf::EnumValueDescriptor *result = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedEnum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedEnum" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedEnum" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedEnum" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedEnum" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedEnum" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = (google::protobuf::EnumValueDescriptor *)((google::protobuf::Reflection const *)arg1)->GetRepeatedEnum((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__EnumValueDescriptor, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedEnumValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedEnumValue.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedEnumValue" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedEnumValue" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedEnumValue" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedEnumValue" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedEnumValue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = (int)((google::protobuf::Reflection const *)arg1)->GetRepeatedEnumValue((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_From_int((int)(result));
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedMessage.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedMessage" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedMessage" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedMessage" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = (google::protobuf::Message *) &((google::protobuf::Reflection const *)arg1)->GetRepeatedMessage((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetRepeatedStringReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  string *arg5 = (string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  string *result = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetRepeatedStringReference.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetRepeatedStringReference" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_GetRepeatedStringReference" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_GetRepeatedStringReference" "', argument " "2"" of type '" "google::protobuf::Message const &""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_GetRepeatedStringReference" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_GetRepeatedStringReference" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Reflection_GetRepeatedStringReference" "', argument " "5"" of type '" "string *""'"); 
  }
  arg5 = (string *)(argp5);
  result = (string *) &((google::protobuf::Reflection const *)arg1)->GetRepeatedStringReference((google::protobuf::Message const &)*arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  google::protobuf::int32 arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedInt32" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedInt32" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  {
    res5 = SWIG_ConvertPtr(args[3], &argp5, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Reflection_SetRepeatedInt32" "', argument " "5"" of type '" "google::protobuf::int32""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetRepeatedInt32" "', argument " "5"" of type '" "google::protobuf::int32""'");
    } else {
      arg5 = *((google::protobuf::int32 *)(argp5));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedInt32(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  google::protobuf::int64 arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedInt64" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedInt64" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  {
    res5 = SWIG_ConvertPtr(args[3], &argp5, SWIGTYPE_p_int64_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Reflection_SetRepeatedInt64" "', argument " "5"" of type '" "google::protobuf::int64""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetRepeatedInt64" "', argument " "5"" of type '" "google::protobuf::int64""'");
    } else {
      arg5 = *((google::protobuf::int64 *)(argp5));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedInt64(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedUInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  google::protobuf::uint32 arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedUInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedUInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedUInt32" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedUInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedUInt32" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  {
    res5 = SWIG_ConvertPtr(args[3], &argp5, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Reflection_SetRepeatedUInt32" "', argument " "5"" of type '" "google::protobuf::uint32""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetRepeatedUInt32" "', argument " "5"" of type '" "google::protobuf::uint32""'");
    } else {
      arg5 = *((google::protobuf::uint32 *)(argp5));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedUInt32(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedUInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  google::protobuf::uint64 arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedUInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedUInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedUInt64" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedUInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedUInt64" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  {
    res5 = SWIG_ConvertPtr(args[3], &argp5, SWIGTYPE_p_uint64_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Reflection_SetRepeatedUInt64" "', argument " "5"" of type '" "google::protobuf::uint64""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetRepeatedUInt64" "', argument " "5"" of type '" "google::protobuf::uint64""'");
    } else {
      arg5 = *((google::protobuf::uint64 *)(argp5));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedUInt64(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedFloat.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedFloat" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedFloat" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedFloat" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedFloat" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  ecode5 = SWIG_AsVal_float(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Reflection_SetRepeatedFloat" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = (float)(val5);
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedFloat(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedDouble(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  double arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedDouble.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedDouble" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedDouble" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedDouble" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedDouble" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  ecode5 = SWIG_AsVal_double(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Reflection_SetRepeatedDouble" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = (double)(val5);
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedDouble(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedBool(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedBool.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedBool" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedBool" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedBool" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedBool" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  ecode5 = SWIG_AsVal_bool(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Reflection_SetRepeatedBool" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = (bool)(val5);
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedBool(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  string *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedString" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedString" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedString" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedString" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[3], &argp5, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Reflection_SetRepeatedString" "', argument " "5"" of type '" "string const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_SetRepeatedString" "', argument " "5"" of type '" "string const &""'"); 
  }
  arg5 = (string *)(argp5);
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedString(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,(string const &)*arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedEnum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  google::protobuf::EnumValueDescriptor *arg5 = (google::protobuf::EnumValueDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedEnum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedEnum" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedEnum" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedEnum" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedEnum" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_google__protobuf__EnumValueDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Reflection_SetRepeatedEnum" "', argument " "5"" of type '" "google::protobuf::EnumValueDescriptor const *""'"); 
  }
  arg5 = (google::protobuf::EnumValueDescriptor *)(argp5);
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedEnum(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,(google::protobuf::EnumValueDescriptor const *)arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SetRepeatedEnumValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SetRepeatedEnumValue.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SetRepeatedEnumValue" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_SetRepeatedEnumValue" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_SetRepeatedEnumValue" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_SetRepeatedEnumValue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  ecode5 = SWIG_AsVal_int(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Reflection_SetRepeatedEnumValue" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  ((google::protobuf::Reflection const *)arg1)->SetRepeatedEnumValue(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_MutableRepeatedMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_MutableRepeatedMessage.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_MutableRepeatedMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_MutableRepeatedMessage" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_MutableRepeatedMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_MutableRepeatedMessage" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = (google::protobuf::Message *)((google::protobuf::Reflection const *)arg1)->MutableRepeatedMessage(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::int32 arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddInt32" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  {
    res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_AddInt32" "', argument " "4"" of type '" "google::protobuf::int32""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_AddInt32" "', argument " "4"" of type '" "google::protobuf::int32""'");
    } else {
      arg4 = *((google::protobuf::int32 *)(argp4));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->AddInt32(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::int64 arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddInt64" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  {
    res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_int64_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_AddInt64" "', argument " "4"" of type '" "google::protobuf::int64""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_AddInt64" "', argument " "4"" of type '" "google::protobuf::int64""'");
    } else {
      arg4 = *((google::protobuf::int64 *)(argp4));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->AddInt64(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddUInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::uint32 arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddUInt32.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddUInt32" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddUInt32" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddUInt32" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  {
    res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_AddUInt32" "', argument " "4"" of type '" "google::protobuf::uint32""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_AddUInt32" "', argument " "4"" of type '" "google::protobuf::uint32""'");
    } else {
      arg4 = *((google::protobuf::uint32 *)(argp4));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->AddUInt32(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddUInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::uint64 arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddUInt64.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddUInt64" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddUInt64" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddUInt64" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  {
    res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_uint64_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_AddUInt64" "', argument " "4"" of type '" "google::protobuf::uint64""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_AddUInt64" "', argument " "4"" of type '" "google::protobuf::uint64""'");
    } else {
      arg4 = *((google::protobuf::uint64 *)(argp4));
    }
  }
  ((google::protobuf::Reflection const *)arg1)->AddUInt64(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddFloat.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddFloat" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddFloat" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddFloat" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_float(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_AddFloat" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = (float)(val4);
  ((google::protobuf::Reflection const *)arg1)->AddFloat(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddDouble(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddDouble.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddDouble" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddDouble" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddDouble" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_double(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_AddDouble" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = (double)(val4);
  ((google::protobuf::Reflection const *)arg1)->AddDouble(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddBool(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddBool.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddBool" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddBool" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddBool" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_bool(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_AddBool" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = (bool)(val4);
  ((google::protobuf::Reflection const *)arg1)->AddBool(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddString" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddString" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddString" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_AddString" "', argument " "4"" of type '" "string const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_AddString" "', argument " "4"" of type '" "string const &""'"); 
  }
  arg4 = (string *)(argp4);
  ((google::protobuf::Reflection const *)arg1)->AddString(arg2,(google::protobuf::FieldDescriptor const *)arg3,(string const &)*arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddEnum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::EnumValueDescriptor *arg4 = (google::protobuf::EnumValueDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddEnum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddEnum" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddEnum" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddEnum" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_google__protobuf__EnumValueDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_AddEnum" "', argument " "4"" of type '" "google::protobuf::EnumValueDescriptor const *""'"); 
  }
  arg4 = (google::protobuf::EnumValueDescriptor *)(argp4);
  ((google::protobuf::Reflection const *)arg1)->AddEnum(arg2,(google::protobuf::FieldDescriptor const *)arg3,(google::protobuf::EnumValueDescriptor const *)arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddEnumValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddEnumValue.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddEnumValue" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddEnumValue" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddEnumValue" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Reflection_AddEnumValue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  ((google::protobuf::Reflection const *)arg1)->AddEnumValue(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddMessage__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::MessageFactory *arg4 = (google::protobuf::MessageFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddMessage" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_google__protobuf__MessageFactory, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_AddMessage" "', argument " "4"" of type '" "google::protobuf::MessageFactory *""'"); 
  }
  arg4 = (google::protobuf::MessageFactory *)(argp4);
  result = (google::protobuf::Message *)((google::protobuf::Reflection const *)arg1)->AddMessage(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddMessage__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddMessage" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  result = (google::protobuf::Message *)((google::protobuf::Reflection const *)arg1)->AddMessage(arg2,(google::protobuf::FieldDescriptor const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection__wrap_Reflection_AddMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 3) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Reflection_AddMessage__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Reflection_AddMessage__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_Reflection_AddMessage__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_Reflection_AddMessage__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function AddMessage.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_AddAllocatedMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  google::protobuf::FieldDescriptor *arg3 = (google::protobuf::FieldDescriptor *) 0 ;
  google::protobuf::Message *arg4 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_AddAllocatedMessage.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_AddAllocatedMessage" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_AddAllocatedMessage" "', argument " "2"" of type '" "google::protobuf::Message *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Reflection_AddAllocatedMessage" "', argument " "3"" of type '" "google::protobuf::FieldDescriptor const *""'"); 
  }
  arg3 = (google::protobuf::FieldDescriptor *)(argp3);
  res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Reflection_AddAllocatedMessage" "', argument " "4"" of type '" "google::protobuf::Message *""'"); 
  }
  arg4 = (google::protobuf::Message *)(argp4);
  ((google::protobuf::Reflection const *)arg1)->AddAllocatedMessage(arg2,(google::protobuf::FieldDescriptor const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_FindKnownExtensionByName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  google::protobuf::FieldDescriptor *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_FindKnownExtensionByName.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_FindKnownExtensionByName" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reflection_FindKnownExtensionByName" "', argument " "2"" of type '" "string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reflection_FindKnownExtensionByName" "', argument " "2"" of type '" "string const &""'"); 
  }
  arg2 = (string *)(argp2);
  result = (google::protobuf::FieldDescriptor *)((google::protobuf::Reflection const *)arg1)->FindKnownExtensionByName((string const &)*arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_FindKnownExtensionByNumber(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  google::protobuf::FieldDescriptor *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_FindKnownExtensionByNumber.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_FindKnownExtensionByNumber" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Reflection_FindKnownExtensionByNumber" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (google::protobuf::FieldDescriptor *)((google::protobuf::Reflection const *)arg1)->FindKnownExtensionByNumber(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__FieldDescriptor, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_SupportsUnknownEnumValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_SupportsUnknownEnumValues.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_SupportsUnknownEnumValues" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  result = (bool)((google::protobuf::Reflection const *)arg1)->SupportsUnknownEnumValues();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Reflection_GetMessageFactory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Reflection *arg1 = (google::protobuf::Reflection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  google::protobuf::MessageFactory *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Reflection_GetMessageFactory.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__Reflection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reflection_GetMessageFactory" "', argument " "1"" of type '" "google::protobuf::Reflection const *""'"); 
  }
  arg1 = (google::protobuf::Reflection *)(argp1);
  result = (google::protobuf::MessageFactory *)((google::protobuf::Reflection const *)arg1)->GetMessageFactory();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__MessageFactory, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_veto_Reflection(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIG_exception(SWIG_ERROR, "Class Reflection can not be instantiated");
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_MessageFactory(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_MessageFactory(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_MessageFactory(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_MessageFactory(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          google::protobuf::MessageFactory * arg1 = (google::protobuf::MessageFactory *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_MessageFactory_GetPrototype(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageFactory *arg1 = (google::protobuf::MessageFactory *) 0 ;
  google::protobuf::Descriptor *arg2 = (google::protobuf::Descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  google::protobuf::Message *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageFactory_GetPrototype.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_google__protobuf__MessageFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageFactory_GetPrototype" "', argument " "1"" of type '" "google::protobuf::MessageFactory *""'"); 
  }
  arg1 = (google::protobuf::MessageFactory *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Descriptor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageFactory_GetPrototype" "', argument " "2"" of type '" "google::protobuf::Descriptor const *""'"); 
  }
  arg2 = (google::protobuf::Descriptor *)(argp2);
  result = (google::protobuf::Message *)(arg1)->GetPrototype((google::protobuf::Descriptor const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageFactory_generated_factory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::MessageFactory *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageFactory_generated_factory.");
  
  result = (google::protobuf::MessageFactory *)google::protobuf::MessageFactory::generated_factory();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__MessageFactory, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageFactory_InternalRegisterGeneratedFile(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  char *arg1 = (char *) 0 ;
  void (*arg2)(string const &) = (void (*)(string const &)) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageFactory_InternalRegisterGeneratedFile.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageFactory_InternalRegisterGeneratedFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  {
    int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_r_q_const__string__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MessageFactory_InternalRegisterGeneratedFile" "', argument " "2"" of type '" "void (*)(string const &)""'"); 
    }
  }
  google::protobuf::MessageFactory::InternalRegisterGeneratedFile((char const *)arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MessageFactory_InternalRegisterGeneratedMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  google::protobuf::Descriptor *arg1 = (google::protobuf::Descriptor *) 0 ;
  google::protobuf::Message *arg2 = (google::protobuf::Message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MessageFactory_InternalRegisterGeneratedMessage.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_google__protobuf__Descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MessageFactory_InternalRegisterGeneratedMessage" "', argument " "1"" of type '" "google::protobuf::Descriptor const *""'"); 
  }
  arg1 = (google::protobuf::Descriptor *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_google__protobuf__Message, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MessageFactory_InternalRegisterGeneratedMessage" "', argument " "2"" of type '" "google::protobuf::Message const *""'"); 
  }
  arg2 = (google::protobuf::Message *)(argp2);
  google::protobuf::MessageFactory::InternalRegisterGeneratedMessage((google::protobuf::Descriptor const *)arg1,(google::protobuf::Message const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_veto_MessageFactory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIG_exception(SWIG_ERROR, "Class MessageFactory can not be instantiated");
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_Version(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  char *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_Version.");
  
  result = (char *)TF_Version();
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_FLOAT(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_FLOAT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_DOUBLE(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_DOUBLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_INT32(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_INT32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_UINT8(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_UINT8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_INT16(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_INT16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_INT8(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_INT8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_STRING(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_STRING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_COMPLEX64(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_COMPLEX64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_COMPLEX(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_COMPLEX));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_INT64(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_INT64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_BOOL(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_BOOL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_QINT8(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_QINT8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_QUINT8(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_QUINT8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_QINT32(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_QINT32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_BFLOAT16(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_BFLOAT16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_QINT16(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_QINT16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_QUINT16(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_QUINT16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_UINT16(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_UINT16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_COMPLEX128(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_COMPLEX128));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_HALF(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_HALF));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_RESOURCE(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_RESOURCE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_DataTypeSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_DataType arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  size_t result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DataTypeSize.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TF_DataTypeSize" "', argument " "1"" of type '" "TF_DataType""'");
  } 
  arg1 = (TF_DataType)(val1);
  result = TF_DataTypeSize(arg1);
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OK(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_OK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_CANCELLED(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_CANCELLED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_UNKNOWN(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_UNKNOWN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_INVALID_ARGUMENT(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_INVALID_ARGUMENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_DEADLINE_EXCEEDED(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_DEADLINE_EXCEEDED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_NOT_FOUND(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_NOT_FOUND));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ALREADY_EXISTS(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ALREADY_EXISTS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_PERMISSION_DENIED(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_PERMISSION_DENIED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_UNAUTHENTICATED(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_UNAUTHENTICATED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_RESOURCE_EXHAUSTED(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_RESOURCE_EXHAUSTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_FAILED_PRECONDITION(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_FAILED_PRECONDITION));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ABORTED(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ABORTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_OUT_OF_RANGE(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_OUT_OF_RANGE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_UNIMPLEMENTED(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_UNIMPLEMENTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_INTERNAL(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_INTERNAL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_UNAVAILABLE(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_UNAVAILABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_DATA_LOSS(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_DATA_LOSS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_NewStatus(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Status *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewStatus.");
  
  result = (TF_Status *)TF_NewStatus();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Status, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_DeleteStatus(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Status *arg1 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DeleteStatus.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_DeleteStatus" "', argument " "1"" of type '" "TF_Status *""'"); 
  }
  arg1 = (TF_Status *)(argp1);
  TF_DeleteStatus(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetStatus(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Status *arg1 = (TF_Status *) 0 ;
  TF_Code arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetStatus.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetStatus" "', argument " "1"" of type '" "TF_Status *""'"); 
  }
  arg1 = (TF_Status *)(argp1);
  ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_SetStatus" "', argument " "2"" of type '" "TF_Code""'");
  } 
  arg2 = (TF_Code)(val2);
  res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetStatus" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  TF_SetStatus(arg1,arg2,(char const *)arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GetCode(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Status *arg1 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  TF_Code result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GetCode.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GetCode" "', argument " "1"" of type '" "TF_Status const *""'"); 
  }
  arg1 = (TF_Status *)(argp1);
  result = (TF_Code)TF_GetCode((TF_Status const *)arg1);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_Message(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Status *arg1 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_Message.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Message" "', argument " "1"" of type '" "TF_Status const *""'"); 
  }
  arg1 = (TF_Status *)(argp1);
  result = (char *)TF_Message((TF_Status const *)arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_TF_Buffer_data_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_Buffer *arg1 = (TF_Buffer *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Buffer_data_set" "', argument " "1"" of type '" "TF_Buffer *""'"); 
  }
  arg1 = (TF_Buffer *)(argp1);
  res2 = SWIG_ConvertPtr(value,SWIG_as_voidptrptr(&arg2), SWIGTYPE_p_void, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_Buffer_data_set" "', argument " "2"" of type '" "void const *""'"); 
  }
  if (arg1) (arg1)->data = (void const *)arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_Buffer_data_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Buffer *arg1 = (TF_Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Buffer_data_get" "', argument " "1"" of type '" "TF_Buffer *""'"); 
  }
  arg1 = (TF_Buffer *)(argp1);
  result = (void *) ((arg1)->data);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_TF_Buffer_length_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_Buffer *arg1 = (TF_Buffer *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Buffer_length_set" "', argument " "1"" of type '" "TF_Buffer *""'"); 
  }
  arg1 = (TF_Buffer *)(argp1);
  ecode2 = SWIG_AsVal_size_t(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_Buffer_length_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->length = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_Buffer_length_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Buffer *arg1 = (TF_Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Buffer_length_get" "', argument " "1"" of type '" "TF_Buffer *""'"); 
  }
  arg1 = (TF_Buffer *)(argp1);
  result =  ((arg1)->length);
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_TF_Buffer_data_deallocator_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_Buffer *arg1 = (TF_Buffer *) 0 ;
  void (*arg2)(void *,size_t) = (void (*)(void *,size_t)) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Buffer_data_deallocator_set" "', argument " "1"" of type '" "TF_Buffer *""'"); 
  }
  arg1 = (TF_Buffer *)(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_void_size_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "TF_Buffer_data_deallocator_set" "', argument " "2"" of type '" "void (*)(void *,size_t)""'"); 
    }
  }
  if (arg1) (arg1)->data_deallocator = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_Buffer_data_deallocator_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Buffer *arg1 = (TF_Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void (*result)(void *,size_t) = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Buffer_data_deallocator_get" "', argument " "1"" of type '" "TF_Buffer *""'"); 
  }
  arg1 = (TF_Buffer *)(argp1);
  result = (void (*)(void *,size_t)) ((arg1)->data_deallocator);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_void_size_t__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_TF_Buffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  TF_Buffer *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_TF_Buffer.");
  result = (TF_Buffer *)new TF_Buffer();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_TF_Buffer, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_TF_Buffer(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_TF_Buffer(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_TF_Buffer(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_TF_Buffer(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          TF_Buffer * arg1 = (TF_Buffer *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_TF_NewBufferFromString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  int res1 ;
  size_t val2 ;
  int ecode2 = 0 ;
  TF_Buffer *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewBufferFromString.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_NewBufferFromString" "', argument " "1"" of type '" "void const *""'"); 
  }
  ecode2 = SWIG_AsVal_size_t(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_NewBufferFromString" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  result = (TF_Buffer *)TF_NewBufferFromString((void const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Buffer, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_NewBuffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Buffer *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewBuffer.");
  
  result = (TF_Buffer *)TF_NewBuffer();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Buffer, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_DeleteBuffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Buffer *arg1 = (TF_Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DeleteBuffer.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_DeleteBuffer" "', argument " "1"" of type '" "TF_Buffer *""'"); 
  }
  arg1 = (TF_Buffer *)(argp1);
  TF_DeleteBuffer(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GetBuffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Buffer *arg1 = (TF_Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  TF_Buffer result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GetBuffer.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GetBuffer" "', argument " "1"" of type '" "TF_Buffer *""'"); 
  }
  arg1 = (TF_Buffer *)(argp1);
  result = TF_GetBuffer(arg1);
  jsresult = SWIG_NewPointerObj((new TF_Buffer((const TF_Buffer&)(result))), SWIGTYPE_p_TF_Buffer, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_NewTensor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_DataType arg1 ;
  int64_t *arg2 = (int64_t *) 0 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  size_t arg5 ;
  void (*arg6)(void *,size_t,void *) = (void (*)(void *,size_t,void *)) 0 ;
  void *arg7 = (void *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  size_t val5 ;
  int ecode5 = 0 ;
  int res7 ;
  TF_Tensor *result = 0 ;
  
  if(args.Length() != 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewTensor.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TF_NewTensor" "', argument " "1"" of type '" "TF_DataType""'");
  } 
  arg1 = (TF_DataType)(val1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_NewTensor" "', argument " "2"" of type '" "int64_t const *""'"); 
  }
  arg2 = (int64_t *)(argp2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_NewTensor" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_NewTensor" "', argument " "4"" of type '" "void *""'"); 
  }
  ecode5 = SWIG_AsVal_size_t(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_NewTensor" "', argument " "5"" of type '" "size_t""'");
  } 
  arg5 = (size_t)(val5);
  {
    int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_p_void_size_t_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "TF_NewTensor" "', argument " "6"" of type '" "void (*)(void *,size_t,void *)""'"); 
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "TF_NewTensor" "', argument " "7"" of type '" "void *""'"); 
  }
  result = (TF_Tensor *)TF_NewTensor(arg1,(int64_t const *)arg2,arg3,arg4,arg5,arg6,arg7);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Tensor, 0 |  0 );
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_AllocateTensor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_DataType arg1 ;
  int64_t *arg2 = (int64_t *) 0 ;
  int arg3 ;
  size_t arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  TF_Tensor *result = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_AllocateTensor.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TF_AllocateTensor" "', argument " "1"" of type '" "TF_DataType""'");
  } 
  arg1 = (TF_DataType)(val1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_AllocateTensor" "', argument " "2"" of type '" "int64_t const *""'"); 
  }
  arg2 = (int64_t *)(argp2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_AllocateTensor" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  ecode4 = SWIG_AsVal_size_t(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_AllocateTensor" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = (size_t)(val4);
  result = (TF_Tensor *)TF_AllocateTensor(arg1,(int64_t const *)arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Tensor, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_DeleteTensor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Tensor *arg1 = (TF_Tensor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DeleteTensor.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_DeleteTensor" "', argument " "1"" of type '" "TF_Tensor *""'"); 
  }
  arg1 = (TF_Tensor *)(argp1);
  TF_DeleteTensor(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_TensorType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Tensor *arg1 = (TF_Tensor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  TF_DataType result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_TensorType.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_TensorType" "', argument " "1"" of type '" "TF_Tensor const *""'"); 
  }
  arg1 = (TF_Tensor *)(argp1);
  result = (TF_DataType)TF_TensorType((TF_Tensor const *)arg1);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_NumDims(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Tensor *arg1 = (TF_Tensor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NumDims.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_NumDims" "', argument " "1"" of type '" "TF_Tensor const *""'"); 
  }
  arg1 = (TF_Tensor *)(argp1);
  result = (int)TF_NumDims((TF_Tensor const *)arg1);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_Dim(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Tensor *arg1 = (TF_Tensor *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int64_t result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_Dim.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Dim" "', argument " "1"" of type '" "TF_Tensor const *""'"); 
  }
  arg1 = (TF_Tensor *)(argp1);
  ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_Dim" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = TF_Dim((TF_Tensor const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj((new int64_t((const int64_t&)(result))), SWIGTYPE_p_int64_t, SWIG_POINTER_OWN |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_TensorByteSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Tensor *arg1 = (TF_Tensor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_TensorByteSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_TensorByteSize" "', argument " "1"" of type '" "TF_Tensor const *""'"); 
  }
  arg1 = (TF_Tensor *)(argp1);
  result = TF_TensorByteSize((TF_Tensor const *)arg1);
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_TensorData(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Tensor *arg1 = (TF_Tensor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_TensorData.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_TensorData" "', argument " "1"" of type '" "TF_Tensor const *""'"); 
  }
  arg1 = (TF_Tensor *)(argp1);
  result = (void *)TF_TensorData((TF_Tensor const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_StringEncode(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  char *arg3 = (char *) 0 ;
  size_t arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  size_t result;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_StringEncode.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_StringEncode" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  ecode2 = SWIG_AsVal_size_t(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_StringEncode" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_StringEncode" "', argument " "3"" of type '" "char *""'");
  }
  arg3 = (char *)(buf3);
  ecode4 = SWIG_AsVal_size_t(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_StringEncode" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = (size_t)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_StringEncode" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  result = TF_StringEncode((char const *)arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_From_size_t((size_t)(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_StringDecode(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  char **arg3 = (char **) 0 ;
  size_t *arg4 = (size_t *) 0 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  size_t result;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_StringDecode.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_StringDecode" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  ecode2 = SWIG_AsVal_size_t(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_StringDecode" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_StringDecode" "', argument " "3"" of type '" "char const **""'"); 
  }
  arg3 = (char **)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_size_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_StringDecode" "', argument " "4"" of type '" "size_t *""'"); 
  }
  arg4 = (size_t *)(argp4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_StringDecode" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  result = TF_StringDecode((char const *)arg1,arg2,(char const **)arg3,arg4,arg5);
  jsresult = SWIG_From_size_t((size_t)(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_StringEncodedSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_StringEncodedSize.");
  
  ecode1 = SWIG_AsVal_size_t(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TF_StringEncodedSize" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = (size_t)(val1);
  result = TF_StringEncodedSize(arg1);
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_NewSessionOptions(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_SessionOptions *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewSessionOptions.");
  
  result = (TF_SessionOptions *)TF_NewSessionOptions();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_SessionOptions, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetTarget(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_SessionOptions *arg1 = (TF_SessionOptions *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetTarget.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_SessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetTarget" "', argument " "1"" of type '" "TF_SessionOptions *""'"); 
  }
  arg1 = (TF_SessionOptions *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetTarget" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  TF_SetTarget(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetConfig(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_SessionOptions *arg1 = (TF_SessionOptions *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetConfig.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_SessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetConfig" "', argument " "1"" of type '" "TF_SessionOptions *""'"); 
  }
  arg1 = (TF_SessionOptions *)(argp1);
  res2 = SWIG_ConvertPtr(args[1],SWIG_as_voidptrptr(&arg2), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetConfig" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_size_t(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_SetConfig" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_SetConfig" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_SetConfig(arg1,(void const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_DeleteSessionOptions(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_SessionOptions *arg1 = (TF_SessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DeleteSessionOptions.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_SessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_DeleteSessionOptions" "', argument " "1"" of type '" "TF_SessionOptions *""'"); 
  }
  arg1 = (TF_SessionOptions *)(argp1);
  TF_DeleteSessionOptions(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_NewGraph(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewGraph.");
  
  result = (TF_Graph *)TF_NewGraph();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Graph, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_DeleteGraph(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DeleteGraph.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_DeleteGraph" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  TF_DeleteGraph(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_TF_Input_oper_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_Input *arg1 = (TF_Input *) 0 ;
  TF_Operation *arg2 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Input, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Input_oper_set" "', argument " "1"" of type '" "TF_Input *""'"); 
  }
  arg1 = (TF_Input *)(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_TF_Operation, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_Input_oper_set" "', argument " "2"" of type '" "TF_Operation *""'"); 
  }
  arg2 = (TF_Operation *)(argp2);
  if (arg1) (arg1)->oper = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_Input_oper_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Input *arg1 = (TF_Input *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  TF_Operation *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Input, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Input_oper_get" "', argument " "1"" of type '" "TF_Input *""'"); 
  }
  arg1 = (TF_Input *)(argp1);
  result = (TF_Operation *) ((arg1)->oper);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Operation, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_TF_Input_index_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_Input *arg1 = (TF_Input *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Input, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Input_index_set" "', argument " "1"" of type '" "TF_Input *""'"); 
  }
  arg1 = (TF_Input *)(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_Input_index_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_Input_index_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Input *arg1 = (TF_Input *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Input, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Input_index_get" "', argument " "1"" of type '" "TF_Input *""'"); 
  }
  arg1 = (TF_Input *)(argp1);
  result = (int) ((arg1)->index);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_TF_Input(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  TF_Input *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_TF_Input.");
  result = (TF_Input *)new TF_Input();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_TF_Input, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_TF_Input(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_TF_Input(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_TF_Input(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_TF_Input(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          TF_Input * arg1 = (TF_Input *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static void _wrap_TF_Output_oper_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_Output *arg1 = (TF_Output *) 0 ;
  TF_Operation *arg2 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Output_oper_set" "', argument " "1"" of type '" "TF_Output *""'"); 
  }
  arg1 = (TF_Output *)(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_TF_Operation, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_Output_oper_set" "', argument " "2"" of type '" "TF_Operation *""'"); 
  }
  arg2 = (TF_Operation *)(argp2);
  if (arg1) (arg1)->oper = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_Output_oper_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Output *arg1 = (TF_Output *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  TF_Operation *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Output_oper_get" "', argument " "1"" of type '" "TF_Output *""'"); 
  }
  arg1 = (TF_Output *)(argp1);
  result = (TF_Operation *) ((arg1)->oper);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Operation, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_TF_Output_index_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_Output *arg1 = (TF_Output *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Output_index_set" "', argument " "1"" of type '" "TF_Output *""'"); 
  }
  arg1 = (TF_Output *)(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_Output_index_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_Output_index_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Output *arg1 = (TF_Output *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Output_index_get" "', argument " "1"" of type '" "TF_Output *""'"); 
  }
  arg1 = (TF_Output *)(argp1);
  result = (int) ((arg1)->index);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_TF_Output(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  TF_Output *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_TF_Output.");
  result = (TF_Output *)new TF_Output();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_TF_Output, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_TF_Output(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_TF_Output(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_TF_Output(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_TF_Output(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          TF_Output * arg1 = (TF_Output *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_TF_GraphSetTensorShape(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  TF_Output arg2 ;
  int64_t *arg3 = (int64_t *) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GraphSetTensorShape.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GraphSetTensorShape" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_TF_Output,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_GraphSetTensorShape" "', argument " "2"" of type '" "TF_Output""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_GraphSetTensorShape" "', argument " "2"" of type '" "TF_Output""'");
    } else {
      arg2 = *((TF_Output *)(argp2));
    }
  }
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_GraphSetTensorShape" "', argument " "3"" of type '" "int64_t const *""'"); 
  }
  arg3 = (int64_t *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_GraphSetTensorShape" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_GraphSetTensorShape" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_GraphSetTensorShape(arg1,arg2,(int64_t const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GraphGetTensorNumDims(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  TF_Output arg2 ;
  TF_Status *arg3 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GraphGetTensorNumDims.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GraphGetTensorNumDims" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_TF_Output,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_GraphGetTensorNumDims" "', argument " "2"" of type '" "TF_Output""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_GraphGetTensorNumDims" "', argument " "2"" of type '" "TF_Output""'");
    } else {
      arg2 = *((TF_Output *)(argp2));
    }
  }
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_GraphGetTensorNumDims" "', argument " "3"" of type '" "TF_Status *""'"); 
  }
  arg3 = (TF_Status *)(argp3);
  result = (int)TF_GraphGetTensorNumDims(arg1,arg2,arg3);
  jsresult = SWIG_From_int((int)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GraphGetTensorShape(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  TF_Output arg2 ;
  int64_t *arg3 = (int64_t *) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GraphGetTensorShape.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GraphGetTensorShape" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_TF_Output,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_GraphGetTensorShape" "', argument " "2"" of type '" "TF_Output""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_GraphGetTensorShape" "', argument " "2"" of type '" "TF_Output""'");
    } else {
      arg2 = *((TF_Output *)(argp2));
    }
  }
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_GraphGetTensorShape" "', argument " "3"" of type '" "int64_t *""'"); 
  }
  arg3 = (int64_t *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_GraphGetTensorShape" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_GraphGetTensorShape" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_GraphGetTensorShape(arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_NewOperation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  TF_OperationDescription *result = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewOperation.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_NewOperation" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_NewOperation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_NewOperation" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  result = (TF_OperationDescription *)TF_NewOperation(arg1,(char const *)arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetDevice(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetDevice.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetDevice" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetDevice" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  TF_SetDevice(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_AddInput(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  TF_Output arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_AddInput.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AddInput" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_TF_Output,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_AddInput" "', argument " "2"" of type '" "TF_Output""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_AddInput" "', argument " "2"" of type '" "TF_Output""'");
    } else {
      arg2 = *((TF_Output *)(argp2));
    }
  }
  TF_AddInput(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_AddInputList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  TF_Output *arg2 = (TF_Output *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_AddInputList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AddInputList" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_AddInputList" "', argument " "2"" of type '" "TF_Output const *""'"); 
  }
  arg2 = (TF_Output *)(argp2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_AddInputList" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  TF_AddInputList(arg1,(TF_Output const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_AddControlInput(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  TF_Operation *arg2 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_AddControlInput.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AddControlInput" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_AddControlInput" "', argument " "2"" of type '" "TF_Operation *""'"); 
  }
  arg2 = (TF_Operation *)(argp2);
  TF_AddControlInput(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_ColocateWith(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  TF_Operation *arg2 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_ColocateWith.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_ColocateWith" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_ColocateWith" "', argument " "2"" of type '" "TF_Operation *""'"); 
  }
  arg2 = (TF_Operation *)(argp2);
  TF_ColocateWith(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  size_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  size_t val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrString.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrString" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrString" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrString" "', argument " "3"" of type '" "void const *""'"); 
  }
  ecode4 = SWIG_AsVal_size_t(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_SetAttrString" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = (size_t)(val4);
  TF_SetAttrString(arg1,(char const *)arg2,(void const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrStringList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  void **arg3 = (void **) 0 ;
  size_t *arg4 = (size_t *) 0 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrStringList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrStringList" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrStringList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrStringList" "', argument " "3"" of type '" "void const *const *""'"); 
  }
  arg3 = (void **)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_size_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_SetAttrStringList" "', argument " "4"" of type '" "size_t const *""'"); 
  }
  arg4 = (size_t *)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_SetAttrStringList" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  TF_SetAttrStringList(arg1,(char const *)arg2,(void const *const *)arg3,(size_t const *)arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrInt(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  int64_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrInt.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrInt" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrInt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  {
    res3 = SWIG_ConvertPtr(args[2], &argp3, SWIGTYPE_p_int64_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrInt" "', argument " "3"" of type '" "int64_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_SetAttrInt" "', argument " "3"" of type '" "int64_t""'");
    } else {
      arg3 = *((int64_t *)(argp3));
    }
  }
  TF_SetAttrInt(arg1,(char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrIntList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  int64_t *arg3 = (int64_t *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrIntList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrIntList" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrIntList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrIntList" "', argument " "3"" of type '" "int64_t const *""'"); 
  }
  arg3 = (int64_t *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_SetAttrIntList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  TF_SetAttrIntList(arg1,(char const *)arg2,(int64_t const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrFloat.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrFloat" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_float(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_SetAttrFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = (float)(val3);
  TF_SetAttrFloat(arg1,(char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrFloatList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = (float *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrFloatList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrFloatList" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrFloatList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrFloatList" "', argument " "3"" of type '" "float const *""'"); 
  }
  arg3 = (float *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_SetAttrFloatList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  TF_SetAttrFloatList(arg1,(char const *)arg2,(float const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrBool(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned char arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrBool.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrBool" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_char(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_SetAttrBool" "', argument " "3"" of type '" "unsigned char""'");
  } 
  arg3 = (unsigned char)(val3);
  TF_SetAttrBool(arg1,(char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrBoolList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrBoolList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrBoolList" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrBoolList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrBoolList" "', argument " "3"" of type '" "unsigned char const *""'"); 
  }
  arg3 = (unsigned char *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_SetAttrBoolList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  TF_SetAttrBoolList(arg1,(char const *)arg2,(unsigned char const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_DataType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrType.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrType" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrType" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_SetAttrType" "', argument " "3"" of type '" "TF_DataType""'");
  } 
  arg3 = (TF_DataType)(val3);
  TF_SetAttrType(arg1,(char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrTypeList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_DataType *arg3 = (TF_DataType *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrTypeList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrTypeList" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrTypeList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_DataType, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrTypeList" "', argument " "3"" of type '" "TF_DataType const *""'"); 
  }
  arg3 = (TF_DataType *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_SetAttrTypeList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  TF_SetAttrTypeList(arg1,(char const *)arg2,(TF_DataType const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrShape(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  int64_t *arg3 = (int64_t *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrShape.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrShape" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrShape" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrShape" "', argument " "3"" of type '" "int64_t const *""'"); 
  }
  arg3 = (int64_t *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_SetAttrShape" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  TF_SetAttrShape(arg1,(char const *)arg2,(int64_t const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrShapeList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  int64_t **arg3 = (int64_t **) 0 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrShapeList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrShapeList" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrShapeList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrShapeList" "', argument " "3"" of type '" "int64_t const *const *""'"); 
  }
  arg3 = (int64_t **)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_SetAttrShapeList" "', argument " "4"" of type '" "int const *""'"); 
  }
  arg4 = (int *)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_SetAttrShapeList" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  TF_SetAttrShapeList(arg1,(char const *)arg2,(int64_t const *const *)arg3,(int const *)arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrTensorShapeProto(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  size_t arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  size_t val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrTensorShapeProto.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrTensorShapeProto" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrTensorShapeProto" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrTensorShapeProto" "', argument " "3"" of type '" "void const *""'"); 
  }
  ecode4 = SWIG_AsVal_size_t(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_SetAttrTensorShapeProto" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = (size_t)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_SetAttrTensorShapeProto" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_SetAttrTensorShapeProto(arg1,(char const *)arg2,(void const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrTensorShapeProtoList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  void **arg3 = (void **) 0 ;
  size_t *arg4 = (size_t *) 0 ;
  int arg5 ;
  TF_Status *arg6 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if(args.Length() != 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrTensorShapeProtoList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrTensorShapeProtoList" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrTensorShapeProtoList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrTensorShapeProtoList" "', argument " "3"" of type '" "void const *const *""'"); 
  }
  arg3 = (void **)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_size_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_SetAttrTensorShapeProtoList" "', argument " "4"" of type '" "size_t const *""'"); 
  }
  arg4 = (size_t *)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_SetAttrTensorShapeProtoList" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_SetAttrTensorShapeProtoList" "', argument " "6"" of type '" "TF_Status *""'"); 
  }
  arg6 = (TF_Status *)(argp6);
  TF_SetAttrTensorShapeProtoList(arg1,(char const *)arg2,(void const *const *)arg3,(size_t const *)arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrTensor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Tensor *arg3 = (TF_Tensor *) 0 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrTensor.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrTensor" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrTensor" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrTensor" "', argument " "3"" of type '" "TF_Tensor *""'"); 
  }
  arg3 = (TF_Tensor *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_SetAttrTensor" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_SetAttrTensor(arg1,(char const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrTensorList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Tensor **arg3 = (TF_Tensor **) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrTensorList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrTensorList" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrTensorList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrTensorList" "', argument " "3"" of type '" "TF_Tensor *const *""'"); 
  }
  arg3 = (TF_Tensor **)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_SetAttrTensorList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_SetAttrTensorList" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_SetAttrTensorList(arg1,(char const *)arg2,(TF_Tensor *const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SetAttrValueProto(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  size_t arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  size_t val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SetAttrValueProto.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SetAttrValueProto" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SetAttrValueProto" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SetAttrValueProto" "', argument " "3"" of type '" "void const *""'"); 
  }
  ecode4 = SWIG_AsVal_size_t(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_SetAttrValueProto" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = (size_t)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_SetAttrValueProto" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_SetAttrValueProto(arg1,(char const *)arg2,(void const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_FinishOperation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_OperationDescription *arg1 = (TF_OperationDescription *) 0 ;
  TF_Status *arg2 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  TF_Operation *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_FinishOperation.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_OperationDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_FinishOperation" "', argument " "1"" of type '" "TF_OperationDescription *""'"); 
  }
  arg1 = (TF_OperationDescription *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_FinishOperation" "', argument " "2"" of type '" "TF_Status *""'"); 
  }
  arg2 = (TF_Status *)(argp2);
  result = (TF_Operation *)TF_FinishOperation(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Operation, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationName" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  result = (char *)TF_OperationName(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationOpType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationOpType.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationOpType" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  result = (char *)TF_OperationOpType(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationDevice(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationDevice.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationDevice" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  result = (char *)TF_OperationDevice(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationNumOutputs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationNumOutputs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationNumOutputs" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  result = (int)TF_OperationNumOutputs(arg1);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationOutputType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Output arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  TF_DataType result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationOutputType.");
  
  {
    res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_TF_Output,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationOutputType" "', argument " "1"" of type '" "TF_Output""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_OperationOutputType" "', argument " "1"" of type '" "TF_Output""'");
    } else {
      arg1 = *((TF_Output *)(argp1));
    }
  }
  result = (TF_DataType)TF_OperationOutputType(arg1);
  jsresult = SWIG_From_int((int)(result));
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationOutputListLength(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Status *arg3 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationOutputListLength.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationOutputListLength" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationOutputListLength" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationOutputListLength" "', argument " "3"" of type '" "TF_Status *""'"); 
  }
  arg3 = (TF_Status *)(argp3);
  result = (int)TF_OperationOutputListLength(arg1,(char const *)arg2,arg3);
  jsresult = SWIG_From_int((int)(result));
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationNumInputs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationNumInputs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationNumInputs" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  result = (int)TF_OperationNumInputs(arg1);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationInputType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Input arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  TF_DataType result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationInputType.");
  
  {
    res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_TF_Input,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationInputType" "', argument " "1"" of type '" "TF_Input""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_OperationInputType" "', argument " "1"" of type '" "TF_Input""'");
    } else {
      arg1 = *((TF_Input *)(argp1));
    }
  }
  result = (TF_DataType)TF_OperationInputType(arg1);
  jsresult = SWIG_From_int((int)(result));
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationInputListLength(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Status *arg3 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationInputListLength.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationInputListLength" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationInputListLength" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationInputListLength" "', argument " "3"" of type '" "TF_Status *""'"); 
  }
  arg3 = (TF_Status *)(argp3);
  result = (int)TF_OperationInputListLength(arg1,(char const *)arg2,arg3);
  jsresult = SWIG_From_int((int)(result));
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationInput(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Input arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  TF_Output result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationInput.");
  
  {
    res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_TF_Input,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationInput" "', argument " "1"" of type '" "TF_Input""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_OperationInput" "', argument " "1"" of type '" "TF_Input""'");
    } else {
      arg1 = *((TF_Input *)(argp1));
    }
  }
  result = TF_OperationInput(arg1);
  jsresult = SWIG_NewPointerObj((new TF_Output((const TF_Output&)(result))), SWIGTYPE_p_TF_Output, SWIG_POINTER_OWN |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationOutputNumConsumers(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Output arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationOutputNumConsumers.");
  
  {
    res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_TF_Output,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationOutputNumConsumers" "', argument " "1"" of type '" "TF_Output""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_OperationOutputNumConsumers" "', argument " "1"" of type '" "TF_Output""'");
    } else {
      arg1 = *((TF_Output *)(argp1));
    }
  }
  result = (int)TF_OperationOutputNumConsumers(arg1);
  jsresult = SWIG_From_int((int)(result));
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationOutputConsumers(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Output arg1 ;
  TF_Input *arg2 = (TF_Input *) 0 ;
  int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationOutputConsumers.");
  
  {
    res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_TF_Output,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationOutputConsumers" "', argument " "1"" of type '" "TF_Output""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_OperationOutputConsumers" "', argument " "1"" of type '" "TF_Output""'");
    } else {
      arg1 = *((TF_Output *)(argp1));
    }
  }
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Input, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationOutputConsumers" "', argument " "2"" of type '" "TF_Input *""'"); 
  }
  arg2 = (TF_Input *)(argp2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_OperationOutputConsumers" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)TF_OperationOutputConsumers(arg1,arg2,arg3);
  jsresult = SWIG_From_int((int)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationNumControlInputs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationNumControlInputs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationNumControlInputs" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  result = (int)TF_OperationNumControlInputs(arg1);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetControlInputs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  TF_Operation **arg2 = (TF_Operation **) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetControlInputs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetControlInputs" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetControlInputs" "', argument " "2"" of type '" "TF_Operation **""'"); 
  }
  arg2 = (TF_Operation **)(argp2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_OperationGetControlInputs" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)TF_OperationGetControlInputs(arg1,arg2,arg3);
  jsresult = SWIG_From_int((int)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationNumControlOutputs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationNumControlOutputs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationNumControlOutputs" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  result = (int)TF_OperationNumControlOutputs(arg1);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetControlOutputs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  TF_Operation **arg2 = (TF_Operation **) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetControlOutputs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetControlOutputs" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetControlOutputs" "', argument " "2"" of type '" "TF_Operation **""'"); 
  }
  arg2 = (TF_Operation **)(argp2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_OperationGetControlOutputs" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)TF_OperationGetControlOutputs(arg1,arg2,arg3);
  jsresult = SWIG_From_int((int)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_ATTR_STRING(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ATTR_STRING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ATTR_INT(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ATTR_INT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ATTR_FLOAT(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ATTR_FLOAT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ATTR_BOOL(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ATTR_BOOL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ATTR_TYPE(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ATTR_TYPE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ATTR_SHAPE(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ATTR_SHAPE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ATTR_TENSOR(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ATTR_TENSOR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ATTR_PLACEHOLDER(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ATTR_PLACEHOLDER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_ATTR_FUNC(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(TF_ATTR_FUNC));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_TF_AttrMetadata_is_list_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_AttrMetadata *arg1 = (TF_AttrMetadata *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_AttrMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AttrMetadata_is_list_set" "', argument " "1"" of type '" "TF_AttrMetadata *""'"); 
  }
  arg1 = (TF_AttrMetadata *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_AttrMetadata_is_list_set" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = (unsigned char)(val2);
  if (arg1) (arg1)->is_list = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_AttrMetadata_is_list_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_AttrMetadata *arg1 = (TF_AttrMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_AttrMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AttrMetadata_is_list_get" "', argument " "1"" of type '" "TF_AttrMetadata *""'"); 
  }
  arg1 = (TF_AttrMetadata *)(argp1);
  result = (unsigned char) ((arg1)->is_list);
  jsresult = SWIG_From_unsigned_SS_char((unsigned char)(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_TF_AttrMetadata_list_size_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_AttrMetadata *arg1 = (TF_AttrMetadata *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_AttrMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AttrMetadata_list_size_set" "', argument " "1"" of type '" "TF_AttrMetadata *""'"); 
  }
  arg1 = (TF_AttrMetadata *)(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_int64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_AttrMetadata_list_size_set" "', argument " "2"" of type '" "int64_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_AttrMetadata_list_size_set" "', argument " "2"" of type '" "int64_t""'");
    } else {
      arg2 = *((int64_t *)(argp2));
    }
  }
  if (arg1) (arg1)->list_size = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_AttrMetadata_list_size_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_AttrMetadata *arg1 = (TF_AttrMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int64_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_AttrMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AttrMetadata_list_size_get" "', argument " "1"" of type '" "TF_AttrMetadata *""'"); 
  }
  arg1 = (TF_AttrMetadata *)(argp1);
  result =  ((arg1)->list_size);
  jsresult = SWIG_NewPointerObj((new int64_t((const int64_t&)(result))), SWIGTYPE_p_int64_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_TF_AttrMetadata_type_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_AttrMetadata *arg1 = (TF_AttrMetadata *) 0 ;
  TF_AttrType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_AttrMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AttrMetadata_type_set" "', argument " "1"" of type '" "TF_AttrMetadata *""'"); 
  }
  arg1 = (TF_AttrMetadata *)(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TF_AttrMetadata_type_set" "', argument " "2"" of type '" "TF_AttrType""'");
  } 
  arg2 = (TF_AttrType)(val2);
  if (arg1) (arg1)->type = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_AttrMetadata_type_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_AttrMetadata *arg1 = (TF_AttrMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  TF_AttrType result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_AttrMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AttrMetadata_type_get" "', argument " "1"" of type '" "TF_AttrMetadata *""'"); 
  }
  arg1 = (TF_AttrMetadata *)(argp1);
  result = (TF_AttrType) ((arg1)->type);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_TF_AttrMetadata_total_size_set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TF_AttrMetadata *arg1 = (TF_AttrMetadata *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_AttrMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AttrMetadata_total_size_set" "', argument " "1"" of type '" "TF_AttrMetadata *""'"); 
  }
  arg1 = (TF_AttrMetadata *)(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_int64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_AttrMetadata_total_size_set" "', argument " "2"" of type '" "int64_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TF_AttrMetadata_total_size_set" "', argument " "2"" of type '" "int64_t""'");
    } else {
      arg2 = *((int64_t *)(argp2));
    }
  }
  if (arg1) (arg1)->total_size = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TF_AttrMetadata_total_size_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_AttrMetadata *arg1 = (TF_AttrMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int64_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TF_AttrMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_AttrMetadata_total_size_get" "', argument " "1"" of type '" "TF_AttrMetadata *""'"); 
  }
  arg1 = (TF_AttrMetadata *)(argp1);
  result =  ((arg1)->total_size);
  jsresult = SWIG_NewPointerObj((new int64_t((const int64_t&)(result))), SWIGTYPE_p_int64_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_TF_AttrMetadata(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  TF_AttrMetadata *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_TF_AttrMetadata.");
  result = (TF_AttrMetadata *)new TF_AttrMetadata();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_TF_AttrMetadata, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_TF_AttrMetadata(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_TF_AttrMetadata(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_TF_AttrMetadata(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_TF_AttrMetadata(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          TF_AttrMetadata * arg1 = (TF_AttrMetadata *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_TF_OperationGetAttrMetadata(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Status *arg3 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  TF_AttrMetadata result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrMetadata.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrMetadata" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrMetadata" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrMetadata" "', argument " "3"" of type '" "TF_Status *""'"); 
  }
  arg3 = (TF_Status *)(argp3);
  result = TF_OperationGetAttrMetadata(arg1,(char const *)arg2,arg3);
  jsresult = SWIG_NewPointerObj((new TF_AttrMetadata((const TF_AttrMetadata&)(result))), SWIGTYPE_p_TF_AttrMetadata, SWIG_POINTER_OWN |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  size_t arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  size_t val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrString.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrString" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrString" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrString" "', argument " "3"" of type '" "void *""'"); 
  }
  ecode4 = SWIG_AsVal_size_t(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_OperationGetAttrString" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = (size_t)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_OperationGetAttrString" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_OperationGetAttrString(arg1,(char const *)arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrStringList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  void **arg3 = (void **) 0 ;
  size_t *arg4 = (size_t *) 0 ;
  int arg5 ;
  void *arg6 = (void *) 0 ;
  size_t arg7 ;
  TF_Status *arg8 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int res6 ;
  size_t val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  
  if(args.Length() != 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrStringList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrStringList" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrStringList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrStringList" "', argument " "3"" of type '" "void **""'"); 
  }
  arg3 = (void **)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_size_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_OperationGetAttrStringList" "', argument " "4"" of type '" "size_t *""'"); 
  }
  arg4 = (size_t *)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_OperationGetAttrStringList" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_OperationGetAttrStringList" "', argument " "6"" of type '" "void *""'"); 
  }
  ecode7 = SWIG_AsVal_size_t(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "TF_OperationGetAttrStringList" "', argument " "7"" of type '" "size_t""'");
  } 
  arg7 = (size_t)(val7);
  res8 = SWIG_ConvertPtr(args[7], &argp8,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "TF_OperationGetAttrStringList" "', argument " "8"" of type '" "TF_Status *""'"); 
  }
  arg8 = (TF_Status *)(argp8);
  TF_OperationGetAttrStringList(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrInt(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  int64_t *arg3 = (int64_t *) 0 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrInt.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrInt" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrInt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrInt" "', argument " "3"" of type '" "int64_t *""'"); 
  }
  arg3 = (int64_t *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_OperationGetAttrInt" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_OperationGetAttrInt(arg1,(char const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrIntList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  int64_t *arg3 = (int64_t *) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrIntList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrIntList" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrIntList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrIntList" "', argument " "3"" of type '" "int64_t *""'"); 
  }
  arg3 = (int64_t *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_OperationGetAttrIntList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_OperationGetAttrIntList" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_OperationGetAttrIntList(arg1,(char const *)arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = (float *) 0 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrFloat.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrFloat" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrFloat" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = (float *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_OperationGetAttrFloat" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_OperationGetAttrFloat(arg1,(char const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrFloatList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = (float *) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrFloatList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrFloatList" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrFloatList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrFloatList" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = (float *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_OperationGetAttrFloatList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_OperationGetAttrFloatList" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_OperationGetAttrFloatList(arg1,(char const *)arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrBool(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrBool.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrBool" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrBool" "', argument " "3"" of type '" "unsigned char *""'"); 
  }
  arg3 = (unsigned char *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_OperationGetAttrBool" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_OperationGetAttrBool(arg1,(char const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrBoolList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrBoolList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrBoolList" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrBoolList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrBoolList" "', argument " "3"" of type '" "unsigned char *""'"); 
  }
  arg3 = (unsigned char *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_OperationGetAttrBoolList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_OperationGetAttrBoolList" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_OperationGetAttrBoolList(arg1,(char const *)arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_DataType *arg3 = (TF_DataType *) 0 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrType.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrType" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrType" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_DataType, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrType" "', argument " "3"" of type '" "TF_DataType *""'"); 
  }
  arg3 = (TF_DataType *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_OperationGetAttrType" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_OperationGetAttrType(arg1,(char const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrTypeList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_DataType *arg3 = (TF_DataType *) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrTypeList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrTypeList" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrTypeList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_DataType, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrTypeList" "', argument " "3"" of type '" "TF_DataType *""'"); 
  }
  arg3 = (TF_DataType *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_OperationGetAttrTypeList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_OperationGetAttrTypeList" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_OperationGetAttrTypeList(arg1,(char const *)arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrShape(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  int64_t *arg3 = (int64_t *) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrShape.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrShape" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrShape" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrShape" "', argument " "3"" of type '" "int64_t *""'"); 
  }
  arg3 = (int64_t *)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_OperationGetAttrShape" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_OperationGetAttrShape" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_OperationGetAttrShape(arg1,(char const *)arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrShapeList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  int64_t **arg3 = (int64_t **) 0 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int64_t *arg6 = (int64_t *) 0 ;
  int arg7 ;
  TF_Status *arg8 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  
  if(args.Length() != 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrShapeList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrShapeList" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrShapeList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrShapeList" "', argument " "3"" of type '" "int64_t **""'"); 
  }
  arg3 = (int64_t **)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_OperationGetAttrShapeList" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = (int *)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_OperationGetAttrShapeList" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_int64_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_OperationGetAttrShapeList" "', argument " "6"" of type '" "int64_t *""'"); 
  }
  arg6 = (int64_t *)(argp6);
  ecode7 = SWIG_AsVal_int(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "TF_OperationGetAttrShapeList" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = (int)(val7);
  res8 = SWIG_ConvertPtr(args[7], &argp8,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "TF_OperationGetAttrShapeList" "', argument " "8"" of type '" "TF_Status *""'"); 
  }
  arg8 = (TF_Status *)(argp8);
  TF_OperationGetAttrShapeList(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrTensorShapeProto(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Buffer *arg3 = (TF_Buffer *) 0 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrTensorShapeProto.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrTensorShapeProto" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrTensorShapeProto" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrTensorShapeProto" "', argument " "3"" of type '" "TF_Buffer *""'"); 
  }
  arg3 = (TF_Buffer *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_OperationGetAttrTensorShapeProto" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_OperationGetAttrTensorShapeProto(arg1,(char const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrTensorShapeProtoList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Buffer **arg3 = (TF_Buffer **) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrTensorShapeProtoList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrTensorShapeProtoList" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrTensorShapeProtoList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrTensorShapeProtoList" "', argument " "3"" of type '" "TF_Buffer **""'"); 
  }
  arg3 = (TF_Buffer **)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_OperationGetAttrTensorShapeProtoList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_OperationGetAttrTensorShapeProtoList" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_OperationGetAttrTensorShapeProtoList(arg1,(char const *)arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrTensor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Tensor **arg3 = (TF_Tensor **) 0 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrTensor.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrTensor" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrTensor" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrTensor" "', argument " "3"" of type '" "TF_Tensor **""'"); 
  }
  arg3 = (TF_Tensor **)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_OperationGetAttrTensor" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_OperationGetAttrTensor(arg1,(char const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrTensorList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Tensor **arg3 = (TF_Tensor **) 0 ;
  int arg4 ;
  TF_Status *arg5 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if(args.Length() != 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrTensorList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrTensorList" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrTensorList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrTensorList" "', argument " "3"" of type '" "TF_Tensor **""'"); 
  }
  arg3 = (TF_Tensor **)(argp3);
  ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TF_OperationGetAttrTensorList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TF_OperationGetAttrTensorList" "', argument " "5"" of type '" "TF_Status *""'"); 
  }
  arg5 = (TF_Status *)(argp5);
  TF_OperationGetAttrTensorList(arg1,(char const *)arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationGetAttrValueProto(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Buffer *arg3 = (TF_Buffer *) 0 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationGetAttrValueProto.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationGetAttrValueProto" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationGetAttrValueProto" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationGetAttrValueProto" "', argument " "3"" of type '" "TF_Buffer *""'"); 
  }
  arg3 = (TF_Buffer *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_OperationGetAttrValueProto" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_OperationGetAttrValueProto(arg1,(char const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GraphOperationByName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  TF_Operation *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GraphOperationByName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GraphOperationByName" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_GraphOperationByName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = (TF_Operation *)TF_GraphOperationByName(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Operation, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GraphNextOperation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  size_t *arg2 = (size_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  TF_Operation *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GraphNextOperation.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GraphNextOperation" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_size_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_GraphNextOperation" "', argument " "2"" of type '" "size_t *""'"); 
  }
  arg2 = (size_t *)(argp2);
  result = (TF_Operation *)TF_GraphNextOperation(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Operation, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GraphToGraphDef(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  TF_Buffer *arg2 = (TF_Buffer *) 0 ;
  TF_Status *arg3 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GraphToGraphDef.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GraphToGraphDef" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_GraphToGraphDef" "', argument " "2"" of type '" "TF_Buffer *""'"); 
  }
  arg2 = (TF_Buffer *)(argp2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_GraphToGraphDef" "', argument " "3"" of type '" "TF_Status *""'"); 
  }
  arg3 = (TF_Status *)(argp3);
  TF_GraphToGraphDef(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_NewImportGraphDefOptions(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_ImportGraphDefOptions *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewImportGraphDefOptions.");
  
  result = (TF_ImportGraphDefOptions *)TF_NewImportGraphDefOptions();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_ImportGraphDefOptions, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_DeleteImportGraphDefOptions(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_ImportGraphDefOptions *arg1 = (TF_ImportGraphDefOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DeleteImportGraphDefOptions.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_ImportGraphDefOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_DeleteImportGraphDefOptions" "', argument " "1"" of type '" "TF_ImportGraphDefOptions *""'"); 
  }
  arg1 = (TF_ImportGraphDefOptions *)(argp1);
  TF_DeleteImportGraphDefOptions(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_ImportGraphDefOptionsSetPrefix(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_ImportGraphDefOptions *arg1 = (TF_ImportGraphDefOptions *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_ImportGraphDefOptionsSetPrefix.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_ImportGraphDefOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_ImportGraphDefOptionsSetPrefix" "', argument " "1"" of type '" "TF_ImportGraphDefOptions *""'"); 
  }
  arg1 = (TF_ImportGraphDefOptions *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_ImportGraphDefOptionsSetPrefix" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  TF_ImportGraphDefOptionsSetPrefix(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GraphImportGraphDef(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  TF_Buffer *arg2 = (TF_Buffer *) 0 ;
  TF_ImportGraphDefOptions *arg3 = (TF_ImportGraphDefOptions *) 0 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GraphImportGraphDef.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GraphImportGraphDef" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_GraphImportGraphDef" "', argument " "2"" of type '" "TF_Buffer const *""'"); 
  }
  arg2 = (TF_Buffer *)(argp2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_ImportGraphDefOptions, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_GraphImportGraphDef" "', argument " "3"" of type '" "TF_ImportGraphDefOptions const *""'"); 
  }
  arg3 = (TF_ImportGraphDefOptions *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_GraphImportGraphDef" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_GraphImportGraphDef(arg1,(TF_Buffer const *)arg2,(TF_ImportGraphDefOptions const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_OperationToNodeDef(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Operation *arg1 = (TF_Operation *) 0 ;
  TF_Buffer *arg2 = (TF_Buffer *) 0 ;
  TF_Status *arg3 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_OperationToNodeDef.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_OperationToNodeDef" "', argument " "1"" of type '" "TF_Operation *""'"); 
  }
  arg1 = (TF_Operation *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_OperationToNodeDef" "', argument " "2"" of type '" "TF_Buffer *""'"); 
  }
  arg2 = (TF_Buffer *)(argp2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_OperationToNodeDef" "', argument " "3"" of type '" "TF_Status *""'"); 
  }
  arg3 = (TF_Status *)(argp3);
  TF_OperationToNodeDef(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_NewSession(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Graph *arg1 = (TF_Graph *) 0 ;
  TF_SessionOptions *arg2 = (TF_SessionOptions *) 0 ;
  TF_Status *arg3 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  TF_Session *result = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewSession.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_NewSession" "', argument " "1"" of type '" "TF_Graph *""'"); 
  }
  arg1 = (TF_Graph *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_SessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_NewSession" "', argument " "2"" of type '" "TF_SessionOptions const *""'"); 
  }
  arg2 = (TF_SessionOptions *)(argp2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_NewSession" "', argument " "3"" of type '" "TF_Status *""'"); 
  }
  arg3 = (TF_Status *)(argp3);
  result = (TF_Session *)TF_NewSession(arg1,(TF_SessionOptions const *)arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Session, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_LoadSessionFromSavedModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_SessionOptions *arg1 = (TF_SessionOptions *) 0 ;
  TF_Buffer *arg2 = (TF_Buffer *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int arg5 ;
  TF_Graph *arg6 = (TF_Graph *) 0 ;
  TF_Buffer *arg7 = (TF_Buffer *) 0 ;
  TF_Status *arg8 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  TF_Session *result = 0 ;
  
  if(args.Length() != 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_LoadSessionFromSavedModel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_SessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_LoadSessionFromSavedModel" "', argument " "1"" of type '" "TF_SessionOptions const *""'"); 
  }
  arg1 = (TF_SessionOptions *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_LoadSessionFromSavedModel" "', argument " "2"" of type '" "TF_Buffer const *""'"); 
  }
  arg2 = (TF_Buffer *)(argp2);
  res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_LoadSessionFromSavedModel" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_LoadSessionFromSavedModel" "', argument " "4"" of type '" "char const *const *""'"); 
  }
  arg4 = (char **)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_LoadSessionFromSavedModel" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_TF_Graph, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_LoadSessionFromSavedModel" "', argument " "6"" of type '" "TF_Graph *""'"); 
  }
  arg6 = (TF_Graph *)(argp6);
  res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "TF_LoadSessionFromSavedModel" "', argument " "7"" of type '" "TF_Buffer *""'"); 
  }
  arg7 = (TF_Buffer *)(argp7);
  res8 = SWIG_ConvertPtr(args[7], &argp8,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "TF_LoadSessionFromSavedModel" "', argument " "8"" of type '" "TF_Status *""'"); 
  }
  arg8 = (TF_Status *)(argp8);
  result = (TF_Session *)TF_LoadSessionFromSavedModel((TF_SessionOptions const *)arg1,(TF_Buffer const *)arg2,(char const *)arg3,(char const *const *)arg4,arg5,arg6,arg7,arg8);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Session, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_CloseSession(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Session *arg1 = (TF_Session *) 0 ;
  TF_Status *arg2 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_CloseSession.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_CloseSession" "', argument " "1"" of type '" "TF_Session *""'"); 
  }
  arg1 = (TF_Session *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_CloseSession" "', argument " "2"" of type '" "TF_Status *""'"); 
  }
  arg2 = (TF_Status *)(argp2);
  TF_CloseSession(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_DeleteSession(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Session *arg1 = (TF_Session *) 0 ;
  TF_Status *arg2 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DeleteSession.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_DeleteSession" "', argument " "1"" of type '" "TF_Session *""'"); 
  }
  arg1 = (TF_Session *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_DeleteSession" "', argument " "2"" of type '" "TF_Status *""'"); 
  }
  arg2 = (TF_Status *)(argp2);
  TF_DeleteSession(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SessionRun(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Session *arg1 = (TF_Session *) 0 ;
  TF_Buffer *arg2 = (TF_Buffer *) 0 ;
  TF_Output *arg3 = (TF_Output *) 0 ;
  TF_Tensor **arg4 = (TF_Tensor **) 0 ;
  int arg5 ;
  TF_Output *arg6 = (TF_Output *) 0 ;
  TF_Tensor **arg7 = (TF_Tensor **) 0 ;
  int arg8 ;
  TF_Operation **arg9 = (TF_Operation **) 0 ;
  int arg10 ;
  TF_Buffer *arg11 = (TF_Buffer *) 0 ;
  TF_Status *arg12 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  void *argp11 = 0 ;
  int res11 = 0 ;
  void *argp12 = 0 ;
  int res12 = 0 ;
  
  if(args.Length() != 12) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SessionRun.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SessionRun" "', argument " "1"" of type '" "TF_Session *""'"); 
  }
  arg1 = (TF_Session *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SessionRun" "', argument " "2"" of type '" "TF_Buffer const *""'"); 
  }
  arg2 = (TF_Buffer *)(argp2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SessionRun" "', argument " "3"" of type '" "TF_Output const *""'"); 
  }
  arg3 = (TF_Output *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_SessionRun" "', argument " "4"" of type '" "TF_Tensor *const *""'"); 
  }
  arg4 = (TF_Tensor **)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_SessionRun" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_SessionRun" "', argument " "6"" of type '" "TF_Output const *""'"); 
  }
  arg6 = (TF_Output *)(argp6);
  res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "TF_SessionRun" "', argument " "7"" of type '" "TF_Tensor **""'"); 
  }
  arg7 = (TF_Tensor **)(argp7);
  ecode8 = SWIG_AsVal_int(args[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "TF_SessionRun" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = (int)(val8);
  res9 = SWIG_ConvertPtr(args[8], &argp9,SWIGTYPE_p_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "TF_SessionRun" "', argument " "9"" of type '" "TF_Operation const *const *""'"); 
  }
  arg9 = (TF_Operation **)(argp9);
  ecode10 = SWIG_AsVal_int(args[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "TF_SessionRun" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = (int)(val10);
  res11 = SWIG_ConvertPtr(args[10], &argp11,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "TF_SessionRun" "', argument " "11"" of type '" "TF_Buffer *""'"); 
  }
  arg11 = (TF_Buffer *)(argp11);
  res12 = SWIG_ConvertPtr(args[11], &argp12,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res12)) {
    SWIG_exception_fail(SWIG_ArgError(res12), "in method '" "TF_SessionRun" "', argument " "12"" of type '" "TF_Status *""'"); 
  }
  arg12 = (TF_Status *)(argp12);
  TF_SessionRun(arg1,(TF_Buffer const *)arg2,(TF_Output const *)arg3,(TF_Tensor *const *)arg4,arg5,(TF_Output const *)arg6,arg7,arg8,(TF_Operation const *const *)arg9,arg10,arg11,arg12);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SessionPRunSetup(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Session *arg1 = (TF_Session *) 0 ;
  TF_Output *arg2 = (TF_Output *) 0 ;
  int arg3 ;
  TF_Output *arg4 = (TF_Output *) 0 ;
  int arg5 ;
  TF_Operation **arg6 = (TF_Operation **) 0 ;
  int arg7 ;
  char **arg8 = (char **) 0 ;
  TF_Status *arg9 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  
  if(args.Length() != 9) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SessionPRunSetup.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SessionPRunSetup" "', argument " "1"" of type '" "TF_Session *""'"); 
  }
  arg1 = (TF_Session *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SessionPRunSetup" "', argument " "2"" of type '" "TF_Output const *""'"); 
  }
  arg2 = (TF_Output *)(argp2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_SessionPRunSetup" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_SessionPRunSetup" "', argument " "4"" of type '" "TF_Output const *""'"); 
  }
  arg4 = (TF_Output *)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_SessionPRunSetup" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_SessionPRunSetup" "', argument " "6"" of type '" "TF_Operation const *const *""'"); 
  }
  arg6 = (TF_Operation **)(argp6);
  ecode7 = SWIG_AsVal_int(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "TF_SessionPRunSetup" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = (int)(val7);
  res8 = SWIG_ConvertPtr(args[7], &argp8,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "TF_SessionPRunSetup" "', argument " "8"" of type '" "char const **""'"); 
  }
  arg8 = (char **)(argp8);
  res9 = SWIG_ConvertPtr(args[8], &argp9,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "TF_SessionPRunSetup" "', argument " "9"" of type '" "TF_Status *""'"); 
  }
  arg9 = (TF_Status *)(argp9);
  TF_SessionPRunSetup(arg1,(TF_Output const *)arg2,arg3,(TF_Output const *)arg4,arg5,(TF_Operation const *const *)arg6,arg7,(char const **)arg8,arg9);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_SessionPRun(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Session *arg1 = (TF_Session *) 0 ;
  char *arg2 = (char *) 0 ;
  TF_Output *arg3 = (TF_Output *) 0 ;
  TF_Tensor **arg4 = (TF_Tensor **) 0 ;
  int arg5 ;
  TF_Output *arg6 = (TF_Output *) 0 ;
  TF_Tensor **arg7 = (TF_Tensor **) 0 ;
  int arg8 ;
  TF_Operation **arg9 = (TF_Operation **) 0 ;
  int arg10 ;
  TF_Status *arg11 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  void *argp11 = 0 ;
  int res11 = 0 ;
  
  if(args.Length() != 11) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_SessionPRun.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_SessionPRun" "', argument " "1"" of type '" "TF_Session *""'"); 
  }
  arg1 = (TF_Session *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_SessionPRun" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_SessionPRun" "', argument " "3"" of type '" "TF_Output const *""'"); 
  }
  arg3 = (TF_Output *)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_SessionPRun" "', argument " "4"" of type '" "TF_Tensor *const *""'"); 
  }
  arg4 = (TF_Tensor **)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_SessionPRun" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_TF_Output, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_SessionPRun" "', argument " "6"" of type '" "TF_Output const *""'"); 
  }
  arg6 = (TF_Output *)(argp6);
  res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "TF_SessionPRun" "', argument " "7"" of type '" "TF_Tensor **""'"); 
  }
  arg7 = (TF_Tensor **)(argp7);
  ecode8 = SWIG_AsVal_int(args[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "TF_SessionPRun" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = (int)(val8);
  res9 = SWIG_ConvertPtr(args[8], &argp9,SWIGTYPE_p_p_TF_Operation, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "TF_SessionPRun" "', argument " "9"" of type '" "TF_Operation const *const *""'"); 
  }
  arg9 = (TF_Operation **)(argp9);
  ecode10 = SWIG_AsVal_int(args[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "TF_SessionPRun" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = (int)(val10);
  res11 = SWIG_ConvertPtr(args[10], &argp11,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "TF_SessionPRun" "', argument " "11"" of type '" "TF_Status *""'"); 
  }
  arg11 = (TF_Status *)(argp11);
  TF_SessionPRun(arg1,(char const *)arg2,(TF_Output const *)arg3,(TF_Tensor *const *)arg4,arg5,(TF_Output const *)arg6,arg7,arg8,(TF_Operation const *const *)arg9,arg10,arg11);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_NewDeprecatedSession(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_SessionOptions *arg1 = (TF_SessionOptions *) 0 ;
  TF_Status *arg2 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  TF_DeprecatedSession *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_NewDeprecatedSession.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_SessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_NewDeprecatedSession" "', argument " "1"" of type '" "TF_SessionOptions const *""'"); 
  }
  arg1 = (TF_SessionOptions *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_NewDeprecatedSession" "', argument " "2"" of type '" "TF_Status *""'"); 
  }
  arg2 = (TF_Status *)(argp2);
  result = (TF_DeprecatedSession *)TF_NewDeprecatedSession((TF_SessionOptions const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_DeprecatedSession, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_CloseDeprecatedSession(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_DeprecatedSession *arg1 = (TF_DeprecatedSession *) 0 ;
  TF_Status *arg2 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_CloseDeprecatedSession.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_DeprecatedSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_CloseDeprecatedSession" "', argument " "1"" of type '" "TF_DeprecatedSession *""'"); 
  }
  arg1 = (TF_DeprecatedSession *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_CloseDeprecatedSession" "', argument " "2"" of type '" "TF_Status *""'"); 
  }
  arg2 = (TF_Status *)(argp2);
  TF_CloseDeprecatedSession(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_DeleteDeprecatedSession(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_DeprecatedSession *arg1 = (TF_DeprecatedSession *) 0 ;
  TF_Status *arg2 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DeleteDeprecatedSession.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_DeprecatedSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_DeleteDeprecatedSession" "', argument " "1"" of type '" "TF_DeprecatedSession *""'"); 
  }
  arg1 = (TF_DeprecatedSession *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_DeleteDeprecatedSession" "', argument " "2"" of type '" "TF_Status *""'"); 
  }
  arg2 = (TF_Status *)(argp2);
  TF_DeleteDeprecatedSession(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_Reset(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_SessionOptions *arg1 = (TF_SessionOptions *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_Reset.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_SessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Reset" "', argument " "1"" of type '" "TF_SessionOptions const *""'"); 
  }
  arg1 = (TF_SessionOptions *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_Reset" "', argument " "2"" of type '" "char const **""'"); 
  }
  arg2 = (char **)(argp2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_Reset" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_Reset" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_Reset((TF_SessionOptions const *)arg1,(char const **)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_ExtendGraph(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_DeprecatedSession *arg1 = (TF_DeprecatedSession *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  TF_Status *arg4 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if(args.Length() != 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_ExtendGraph.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_DeprecatedSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_ExtendGraph" "', argument " "1"" of type '" "TF_DeprecatedSession *""'"); 
  }
  arg1 = (TF_DeprecatedSession *)(argp1);
  res2 = SWIG_ConvertPtr(args[1],SWIG_as_voidptrptr(&arg2), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_ExtendGraph" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_size_t(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_ExtendGraph" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_ExtendGraph" "', argument " "4"" of type '" "TF_Status *""'"); 
  }
  arg4 = (TF_Status *)(argp4);
  TF_ExtendGraph(arg1,(void const *)arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_Run(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_DeprecatedSession *arg1 = (TF_DeprecatedSession *) 0 ;
  TF_Buffer *arg2 = (TF_Buffer *) 0 ;
  char **arg3 = (char **) 0 ;
  TF_Tensor **arg4 = (TF_Tensor **) 0 ;
  int arg5 ;
  char **arg6 = (char **) 0 ;
  TF_Tensor **arg7 = (TF_Tensor **) 0 ;
  int arg8 ;
  char **arg9 = (char **) 0 ;
  int arg10 ;
  TF_Buffer *arg11 = (TF_Buffer *) 0 ;
  TF_Status *arg12 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  void *argp11 = 0 ;
  int res11 = 0 ;
  void *argp12 = 0 ;
  int res12 = 0 ;
  
  if(args.Length() != 12) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_Run.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_DeprecatedSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_Run" "', argument " "1"" of type '" "TF_DeprecatedSession *""'"); 
  }
  arg1 = (TF_DeprecatedSession *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_Run" "', argument " "2"" of type '" "TF_Buffer const *""'"); 
  }
  arg2 = (TF_Buffer *)(argp2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_Run" "', argument " "3"" of type '" "char const **""'"); 
  }
  arg3 = (char **)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_Run" "', argument " "4"" of type '" "TF_Tensor **""'"); 
  }
  arg4 = (TF_Tensor **)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_Run" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_Run" "', argument " "6"" of type '" "char const **""'"); 
  }
  arg6 = (char **)(argp6);
  res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "TF_Run" "', argument " "7"" of type '" "TF_Tensor **""'"); 
  }
  arg7 = (TF_Tensor **)(argp7);
  ecode8 = SWIG_AsVal_int(args[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "TF_Run" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = (int)(val8);
  res9 = SWIG_ConvertPtr(args[8], &argp9,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "TF_Run" "', argument " "9"" of type '" "char const **""'"); 
  }
  arg9 = (char **)(argp9);
  ecode10 = SWIG_AsVal_int(args[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "TF_Run" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = (int)(val10);
  res11 = SWIG_ConvertPtr(args[10], &argp11,SWIGTYPE_p_TF_Buffer, 0 |  0 );
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "TF_Run" "', argument " "11"" of type '" "TF_Buffer *""'"); 
  }
  arg11 = (TF_Buffer *)(argp11);
  res12 = SWIG_ConvertPtr(args[11], &argp12,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res12)) {
    SWIG_exception_fail(SWIG_ArgError(res12), "in method '" "TF_Run" "', argument " "12"" of type '" "TF_Status *""'"); 
  }
  arg12 = (TF_Status *)(argp12);
  TF_Run(arg1,(TF_Buffer const *)arg2,(char const **)arg3,arg4,arg5,(char const **)arg6,arg7,arg8,(char const **)arg9,arg10,arg11,arg12);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_PRunSetup(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_DeprecatedSession *arg1 = (TF_DeprecatedSession *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  char **arg4 = (char **) 0 ;
  int arg5 ;
  char **arg6 = (char **) 0 ;
  int arg7 ;
  char **arg8 = (char **) 0 ;
  TF_Status *arg9 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  
  if(args.Length() != 9) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_PRunSetup.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_DeprecatedSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_PRunSetup" "', argument " "1"" of type '" "TF_DeprecatedSession *""'"); 
  }
  arg1 = (TF_DeprecatedSession *)(argp1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_PRunSetup" "', argument " "2"" of type '" "char const **""'"); 
  }
  arg2 = (char **)(argp2);
  ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TF_PRunSetup" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_PRunSetup" "', argument " "4"" of type '" "char const **""'"); 
  }
  arg4 = (char **)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_PRunSetup" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_PRunSetup" "', argument " "6"" of type '" "char const **""'"); 
  }
  arg6 = (char **)(argp6);
  ecode7 = SWIG_AsVal_int(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "TF_PRunSetup" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = (int)(val7);
  res8 = SWIG_ConvertPtr(args[7], &argp8,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "TF_PRunSetup" "', argument " "8"" of type '" "char const **""'"); 
  }
  arg8 = (char **)(argp8);
  res9 = SWIG_ConvertPtr(args[8], &argp9,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "TF_PRunSetup" "', argument " "9"" of type '" "TF_Status *""'"); 
  }
  arg9 = (TF_Status *)(argp9);
  TF_PRunSetup(arg1,(char const **)arg2,arg3,(char const **)arg4,arg5,(char const **)arg6,arg7,(char const **)arg8,arg9);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_PRun(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_DeprecatedSession *arg1 = (TF_DeprecatedSession *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  TF_Tensor **arg4 = (TF_Tensor **) 0 ;
  int arg5 ;
  char **arg6 = (char **) 0 ;
  TF_Tensor **arg7 = (TF_Tensor **) 0 ;
  int arg8 ;
  char **arg9 = (char **) 0 ;
  int arg10 ;
  TF_Status *arg11 = (TF_Status *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  void *argp11 = 0 ;
  int res11 = 0 ;
  
  if(args.Length() != 11) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_PRun.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_DeprecatedSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_PRun" "', argument " "1"" of type '" "TF_DeprecatedSession *""'"); 
  }
  arg1 = (TF_DeprecatedSession *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_PRun" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TF_PRun" "', argument " "3"" of type '" "char const **""'"); 
  }
  arg3 = (char **)(argp3);
  res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TF_PRun" "', argument " "4"" of type '" "TF_Tensor **""'"); 
  }
  arg4 = (TF_Tensor **)(argp4);
  ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TF_PRun" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TF_PRun" "', argument " "6"" of type '" "char const **""'"); 
  }
  arg6 = (char **)(argp6);
  res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_p_TF_Tensor, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "TF_PRun" "', argument " "7"" of type '" "TF_Tensor **""'"); 
  }
  arg7 = (TF_Tensor **)(argp7);
  ecode8 = SWIG_AsVal_int(args[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "TF_PRun" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = (int)(val8);
  res9 = SWIG_ConvertPtr(args[8], &argp9,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "TF_PRun" "', argument " "9"" of type '" "char const **""'"); 
  }
  arg9 = (char **)(argp9);
  ecode10 = SWIG_AsVal_int(args[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "TF_PRun" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = (int)(val10);
  res11 = SWIG_ConvertPtr(args[10], &argp11,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "TF_PRun" "', argument " "11"" of type '" "TF_Status *""'"); 
  }
  arg11 = (TF_Status *)(argp11);
  TF_PRun(arg1,(char const *)arg2,(char const **)arg3,arg4,arg5,(char const **)arg6,arg7,arg8,(char const **)arg9,arg10,arg11);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_LoadLibrary(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  char *arg1 = (char *) 0 ;
  TF_Status *arg2 = (TF_Status *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  TF_Library *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_LoadLibrary.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_LoadLibrary" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_TF_Status, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TF_LoadLibrary" "', argument " "2"" of type '" "TF_Status *""'"); 
  }
  arg2 = (TF_Status *)(argp2);
  result = (TF_Library *)TF_LoadLibrary((char const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Library, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GetOpList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Library *arg1 = (TF_Library *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  TF_Buffer result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GetOpList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Library, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_GetOpList" "', argument " "1"" of type '" "TF_Library *""'"); 
  }
  arg1 = (TF_Library *)(argp1);
  result = TF_GetOpList(arg1);
  jsresult = SWIG_NewPointerObj((new TF_Buffer((const TF_Buffer&)(result))), SWIGTYPE_p_TF_Buffer, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_DeleteLibraryHandle(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Library *arg1 = (TF_Library *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_DeleteLibraryHandle.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_TF_Library, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TF_DeleteLibraryHandle" "', argument " "1"" of type '" "TF_Library *""'"); 
  }
  arg1 = (TF_Library *)(argp1);
  TF_DeleteLibraryHandle(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_GetAllOpList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  TF_Buffer *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_TF_GetAllOpList.");
  
  result = (TF_Buffer *)TF_GetAllOpList();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Buffer, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IsGoogleCudaEnabled(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsGoogleCudaEnabled.");
  
  result = (bool)tensorflow::IsGoogleCudaEnabled();
  jsresult = SWIG_From_bool((bool)(result));
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CudaSupportsHalfMatMulAndConv(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CudaSupportsHalfMatMulAndConv.");
  
  result = (bool)tensorflow::CudaSupportsHalfMatMulAndConv();
  jsresult = SWIG_From_bool((bool)(result));
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_TF_MAJOR_VERSION(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_MINOR_VERSION(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_PATCH_VERSION(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_VERSION_SUFFIX(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_FromCharPtr((const char *)"");
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_VERSION_STRING(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_FromCharPtr((const char *)"(1.0.1)");
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_GRAPH_DEF_VERSION_MIN_PRODUCER(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_GRAPH_DEF_VERSION_MIN_CONSUMER(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_GRAPH_DEF_VERSION(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(21));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_CHECKPOINT_VERSION_MIN_PRODUCER(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_CHECKPOINT_VERSION_MIN_CONSUMER(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_TF_CHECKPOINT_VERSION(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_tf_compiler_version(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  char *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_tf_compiler_version.");
  
  result = (char *)tf_compiler_version();
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tf_git_version(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  char *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_tf_git_version.");
  
  result = (char *)tf_git_version();
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_protobuf_AddDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_protobuf_AddDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.");
  
  tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.");
  
  tensorflow::protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.");
  
  tensorflow::protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.");
  
  tensorflow::protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_OpDef_ArgDef__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpDef_ArgDef *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpDef_ArgDef__SWIG_0.");
  result = (tensorflow::OpDef_ArgDef *)new tensorflow::OpDef_ArgDef();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpDef_ArgDef, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_OpDef_ArgDef(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_OpDef_ArgDef(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_OpDef_ArgDef(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_OpDef_ArgDef(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          tensorflow::OpDef_ArgDef * arg1 = (tensorflow::OpDef_ArgDef *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_new_OpDef_ArgDef__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpDef_ArgDef *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  tensorflow::OpDef_ArgDef *result;
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpDef_ArgDef__SWIG_1.");
  res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_tensorflow__OpDef_ArgDef,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OpDef_ArgDef" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpDef_ArgDef" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const &""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (tensorflow::OpDef_ArgDef *)new tensorflow::OpDef_ArgDef((tensorflow::OpDef_ArgDef const &)*arg1);
  
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpDef_ArgDef, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_OpDef_ArgDef(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  OverloadErrorHandler errorHandler;
  v8::Handle<v8::Value> self;
  
  // switch all cases by means of series of if-returns.
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpDef_ArgDef__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpDef_ArgDef__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpDef_ArgDef__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpDef_ArgDef__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  // default:
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for construction of _exports_OpDef_ArgDef");
  
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_GetArena(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Arena *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_GetArena.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_GetArena" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::google::protobuf::Arena *)((tensorflow::OpDef_ArgDef const *)arg1)->GetArena();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_GetMaybeArenaPointer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_GetMaybeArenaPointer.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_GetMaybeArenaPointer" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (void *)((tensorflow::OpDef_ArgDef const *)arg1)->GetMaybeArenaPointer();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_descriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::Descriptor *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_descriptor.");
  
  result = (::google::protobuf::Descriptor *)tensorflow::OpDef_ArgDef::descriptor();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Descriptor, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_default_instance.");
  
  result = (tensorflow::OpDef_ArgDef *) &tensorflow::OpDef_ArgDef::default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_internal_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_internal_default_instance.");
  
  result = (tensorflow::OpDef_ArgDef *)tensorflow::OpDef_ArgDef::internal_default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_UnsafeArenaSwap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  tensorflow::OpDef_ArgDef *arg2 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_UnsafeArenaSwap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_UnsafeArenaSwap" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_UnsafeArenaSwap" "', argument " "2"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg2 = (tensorflow::OpDef_ArgDef *)(argp2);
  (arg1)->UnsafeArenaSwap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_Swap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  tensorflow::OpDef_ArgDef *arg2 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_Swap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_Swap" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_Swap" "', argument " "2"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg2 = (tensorflow::OpDef_ArgDef *)(argp2);
  (arg1)->Swap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_New__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  tensorflow::OpDef_ArgDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_New" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (tensorflow::OpDef_ArgDef *)((tensorflow::OpDef_ArgDef const *)arg1)->New();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_New__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::google::protobuf::Arena *arg2 = (::google::protobuf::Arena *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  tensorflow::OpDef_ArgDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_New" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_New" "', argument " "2"" of type '" "::google::protobuf::Arena *""'"); 
  }
  arg2 = (::google::protobuf::Arena *)(argp2);
  result = (tensorflow::OpDef_ArgDef *)((tensorflow::OpDef_ArgDef const *)arg1)->New(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_New(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function New.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_CopyFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->CopyFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_MergeFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->MergeFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_CopyFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  tensorflow::OpDef_ArgDef *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpDef_ArgDef,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpDef_ArgDef const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpDef_ArgDef const &""'"); 
  }
  arg2 = (tensorflow::OpDef_ArgDef *)(argp2);
  (arg1)->CopyFrom((tensorflow::OpDef_ArgDef const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_CopyFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function CopyFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_MergeFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  tensorflow::OpDef_ArgDef *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpDef_ArgDef,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpDef_ArgDef const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpDef_ArgDef const &""'"); 
  }
  arg2 = (tensorflow::OpDef_ArgDef *)(argp2);
  (arg1)->MergeFrom((tensorflow::OpDef_ArgDef const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_MergeFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function MergeFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_Clear(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_Clear.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_Clear" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  (arg1)->Clear();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_IsInitialized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_IsInitialized.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_IsInitialized" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (bool)((tensorflow::OpDef_ArgDef const *)arg1)->IsInitialized();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_ByteSizeLong(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_ByteSizeLong.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_ByteSizeLong" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = ((tensorflow::OpDef_ArgDef const *)arg1)->ByteSizeLong();
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_MergePartialFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::google::protobuf::io::CodedInputStream *arg2 = (::google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_MergePartialFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_MergePartialFromCodedStream" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_MergePartialFromCodedStream" "', argument " "2"" of type '" "::google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->MergePartialFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_SerializeWithCachedSizes(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::google::protobuf::io::CodedOutputStream *arg2 = (::google::protobuf::io::CodedOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_SerializeWithCachedSizes.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_SerializeWithCachedSizes" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_SerializeWithCachedSizes" "', argument " "2"" of type '" "::google::protobuf::io::CodedOutputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedOutputStream *)(argp2);
  ((tensorflow::OpDef_ArgDef const *)arg1)->SerializeWithCachedSizes(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_InternalSerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  bool arg2 ;
  ::google::protobuf::uint8 *arg3 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_InternalSerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_InternalSerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_ArgDef_InternalSerializeWithCachedSizesToArray" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OpDef_ArgDef_InternalSerializeWithCachedSizesToArray" "', argument " "3"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg3 = (::google::protobuf::uint8 *)(argp3);
  result = (::google::protobuf::uint8 *)((tensorflow::OpDef_ArgDef const *)arg1)->InternalSerializeWithCachedSizesToArray(arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_SerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::google::protobuf::uint8 *arg2 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_SerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_SerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_SerializeWithCachedSizesToArray" "', argument " "2"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg2 = (::google::protobuf::uint8 *)(argp2);
  result = (::google::protobuf::uint8 *)((tensorflow::OpDef_ArgDef const *)arg1)->SerializeWithCachedSizesToArray(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_GetCachedSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_GetCachedSize.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_GetCachedSize" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (int)((tensorflow::OpDef_ArgDef const *)arg1)->GetCachedSize();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_GetMetadata(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Metadata result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_GetMetadata.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_GetMetadata" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = ((tensorflow::OpDef_ArgDef const *)arg1)->GetMetadata();
  jsresult = SWIG_NewPointerObj((new ::google::protobuf::Metadata((const ::google::protobuf::Metadata&)(result))), SWIGTYPE_p_google__protobuf__Metadata, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_clear_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_clear_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_clear_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  (arg1)->clear_name();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_ArgDef_kNameFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_ArgDef::kNameFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef_ArgDef const *)arg1)->name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_name__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_name" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_set_name" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_name((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_name__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_name((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_name__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_ArgDef_set_name" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_name((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_name__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_name__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_name__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_name__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_name__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_name__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_name.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_mutable_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_mutable_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_mutable_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_release_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_release_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_release_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->release_name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_allocated_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_set_allocated_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_allocated_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_allocated_name" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_name(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_release_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_release_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_release_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_name" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_name" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_name(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_clear_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_clear_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_clear_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  (arg1)->clear_description();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_ArgDef_kDescriptionFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_ArgDef::kDescriptionFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef_ArgDef const *)arg1)->description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_description__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_description" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_set_description" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_description((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_description__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_description" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_description((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_description__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_description" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_ArgDef_set_description" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_description((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_description__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_description__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_description__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_description__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_description__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_description__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_description.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_mutable_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_mutable_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_mutable_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_release_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_release_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_release_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->release_description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_allocated_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_set_allocated_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_allocated_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_allocated_description" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_description(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_release_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_release_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_release_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_description" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_description" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_description(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_clear_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_clear_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_clear_type" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  (arg1)->clear_type();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_ArgDef_kTypeFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_ArgDef::kTypeFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::DataType result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_type" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = ((tensorflow::OpDef_ArgDef const *)arg1)->type();
  jsresult = SWIG_NewPointerObj((new ::tensorflow::DataType((const ::tensorflow::DataType&)(result))), SWIGTYPE_p_tensorflow__DataType, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::tensorflow::DataType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_set_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_type" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__DataType,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_type" "', argument " "2"" of type '" "::tensorflow::DataType""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_set_type" "', argument " "2"" of type '" "::tensorflow::DataType""'");
    } else {
      arg2 = *((::tensorflow::DataType *)(argp2));
    }
  }
  (arg1)->set_type(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_clear_type_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_clear_type_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_clear_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  (arg1)->clear_type_attr();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_ArgDef_kTypeAttrFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_ArgDef::kTypeAttrFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_type_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_type_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef_ArgDef const *)arg1)->type_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_type_attr__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_type_attr" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_set_type_attr" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_type_attr((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_type_attr__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_type_attr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_type_attr((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_type_attr__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_type_attr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_ArgDef_set_type_attr" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_type_attr((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_type_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_type_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_type_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_type_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_type_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_type_attr__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_type_attr__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_type_attr.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_mutable_type_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_mutable_type_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_mutable_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_type_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_release_type_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_release_type_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_release_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->release_type_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_allocated_type_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_set_allocated_type_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_allocated_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_allocated_type_attr" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_type_attr(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_release_type_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_release_type_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_release_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_type_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_type_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_type_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_type_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_type_attr" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_type_attr(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_clear_number_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_clear_number_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_clear_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  (arg1)->clear_number_attr();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_ArgDef_kNumberAttrFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_ArgDef::kNumberAttrFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_number_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_number_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef_ArgDef const *)arg1)->number_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_number_attr__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_number_attr" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_set_number_attr" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_number_attr((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_number_attr__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_number_attr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_number_attr((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_number_attr__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_number_attr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_ArgDef_set_number_attr" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_number_attr((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_number_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_number_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_number_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_number_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_number_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_number_attr__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_number_attr__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_number_attr.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_mutable_number_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_mutable_number_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_mutable_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_number_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_release_number_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_release_number_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_release_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->release_number_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_allocated_number_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_set_allocated_number_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_allocated_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_allocated_number_attr" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_number_attr(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_release_number_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_release_number_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_release_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_number_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_number_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_number_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_number_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_number_attr" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_number_attr(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_clear_type_list_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_clear_type_list_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_clear_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  (arg1)->clear_type_list_attr();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_ArgDef_kTypeListAttrFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_ArgDef::kTypeListAttrFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_type_list_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_type_list_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef_ArgDef const *)arg1)->type_list_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_type_list_attr__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_type_list_attr" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_ArgDef_set_type_list_attr" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_type_list_attr((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_type_list_attr__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_type_list_attr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_type_list_attr((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_type_list_attr__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_type_list_attr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_ArgDef_set_type_list_attr" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_type_list_attr((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_type_list_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_type_list_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_type_list_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_type_list_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_type_list_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_ArgDef_set_type_list_attr__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_ArgDef_set_type_list_attr__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_type_list_attr.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_mutable_type_list_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_mutable_type_list_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_mutable_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_type_list_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_release_type_list_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_release_type_list_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_release_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->release_type_list_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_allocated_type_list_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_set_allocated_type_list_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_allocated_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_set_allocated_type_list_attr" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_type_list_attr(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_release_type_list_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_release_type_list_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_release_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_type_list_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_type_list_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_type_list_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_type_list_attr" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_ArgDef_unsafe_arena_set_allocated_type_list_attr" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_type_list_attr(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_clear_is_ref(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_clear_is_ref.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_clear_is_ref" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  (arg1)->clear_is_ref();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_ArgDef_kIsRefFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_ArgDef::kIsRefFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_is_ref(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_is_ref.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_is_ref" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  result = (bool)((tensorflow::OpDef_ArgDef const *)arg1)->is_ref();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_set_is_ref(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_ArgDef *arg1 = (tensorflow::OpDef_ArgDef *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ArgDef_set_is_ref.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_set_is_ref" "', argument " "1"" of type '" "tensorflow::OpDef_ArgDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_ArgDef *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_ArgDef_set_is_ref" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  (arg1)->set_is_ref(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_OpDef_ArgDef_default_instance__set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_ArgDef > *arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_ArgDef > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(value, &argp1,SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_ArgDef_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ArgDef_default_instance__set" "', argument " "1"" of type '" "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_ArgDef > *""'"); 
  }
  arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_ArgDef > *)(argp1);
  tensorflow::OpDef_ArgDef_default_instance_ = *arg1;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_OpDef_ArgDef_default_instance__get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_ArgDef > *result = 0 ;
  
  result = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_ArgDef > *)&tensorflow::OpDef_ArgDef_default_instance_;
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_ArgDef_t, 0 |  0 );
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_OpDef_AttrDef__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpDef_AttrDef *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpDef_AttrDef__SWIG_0.");
  result = (tensorflow::OpDef_AttrDef *)new tensorflow::OpDef_AttrDef();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpDef_AttrDef, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_OpDef_AttrDef(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_OpDef_AttrDef(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_OpDef_AttrDef(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_OpDef_AttrDef(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          tensorflow::OpDef_AttrDef * arg1 = (tensorflow::OpDef_AttrDef *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_new_OpDef_AttrDef__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpDef_AttrDef *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  tensorflow::OpDef_AttrDef *result;
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpDef_AttrDef__SWIG_1.");
  res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_tensorflow__OpDef_AttrDef,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OpDef_AttrDef" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpDef_AttrDef" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const &""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (tensorflow::OpDef_AttrDef *)new tensorflow::OpDef_AttrDef((tensorflow::OpDef_AttrDef const &)*arg1);
  
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpDef_AttrDef, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_OpDef_AttrDef(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  OverloadErrorHandler errorHandler;
  v8::Handle<v8::Value> self;
  
  // switch all cases by means of series of if-returns.
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpDef_AttrDef__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpDef_AttrDef__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpDef_AttrDef__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpDef_AttrDef__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  // default:
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for construction of _exports_OpDef_AttrDef");
  
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_GetArena(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Arena *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_GetArena.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_GetArena" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::google::protobuf::Arena *)((tensorflow::OpDef_AttrDef const *)arg1)->GetArena();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_GetMaybeArenaPointer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_GetMaybeArenaPointer.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_GetMaybeArenaPointer" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (void *)((tensorflow::OpDef_AttrDef const *)arg1)->GetMaybeArenaPointer();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_descriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::Descriptor *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_descriptor.");
  
  result = (::google::protobuf::Descriptor *)tensorflow::OpDef_AttrDef::descriptor();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Descriptor, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_default_instance.");
  
  result = (tensorflow::OpDef_AttrDef *) &tensorflow::OpDef_AttrDef::default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_internal_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_internal_default_instance.");
  
  result = (tensorflow::OpDef_AttrDef *)tensorflow::OpDef_AttrDef::internal_default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_UnsafeArenaSwap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  tensorflow::OpDef_AttrDef *arg2 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_UnsafeArenaSwap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_UnsafeArenaSwap" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_UnsafeArenaSwap" "', argument " "2"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg2 = (tensorflow::OpDef_AttrDef *)(argp2);
  (arg1)->UnsafeArenaSwap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_Swap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  tensorflow::OpDef_AttrDef *arg2 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_Swap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_Swap" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_Swap" "', argument " "2"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg2 = (tensorflow::OpDef_AttrDef *)(argp2);
  (arg1)->Swap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_New__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  tensorflow::OpDef_AttrDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_New" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (tensorflow::OpDef_AttrDef *)((tensorflow::OpDef_AttrDef const *)arg1)->New();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_New__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::google::protobuf::Arena *arg2 = (::google::protobuf::Arena *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  tensorflow::OpDef_AttrDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_New" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_New" "', argument " "2"" of type '" "::google::protobuf::Arena *""'"); 
  }
  arg2 = (::google::protobuf::Arena *)(argp2);
  result = (tensorflow::OpDef_AttrDef *)((tensorflow::OpDef_AttrDef const *)arg1)->New(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_New(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function New.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_CopyFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_AttrDef_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->CopyFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_MergeFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_AttrDef_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->MergeFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_CopyFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  tensorflow::OpDef_AttrDef *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpDef_AttrDef,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpDef_AttrDef const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_AttrDef_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpDef_AttrDef const &""'"); 
  }
  arg2 = (tensorflow::OpDef_AttrDef *)(argp2);
  (arg1)->CopyFrom((tensorflow::OpDef_AttrDef const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_CopyFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function CopyFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_MergeFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  tensorflow::OpDef_AttrDef *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpDef_AttrDef,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpDef_AttrDef const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_AttrDef_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpDef_AttrDef const &""'"); 
  }
  arg2 = (tensorflow::OpDef_AttrDef *)(argp2);
  (arg1)->MergeFrom((tensorflow::OpDef_AttrDef const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_MergeFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function MergeFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_Clear(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_Clear.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_Clear" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  (arg1)->Clear();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_IsInitialized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_IsInitialized.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_IsInitialized" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (bool)((tensorflow::OpDef_AttrDef const *)arg1)->IsInitialized();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_ByteSizeLong(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_ByteSizeLong.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_ByteSizeLong" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = ((tensorflow::OpDef_AttrDef const *)arg1)->ByteSizeLong();
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_MergePartialFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::google::protobuf::io::CodedInputStream *arg2 = (::google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_MergePartialFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_MergePartialFromCodedStream" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_MergePartialFromCodedStream" "', argument " "2"" of type '" "::google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->MergePartialFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_SerializeWithCachedSizes(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::google::protobuf::io::CodedOutputStream *arg2 = (::google::protobuf::io::CodedOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_SerializeWithCachedSizes.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_SerializeWithCachedSizes" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_SerializeWithCachedSizes" "', argument " "2"" of type '" "::google::protobuf::io::CodedOutputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedOutputStream *)(argp2);
  ((tensorflow::OpDef_AttrDef const *)arg1)->SerializeWithCachedSizes(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_InternalSerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  bool arg2 ;
  ::google::protobuf::uint8 *arg3 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_InternalSerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_InternalSerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_AttrDef_InternalSerializeWithCachedSizesToArray" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OpDef_AttrDef_InternalSerializeWithCachedSizesToArray" "', argument " "3"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg3 = (::google::protobuf::uint8 *)(argp3);
  result = (::google::protobuf::uint8 *)((tensorflow::OpDef_AttrDef const *)arg1)->InternalSerializeWithCachedSizesToArray(arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_SerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::google::protobuf::uint8 *arg2 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_SerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_SerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_SerializeWithCachedSizesToArray" "', argument " "2"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg2 = (::google::protobuf::uint8 *)(argp2);
  result = (::google::protobuf::uint8 *)((tensorflow::OpDef_AttrDef const *)arg1)->SerializeWithCachedSizesToArray(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_GetCachedSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_GetCachedSize.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_GetCachedSize" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (int)((tensorflow::OpDef_AttrDef const *)arg1)->GetCachedSize();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_GetMetadata(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Metadata result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_GetMetadata.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_GetMetadata" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = ((tensorflow::OpDef_AttrDef const *)arg1)->GetMetadata();
  jsresult = SWIG_NewPointerObj((new ::google::protobuf::Metadata((const ::google::protobuf::Metadata&)(result))), SWIGTYPE_p_google__protobuf__Metadata, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_clear_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_clear_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_clear_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  (arg1)->clear_name();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_AttrDef_kNameFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_AttrDef::kNameFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef_AttrDef const *)arg1)->name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_name__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_name" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_AttrDef_set_name" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_name((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_name__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_name((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_name__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_AttrDef_set_name" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_name((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_set_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_set_name__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_set_name__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_set_name__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_set_name__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_set_name__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_set_name__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_name.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_mutable_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_mutable_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_mutable_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_release_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_release_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_release_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *)(arg1)->release_name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_allocated_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_set_allocated_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_allocated_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_allocated_name" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_name(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_release_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_release_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_release_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_name" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_name" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_name(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_clear_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_clear_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_clear_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  (arg1)->clear_type();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_AttrDef_kTypeFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_AttrDef::kTypeFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef_AttrDef const *)arg1)->type();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_type__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_type" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_AttrDef_set_type" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_type((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_type__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_type" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_type((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_type__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_type" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_AttrDef_set_type" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_type((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_set_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_set_type__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_set_type__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_set_type__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_set_type__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_set_type__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_set_type__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_type.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_mutable_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_mutable_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_mutable_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_type();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_release_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_release_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_release_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *)(arg1)->release_type();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_allocated_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_set_allocated_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_allocated_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_allocated_type" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_type(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_release_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_release_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_release_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_type();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_type(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_type.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_type" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_type" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_type(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_has_default_value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_has_default_value.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_has_default_value" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (bool)((tensorflow::OpDef_AttrDef const *)arg1)->has_default_value();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_clear_default_value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_clear_default_value.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_clear_default_value" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  (arg1)->clear_default_value();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_AttrDef_kDefaultValueFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_AttrDef::kDefaultValueFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_default_value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::AttrValue *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_default_value.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_default_value" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::tensorflow::AttrValue *) &((tensorflow::OpDef_AttrDef const *)arg1)->default_value();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_mutable_default_value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::AttrValue *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_mutable_default_value.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_mutable_default_value" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::tensorflow::AttrValue *)(arg1)->mutable_default_value();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_release_default_value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::AttrValue *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_release_default_value.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_release_default_value" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::tensorflow::AttrValue *)(arg1)->release_default_value();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_allocated_default_value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::tensorflow::AttrValue *arg2 = (::tensorflow::AttrValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_set_allocated_default_value.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_allocated_default_value" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_allocated_default_value" "', argument " "2"" of type '" "::tensorflow::AttrValue *""'"); 
  }
  arg2 = (::tensorflow::AttrValue *)(argp2);
  (arg1)->set_allocated_default_value(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_release_default_value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::AttrValue *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_release_default_value.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_release_default_value" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::tensorflow::AttrValue *)(arg1)->unsafe_arena_release_default_value();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_default_value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::tensorflow::AttrValue *arg2 = (::tensorflow::AttrValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_default_value.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_default_value" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_default_value" "', argument " "2"" of type '" "::tensorflow::AttrValue *""'"); 
  }
  arg2 = (::tensorflow::AttrValue *)(argp2);
  (arg1)->unsafe_arena_set_allocated_default_value(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_clear_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_clear_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_clear_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  (arg1)->clear_description();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_AttrDef_kDescriptionFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_AttrDef::kDescriptionFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef_AttrDef const *)arg1)->description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_description__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_description" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_AttrDef_set_description" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_description((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_description__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_description" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_description((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_description__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_description" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_AttrDef_set_description" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_description((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_set_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_set_description__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_set_description__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_set_description__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_set_description__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_AttrDef_set_description__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_AttrDef_set_description__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_description.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_mutable_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_mutable_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_mutable_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_release_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_release_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_release_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *)(arg1)->release_description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_allocated_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_set_allocated_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_allocated_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_allocated_description" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_description(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_release_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_release_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_release_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_description" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_description" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_description(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_clear_has_minimum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_clear_has_minimum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_clear_has_minimum" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  (arg1)->clear_has_minimum();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_AttrDef_kHasMinimumFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_AttrDef::kHasMinimumFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_has_minimum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_has_minimum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_has_minimum" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (bool)((tensorflow::OpDef_AttrDef const *)arg1)->has_minimum();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_has_minimum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_set_has_minimum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_has_minimum" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_AttrDef_set_has_minimum" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  (arg1)->set_has_minimum(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_clear_minimum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_clear_minimum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_clear_minimum" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  (arg1)->clear_minimum();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_AttrDef_kMinimumFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_AttrDef::kMinimumFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_minimum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::int64 result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_minimum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_minimum" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = ((tensorflow::OpDef_AttrDef const *)arg1)->minimum();
  jsresult = SWIG_NewPointerObj((new ::google::protobuf::int64((const ::google::protobuf::int64&)(result))), SWIGTYPE_p_int64_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_minimum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::google::protobuf::int64 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_set_minimum.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_minimum" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_int64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_minimum" "', argument " "2"" of type '" "::google::protobuf::int64""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_AttrDef_set_minimum" "', argument " "2"" of type '" "::google::protobuf::int64""'");
    } else {
      arg2 = *((::google::protobuf::int64 *)(argp2));
    }
  }
  (arg1)->set_minimum(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_has_allowed_values(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_has_allowed_values.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_has_allowed_values" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (bool)((tensorflow::OpDef_AttrDef const *)arg1)->has_allowed_values();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_clear_allowed_values(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_clear_allowed_values.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_clear_allowed_values" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  (arg1)->clear_allowed_values();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_AttrDef_kAllowedValuesFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef_AttrDef::kAllowedValuesFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_allowed_values(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::AttrValue *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_allowed_values.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_allowed_values" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::tensorflow::AttrValue *) &((tensorflow::OpDef_AttrDef const *)arg1)->allowed_values();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_mutable_allowed_values(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::AttrValue *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_mutable_allowed_values.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_mutable_allowed_values" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::tensorflow::AttrValue *)(arg1)->mutable_allowed_values();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_release_allowed_values(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::AttrValue *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_release_allowed_values.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_release_allowed_values" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::tensorflow::AttrValue *)(arg1)->release_allowed_values();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_set_allocated_allowed_values(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::tensorflow::AttrValue *arg2 = (::tensorflow::AttrValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_set_allocated_allowed_values.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_set_allocated_allowed_values" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_set_allocated_allowed_values" "', argument " "2"" of type '" "::tensorflow::AttrValue *""'"); 
  }
  arg2 = (::tensorflow::AttrValue *)(argp2);
  (arg1)->set_allocated_allowed_values(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_release_allowed_values(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::AttrValue *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_release_allowed_values.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_release_allowed_values" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  result = (::tensorflow::AttrValue *)(arg1)->unsafe_arena_release_allowed_values();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_allowed_values(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef_AttrDef *arg1 = (tensorflow::OpDef_AttrDef *) 0 ;
  ::tensorflow::AttrValue *arg2 = (::tensorflow::AttrValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_allowed_values.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_allowed_values" "', argument " "1"" of type '" "tensorflow::OpDef_AttrDef *""'"); 
  }
  arg1 = (tensorflow::OpDef_AttrDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__AttrValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_AttrDef_unsafe_arena_set_allocated_allowed_values" "', argument " "2"" of type '" "::tensorflow::AttrValue *""'"); 
  }
  arg2 = (::tensorflow::AttrValue *)(argp2);
  (arg1)->unsafe_arena_set_allocated_allowed_values(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_OpDef_AttrDef_default_instance__set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_AttrDef > *arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_AttrDef > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(value, &argp1,SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_AttrDef_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_AttrDef_default_instance__set" "', argument " "1"" of type '" "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_AttrDef > *""'"); 
  }
  arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_AttrDef > *)(argp1);
  tensorflow::OpDef_AttrDef_default_instance_ = *arg1;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_OpDef_AttrDef_default_instance__get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_AttrDef > *result = 0 ;
  
  result = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_AttrDef > *)&tensorflow::OpDef_AttrDef_default_instance_;
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_AttrDef_t, 0 |  0 );
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_OpDef__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpDef *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpDef__SWIG_0.");
  result = (tensorflow::OpDef *)new tensorflow::OpDef();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpDef, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_OpDef(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_OpDef(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_OpDef(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_OpDef(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          tensorflow::OpDef * arg1 = (tensorflow::OpDef *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_new_OpDef__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpDef *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  tensorflow::OpDef *result;
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpDef__SWIG_1.");
  res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_tensorflow__OpDef,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OpDef" "', argument " "1"" of type '" "tensorflow::OpDef const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpDef" "', argument " "1"" of type '" "tensorflow::OpDef const &""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (tensorflow::OpDef *)new tensorflow::OpDef((tensorflow::OpDef const &)*arg1);
  
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpDef, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_OpDef(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  OverloadErrorHandler errorHandler;
  v8::Handle<v8::Value> self;
  
  // switch all cases by means of series of if-returns.
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpDef__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpDef__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpDef__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpDef__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  // default:
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for construction of _exports_OpDef");
  
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_GetArena(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Arena *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_GetArena.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_GetArena" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::google::protobuf::Arena *)((tensorflow::OpDef const *)arg1)->GetArena();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_GetMaybeArenaPointer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_GetMaybeArenaPointer.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_GetMaybeArenaPointer" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (void *)((tensorflow::OpDef const *)arg1)->GetMaybeArenaPointer();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_descriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::Descriptor *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_descriptor.");
  
  result = (::google::protobuf::Descriptor *)tensorflow::OpDef::descriptor();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Descriptor, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_default_instance.");
  
  result = (tensorflow::OpDef *) &tensorflow::OpDef::default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_internal_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_internal_default_instance.");
  
  result = (tensorflow::OpDef *)tensorflow::OpDef::internal_default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_UnsafeArenaSwap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  tensorflow::OpDef *arg2 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_UnsafeArenaSwap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_UnsafeArenaSwap" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_UnsafeArenaSwap" "', argument " "2"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg2 = (tensorflow::OpDef *)(argp2);
  (arg1)->UnsafeArenaSwap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_Swap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  tensorflow::OpDef *arg2 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_Swap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_Swap" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_Swap" "', argument " "2"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg2 = (tensorflow::OpDef *)(argp2);
  (arg1)->Swap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_New__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  tensorflow::OpDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_New" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (tensorflow::OpDef *)((tensorflow::OpDef const *)arg1)->New();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_New__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::google::protobuf::Arena *arg2 = (::google::protobuf::Arena *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  tensorflow::OpDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_New" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_New" "', argument " "2"" of type '" "::google::protobuf::Arena *""'"); 
  }
  arg2 = (::google::protobuf::Arena *)(argp2);
  result = (tensorflow::OpDef *)((tensorflow::OpDef const *)arg1)->New(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_New(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function New.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_CopyFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->CopyFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_MergeFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->MergeFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_CopyFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  tensorflow::OpDef *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpDef,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpDef const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpDef const &""'"); 
  }
  arg2 = (tensorflow::OpDef *)(argp2);
  (arg1)->CopyFrom((tensorflow::OpDef const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_CopyFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function CopyFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_MergeFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  tensorflow::OpDef *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpDef,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpDef const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpDef const &""'"); 
  }
  arg2 = (tensorflow::OpDef *)(argp2);
  (arg1)->MergeFrom((tensorflow::OpDef const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_MergeFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function MergeFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_Clear(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_Clear.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_Clear" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->Clear();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_IsInitialized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_IsInitialized.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_IsInitialized" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (bool)((tensorflow::OpDef const *)arg1)->IsInitialized();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_ByteSizeLong(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_ByteSizeLong.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_ByteSizeLong" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = ((tensorflow::OpDef const *)arg1)->ByteSizeLong();
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_MergePartialFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::google::protobuf::io::CodedInputStream *arg2 = (::google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_MergePartialFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_MergePartialFromCodedStream" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_MergePartialFromCodedStream" "', argument " "2"" of type '" "::google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->MergePartialFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_SerializeWithCachedSizes(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::google::protobuf::io::CodedOutputStream *arg2 = (::google::protobuf::io::CodedOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_SerializeWithCachedSizes.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_SerializeWithCachedSizes" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_SerializeWithCachedSizes" "', argument " "2"" of type '" "::google::protobuf::io::CodedOutputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedOutputStream *)(argp2);
  ((tensorflow::OpDef const *)arg1)->SerializeWithCachedSizes(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_InternalSerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  bool arg2 ;
  ::google::protobuf::uint8 *arg3 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_InternalSerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_InternalSerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_InternalSerializeWithCachedSizesToArray" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OpDef_InternalSerializeWithCachedSizesToArray" "', argument " "3"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg3 = (::google::protobuf::uint8 *)(argp3);
  result = (::google::protobuf::uint8 *)((tensorflow::OpDef const *)arg1)->InternalSerializeWithCachedSizesToArray(arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_SerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::google::protobuf::uint8 *arg2 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_SerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_SerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_SerializeWithCachedSizesToArray" "', argument " "2"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg2 = (::google::protobuf::uint8 *)(argp2);
  result = (::google::protobuf::uint8 *)((tensorflow::OpDef const *)arg1)->SerializeWithCachedSizesToArray(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_GetCachedSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_GetCachedSize.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_GetCachedSize" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (int)((tensorflow::OpDef const *)arg1)->GetCachedSize();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_GetMetadata(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Metadata result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_GetMetadata.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_GetMetadata" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = ((tensorflow::OpDef const *)arg1)->GetMetadata();
  jsresult = SWIG_NewPointerObj((new ::google::protobuf::Metadata((const ::google::protobuf::Metadata&)(result))), SWIGTYPE_p_google__protobuf__Metadata, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_name" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_name();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kNameFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kNameFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_name" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef const *)arg1)->name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_name__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_name" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_name" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_set_name" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_name((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_name__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_name" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_name((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_name__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_name" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_set_name" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_name((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_set_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_set_name__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_set_name__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_set_name__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_set_name__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_set_name__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_set_name__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_name.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_mutable_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_name" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_release_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_release_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_release_name" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *)(arg1)->release_name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_allocated_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_set_allocated_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_allocated_name" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_allocated_name" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_name(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_unsafe_arena_release_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_unsafe_arena_release_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_unsafe_arena_release_name" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_name();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_unsafe_arena_set_allocated_name(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_unsafe_arena_set_allocated_name.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_unsafe_arena_set_allocated_name" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_unsafe_arena_set_allocated_name" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_name(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_input_arg_size(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_input_arg_size.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_input_arg_size" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (int)((tensorflow::OpDef const *)arg1)->input_arg_size();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_input_arg(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_input_arg.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_input_arg" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_input_arg();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kInputArgFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kInputArgFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_input_arg__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  ::tensorflow::OpDef_ArgDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_input_arg" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_input_arg" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (::tensorflow::OpDef_ArgDef *) &((tensorflow::OpDef const *)arg1)->input_arg(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_input_arg__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  ::tensorflow::OpDef_ArgDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_input_arg" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_mutable_input_arg" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (::tensorflow::OpDef_ArgDef *)(arg1)->mutable_input_arg(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_add_input_arg(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::OpDef_ArgDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_add_input_arg.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_add_input_arg" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::tensorflow::OpDef_ArgDef *)(arg1)->add_input_arg();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_input_arg__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_ArgDef > *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_input_arg" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_ArgDef > *)(arg1)->mutable_input_arg();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_mutable_input_arg(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_mutable_input_arg__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_mutable_input_arg__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_mutable_input_arg__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_mutable_input_arg__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function mutable_input_arg.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_input_arg__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_ArgDef > *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_input_arg" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_ArgDef > *) &((tensorflow::OpDef const *)arg1)->input_arg();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_input_arg(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_input_arg__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_input_arg__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_input_arg__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_input_arg__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function input_arg.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_output_arg_size(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_output_arg_size.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_output_arg_size" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (int)((tensorflow::OpDef const *)arg1)->output_arg_size();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_output_arg(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_output_arg.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_output_arg" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_output_arg();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kOutputArgFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kOutputArgFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_output_arg__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  ::tensorflow::OpDef_ArgDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_output_arg" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_output_arg" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (::tensorflow::OpDef_ArgDef *) &((tensorflow::OpDef const *)arg1)->output_arg(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_output_arg__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  ::tensorflow::OpDef_ArgDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_output_arg" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_mutable_output_arg" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (::tensorflow::OpDef_ArgDef *)(arg1)->mutable_output_arg(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_add_output_arg(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::OpDef_ArgDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_add_output_arg.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_add_output_arg" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::tensorflow::OpDef_ArgDef *)(arg1)->add_output_arg();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_ArgDef, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_output_arg__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_ArgDef > *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_output_arg" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_ArgDef > *)(arg1)->mutable_output_arg();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_mutable_output_arg(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_mutable_output_arg__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_mutable_output_arg__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_mutable_output_arg__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_mutable_output_arg__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function mutable_output_arg.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_output_arg__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_ArgDef > *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_output_arg" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_ArgDef > *) &((tensorflow::OpDef const *)arg1)->output_arg();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_output_arg(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_output_arg__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_output_arg__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_output_arg__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_output_arg__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function output_arg.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_attr_size(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_attr_size.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_attr_size" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (int)((tensorflow::OpDef const *)arg1)->attr_size();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_attr" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_attr();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kAttrFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kAttrFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_attr__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  ::tensorflow::OpDef_AttrDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_attr" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_attr" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (::tensorflow::OpDef_AttrDef *) &((tensorflow::OpDef const *)arg1)->attr(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_attr__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  ::tensorflow::OpDef_AttrDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_attr" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_mutable_attr" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (::tensorflow::OpDef_AttrDef *)(arg1)->mutable_attr(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_add_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::OpDef_AttrDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_add_attr.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_add_attr" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::tensorflow::OpDef_AttrDef *)(arg1)->add_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef_AttrDef, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_attr__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_AttrDef > *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_attr" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_AttrDef > *)(arg1)->mutable_attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_AttrDef_t, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_mutable_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_mutable_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_mutable_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_mutable_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_mutable_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function mutable_attr.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_attr__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_AttrDef > *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_attr" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_AttrDef > *) &((tensorflow::OpDef const *)arg1)->attr();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_AttrDef_t, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_attr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_attr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_attr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function attr.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_has_deprecation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_has_deprecation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_has_deprecation" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (bool)((tensorflow::OpDef const *)arg1)->has_deprecation();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_deprecation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_deprecation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_deprecation" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_deprecation();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kDeprecationFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kDeprecationFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_deprecation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::OpDeprecation *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_deprecation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_deprecation" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::tensorflow::OpDeprecation *) &((tensorflow::OpDef const *)arg1)->deprecation();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_deprecation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::OpDeprecation *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_mutable_deprecation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_deprecation" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::tensorflow::OpDeprecation *)(arg1)->mutable_deprecation();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_release_deprecation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::OpDeprecation *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_release_deprecation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_release_deprecation" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::tensorflow::OpDeprecation *)(arg1)->release_deprecation();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_allocated_deprecation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::tensorflow::OpDeprecation *arg2 = (::tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_set_allocated_deprecation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_allocated_deprecation" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_allocated_deprecation" "', argument " "2"" of type '" "::tensorflow::OpDeprecation *""'"); 
  }
  arg2 = (::tensorflow::OpDeprecation *)(argp2);
  (arg1)->set_allocated_deprecation(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_unsafe_arena_release_deprecation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::OpDeprecation *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_unsafe_arena_release_deprecation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_unsafe_arena_release_deprecation" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::tensorflow::OpDeprecation *)(arg1)->unsafe_arena_release_deprecation();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_unsafe_arena_set_allocated_deprecation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::tensorflow::OpDeprecation *arg2 = (::tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_unsafe_arena_set_allocated_deprecation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_unsafe_arena_set_allocated_deprecation" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_unsafe_arena_set_allocated_deprecation" "', argument " "2"" of type '" "::tensorflow::OpDeprecation *""'"); 
  }
  arg2 = (::tensorflow::OpDeprecation *)(argp2);
  (arg1)->unsafe_arena_set_allocated_deprecation(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_summary(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_summary.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_summary" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_summary();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kSummaryFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kSummaryFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_summary(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_summary.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_summary" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef const *)arg1)->summary();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_summary__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_summary" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_summary" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_set_summary" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_summary((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_summary__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_summary" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_summary" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_summary((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_summary__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_summary" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_summary" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_set_summary" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_summary((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_set_summary(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_set_summary__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_set_summary__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_set_summary__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_set_summary__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_set_summary__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_set_summary__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_summary.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_summary(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_mutable_summary.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_summary" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_summary();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_release_summary(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_release_summary.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_release_summary" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *)(arg1)->release_summary();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_allocated_summary(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_set_allocated_summary.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_allocated_summary" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_allocated_summary" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_summary(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_unsafe_arena_release_summary(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_unsafe_arena_release_summary.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_unsafe_arena_release_summary" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_summary();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_unsafe_arena_set_allocated_summary(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_unsafe_arena_set_allocated_summary.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_unsafe_arena_set_allocated_summary" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_unsafe_arena_set_allocated_summary" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_summary(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_description" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_description();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kDescriptionFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kDescriptionFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_description" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *) &((tensorflow::OpDef const *)arg1)->description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_description__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_description" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_description" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDef_set_description" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_description((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_description__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_description" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_description" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_description((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_description__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_description" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_description" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDef_set_description" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_description((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef__wrap_OpDef_set_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_set_description__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_set_description__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_set_description__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_set_description__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDef_set_description__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDef_set_description__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_description.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_mutable_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_mutable_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_mutable_description" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *)(arg1)->mutable_description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_release_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_release_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_release_description" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *)(arg1)->release_description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_allocated_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_set_allocated_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_allocated_description" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_set_allocated_description" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_description(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_unsafe_arena_release_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_unsafe_arena_release_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_unsafe_arena_release_description" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_description();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_unsafe_arena_set_allocated_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_unsafe_arena_set_allocated_description.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_unsafe_arena_set_allocated_description" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDef_unsafe_arena_set_allocated_description" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_description(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_is_commutative(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_is_commutative.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_is_commutative" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_is_commutative();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kIsCommutativeFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kIsCommutativeFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_is_commutative(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_is_commutative.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_is_commutative" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (bool)((tensorflow::OpDef const *)arg1)->is_commutative();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_is_commutative(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_set_is_commutative.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_is_commutative" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_set_is_commutative" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  (arg1)->set_is_commutative(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_is_aggregate(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_is_aggregate.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_is_aggregate" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_is_aggregate();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kIsAggregateFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kIsAggregateFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_is_aggregate(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_is_aggregate.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_is_aggregate" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (bool)((tensorflow::OpDef const *)arg1)->is_aggregate();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_is_aggregate(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_set_is_aggregate.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_is_aggregate" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_set_is_aggregate" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  (arg1)->set_is_aggregate(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_is_stateful(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_is_stateful.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_is_stateful" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_is_stateful();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kIsStatefulFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kIsStatefulFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_is_stateful(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_is_stateful.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_is_stateful" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (bool)((tensorflow::OpDef const *)arg1)->is_stateful();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_is_stateful(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_set_is_stateful.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_is_stateful" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_set_is_stateful" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  (arg1)->set_is_stateful(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_clear_allows_uninitialized_input(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_clear_allows_uninitialized_input.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_clear_allows_uninitialized_input" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  (arg1)->clear_allows_uninitialized_input();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDef_kAllowsUninitializedInputFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDef::kAllowsUninitializedInputFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDef_allows_uninitialized_input(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_allows_uninitialized_input.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_allows_uninitialized_input" "', argument " "1"" of type '" "tensorflow::OpDef const *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  result = (bool)((tensorflow::OpDef const *)arg1)->allows_uninitialized_input();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDef_set_allows_uninitialized_input(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDef *arg1 = (tensorflow::OpDef *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDef_set_allows_uninitialized_input.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_set_allows_uninitialized_input" "', argument " "1"" of type '" "tensorflow::OpDef *""'"); 
  }
  arg1 = (tensorflow::OpDef *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDef_set_allows_uninitialized_input" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  (arg1)->set_allows_uninitialized_input(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_OpDef_default_instance__set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef > *arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(value, &argp1,SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDef_default_instance__set" "', argument " "1"" of type '" "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef > *""'"); 
  }
  arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef > *)(argp1);
  tensorflow::OpDef_default_instance_ = *arg1;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_OpDef_default_instance__get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef > *result = 0 ;
  
  result = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef > *)&tensorflow::OpDef_default_instance_;
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_t, 0 |  0 );
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_OpDeprecation__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpDeprecation *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpDeprecation__SWIG_0.");
  result = (tensorflow::OpDeprecation *)new tensorflow::OpDeprecation();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpDeprecation, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_OpDeprecation(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_OpDeprecation(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_OpDeprecation(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_OpDeprecation(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          tensorflow::OpDeprecation * arg1 = (tensorflow::OpDeprecation *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_new_OpDeprecation__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpDeprecation *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  tensorflow::OpDeprecation *result;
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpDeprecation__SWIG_1.");
  res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_tensorflow__OpDeprecation,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OpDeprecation" "', argument " "1"" of type '" "tensorflow::OpDeprecation const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpDeprecation" "', argument " "1"" of type '" "tensorflow::OpDeprecation const &""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (tensorflow::OpDeprecation *)new tensorflow::OpDeprecation((tensorflow::OpDeprecation const &)*arg1);
  
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpDeprecation, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_OpDeprecation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  OverloadErrorHandler errorHandler;
  v8::Handle<v8::Value> self;
  
  // switch all cases by means of series of if-returns.
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpDeprecation__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpDeprecation__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpDeprecation__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpDeprecation__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  // default:
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for construction of _exports_OpDeprecation");
  
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_GetArena(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Arena *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_GetArena.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_GetArena" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (::google::protobuf::Arena *)((tensorflow::OpDeprecation const *)arg1)->GetArena();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_GetMaybeArenaPointer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_GetMaybeArenaPointer.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_GetMaybeArenaPointer" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (void *)((tensorflow::OpDeprecation const *)arg1)->GetMaybeArenaPointer();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_descriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::Descriptor *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_descriptor.");
  
  result = (::google::protobuf::Descriptor *)tensorflow::OpDeprecation::descriptor();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Descriptor, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_default_instance.");
  
  result = (tensorflow::OpDeprecation *) &tensorflow::OpDeprecation::default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_internal_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_internal_default_instance.");
  
  result = (tensorflow::OpDeprecation *)tensorflow::OpDeprecation::internal_default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_UnsafeArenaSwap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  tensorflow::OpDeprecation *arg2 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_UnsafeArenaSwap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_UnsafeArenaSwap" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_UnsafeArenaSwap" "', argument " "2"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg2 = (tensorflow::OpDeprecation *)(argp2);
  (arg1)->UnsafeArenaSwap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_Swap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  tensorflow::OpDeprecation *arg2 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_Swap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_Swap" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_Swap" "', argument " "2"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg2 = (tensorflow::OpDeprecation *)(argp2);
  (arg1)->Swap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_New__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  tensorflow::OpDeprecation *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_New" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (tensorflow::OpDeprecation *)((tensorflow::OpDeprecation const *)arg1)->New();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_New__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::google::protobuf::Arena *arg2 = (::google::protobuf::Arena *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  tensorflow::OpDeprecation *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_New" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_New" "', argument " "2"" of type '" "::google::protobuf::Arena *""'"); 
  }
  arg2 = (::google::protobuf::Arena *)(argp2);
  result = (tensorflow::OpDeprecation *)((tensorflow::OpDeprecation const *)arg1)->New(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation__wrap_OpDeprecation_New(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDeprecation_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDeprecation_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDeprecation_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDeprecation_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function New.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_CopyFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDeprecation_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->CopyFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_MergeFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDeprecation_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->MergeFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_CopyFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  tensorflow::OpDeprecation *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpDeprecation,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpDeprecation const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDeprecation_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpDeprecation const &""'"); 
  }
  arg2 = (tensorflow::OpDeprecation *)(argp2);
  (arg1)->CopyFrom((tensorflow::OpDeprecation const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation__wrap_OpDeprecation_CopyFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDeprecation_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDeprecation_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDeprecation_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDeprecation_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function CopyFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_MergeFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  tensorflow::OpDeprecation *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpDeprecation,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpDeprecation const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDeprecation_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpDeprecation const &""'"); 
  }
  arg2 = (tensorflow::OpDeprecation *)(argp2);
  (arg1)->MergeFrom((tensorflow::OpDeprecation const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation__wrap_OpDeprecation_MergeFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDeprecation_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDeprecation_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDeprecation_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDeprecation_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function MergeFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_Clear(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_Clear.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_Clear" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  (arg1)->Clear();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_IsInitialized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_IsInitialized.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_IsInitialized" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (bool)((tensorflow::OpDeprecation const *)arg1)->IsInitialized();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_ByteSizeLong(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_ByteSizeLong.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_ByteSizeLong" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = ((tensorflow::OpDeprecation const *)arg1)->ByteSizeLong();
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_MergePartialFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::google::protobuf::io::CodedInputStream *arg2 = (::google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_MergePartialFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_MergePartialFromCodedStream" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_MergePartialFromCodedStream" "', argument " "2"" of type '" "::google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->MergePartialFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_SerializeWithCachedSizes(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::google::protobuf::io::CodedOutputStream *arg2 = (::google::protobuf::io::CodedOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_SerializeWithCachedSizes.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_SerializeWithCachedSizes" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_SerializeWithCachedSizes" "', argument " "2"" of type '" "::google::protobuf::io::CodedOutputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedOutputStream *)(argp2);
  ((tensorflow::OpDeprecation const *)arg1)->SerializeWithCachedSizes(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_InternalSerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  bool arg2 ;
  ::google::protobuf::uint8 *arg3 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_InternalSerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_InternalSerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpDeprecation_InternalSerializeWithCachedSizesToArray" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OpDeprecation_InternalSerializeWithCachedSizesToArray" "', argument " "3"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg3 = (::google::protobuf::uint8 *)(argp3);
  result = (::google::protobuf::uint8 *)((tensorflow::OpDeprecation const *)arg1)->InternalSerializeWithCachedSizesToArray(arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_SerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::google::protobuf::uint8 *arg2 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_SerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_SerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_SerializeWithCachedSizesToArray" "', argument " "2"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg2 = (::google::protobuf::uint8 *)(argp2);
  result = (::google::protobuf::uint8 *)((tensorflow::OpDeprecation const *)arg1)->SerializeWithCachedSizesToArray(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_GetCachedSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_GetCachedSize.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_GetCachedSize" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (int)((tensorflow::OpDeprecation const *)arg1)->GetCachedSize();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_GetMetadata(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Metadata result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_GetMetadata.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_GetMetadata" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = ((tensorflow::OpDeprecation const *)arg1)->GetMetadata();
  jsresult = SWIG_NewPointerObj((new ::google::protobuf::Metadata((const ::google::protobuf::Metadata&)(result))), SWIGTYPE_p_google__protobuf__Metadata, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_clear_version(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_clear_version.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_clear_version" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  (arg1)->clear_version();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDeprecation_kVersionFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDeprecation::kVersionFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDeprecation_version(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::int32 result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_version.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_version" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = ((tensorflow::OpDeprecation const *)arg1)->version();
  jsresult = SWIG_NewPointerObj((new ::google::protobuf::int32((const ::google::protobuf::int32&)(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_set_version(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::google::protobuf::int32 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_set_version.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_set_version" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_set_version" "', argument " "2"" of type '" "::google::protobuf::int32""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDeprecation_set_version" "', argument " "2"" of type '" "::google::protobuf::int32""'");
    } else {
      arg2 = *((::google::protobuf::int32 *)(argp2));
    }
  }
  (arg1)->set_version(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_clear_explanation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_clear_explanation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_clear_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  (arg1)->clear_explanation();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpDeprecation_kExplanationFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpDeprecation::kExplanationFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpDeprecation_explanation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_explanation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation const *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (::std::string *) &((tensorflow::OpDeprecation const *)arg1)->explanation();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_set_explanation__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_set_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_set_explanation" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpDeprecation_set_explanation" "', argument " "2"" of type '" "::std::string const &""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_explanation((::std::string const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_set_explanation__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_set_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_set_explanation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  (arg1)->set_explanation((char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_set_explanation__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_set_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(args[0], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_set_explanation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OpDeprecation_set_explanation" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set_explanation((char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation__wrap_OpDeprecation_set_explanation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDeprecation_set_explanation__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDeprecation_set_explanation__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDeprecation_set_explanation__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDeprecation_set_explanation__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpDeprecation_set_explanation__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpDeprecation_set_explanation__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function set_explanation.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_mutable_explanation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_mutable_explanation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_mutable_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (::std::string *)(arg1)->mutable_explanation();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_release_explanation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_release_explanation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_release_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (::std::string *)(arg1)->release_explanation();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_set_allocated_explanation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_set_allocated_explanation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_set_allocated_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_set_allocated_explanation" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->set_allocated_explanation(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_unsafe_arena_release_explanation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::std::string *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_unsafe_arena_release_explanation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_unsafe_arena_release_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  result = (::std::string *)(arg1)->unsafe_arena_release_explanation();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpDeprecation_unsafe_arena_set_allocated_explanation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpDeprecation *arg1 = (tensorflow::OpDeprecation *) 0 ;
  ::std::string *arg2 = (::std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpDeprecation_unsafe_arena_set_allocated_explanation.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpDeprecation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_unsafe_arena_set_allocated_explanation" "', argument " "1"" of type '" "tensorflow::OpDeprecation *""'"); 
  }
  arg1 = (tensorflow::OpDeprecation *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpDeprecation_unsafe_arena_set_allocated_explanation" "', argument " "2"" of type '" "::std::string *""'"); 
  }
  arg2 = (::std::string *)(argp2);
  (arg1)->unsafe_arena_set_allocated_explanation(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_OpDeprecation_default_instance__set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDeprecation > *arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDeprecation > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(value, &argp1,SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDeprecation_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpDeprecation_default_instance__set" "', argument " "1"" of type '" "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDeprecation > *""'"); 
  }
  arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDeprecation > *)(argp1);
  tensorflow::OpDeprecation_default_instance_ = *arg1;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_OpDeprecation_default_instance__get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDeprecation > *result = 0 ;
  
  result = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDeprecation > *)&tensorflow::OpDeprecation_default_instance_;
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDeprecation_t, 0 |  0 );
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_OpList__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpList *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpList__SWIG_0.");
  result = (tensorflow::OpList *)new tensorflow::OpList();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpList, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_OpList(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_OpList(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_OpList(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_OpList(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          tensorflow::OpList * arg1 = (tensorflow::OpList *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


static SwigV8ReturnValue _wrap_new_OpList__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::OpList *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  tensorflow::OpList *result;
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_OpList__SWIG_1.");
  res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_tensorflow__OpList,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OpList" "', argument " "1"" of type '" "tensorflow::OpList const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpList" "', argument " "1"" of type '" "tensorflow::OpList const &""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (tensorflow::OpList *)new tensorflow::OpList((tensorflow::OpList const &)*arg1);
  
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__OpList, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_OpList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  OverloadErrorHandler errorHandler;
  v8::Handle<v8::Value> self;
  
  // switch all cases by means of series of if-returns.
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpList__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpList__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_OpList__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_OpList__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  // default:
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for construction of _exports_OpList");
  
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_GetArena(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Arena *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_GetArena.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_GetArena" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (::google::protobuf::Arena *)((tensorflow::OpList const *)arg1)->GetArena();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_GetMaybeArenaPointer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_GetMaybeArenaPointer.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_GetMaybeArenaPointer" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (void *)((tensorflow::OpList const *)arg1)->GetMaybeArenaPointer();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_descriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::Descriptor *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_descriptor.");
  
  result = (::google::protobuf::Descriptor *)tensorflow::OpList::descriptor();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__Descriptor, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_default_instance.");
  
  result = (tensorflow::OpList *) &tensorflow::OpList::default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_internal_default_instance(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_internal_default_instance.");
  
  result = (tensorflow::OpList *)tensorflow::OpList::internal_default_instance();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_UnsafeArenaSwap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  tensorflow::OpList *arg2 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_UnsafeArenaSwap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_UnsafeArenaSwap" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_UnsafeArenaSwap" "', argument " "2"" of type '" "tensorflow::OpList *""'"); 
  }
  arg2 = (tensorflow::OpList *)(argp2);
  (arg1)->UnsafeArenaSwap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_Swap(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  tensorflow::OpList *arg2 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_Swap.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_Swap" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_Swap" "', argument " "2"" of type '" "tensorflow::OpList *""'"); 
  }
  arg2 = (tensorflow::OpList *)(argp2);
  (arg1)->Swap(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_New__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  tensorflow::OpList *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_New" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (tensorflow::OpList *)((tensorflow::OpList const *)arg1)->New();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_New__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  ::google::protobuf::Arena *arg2 = (::google::protobuf::Arena *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  tensorflow::OpList *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_New" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__Arena, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_New" "', argument " "2"" of type '" "::google::protobuf::Arena *""'"); 
  }
  arg2 = (::google::protobuf::Arena *)(argp2);
  result = (tensorflow::OpList *)((tensorflow::OpList const *)arg1)->New(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList__wrap_OpList_New(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_New__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_New__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function New.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_CopyFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpList_CopyFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->CopyFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_MergeFrom__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  ::google::protobuf::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_google__protobuf__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpList_MergeFrom" "', argument " "2"" of type '" "::google::protobuf::Message const &""'"); 
  }
  arg2 = (::google::protobuf::Message *)(argp2);
  (arg1)->MergeFrom((::google::protobuf::Message const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_CopyFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  tensorflow::OpList *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_CopyFrom" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpList,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpList const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpList_CopyFrom" "', argument " "2"" of type '" "tensorflow::OpList const &""'"); 
  }
  arg2 = (tensorflow::OpList *)(argp2);
  (arg1)->CopyFrom((tensorflow::OpList const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList__wrap_OpList_CopyFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_CopyFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_CopyFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function CopyFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_MergeFrom__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  tensorflow::OpList *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_MergeFrom" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__OpList,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpList const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpList_MergeFrom" "', argument " "2"" of type '" "tensorflow::OpList const &""'"); 
  }
  arg2 = (tensorflow::OpList *)(argp2);
  (arg1)->MergeFrom((tensorflow::OpList const &)*arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList__wrap_OpList_MergeFrom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_MergeFrom__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_MergeFrom__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function MergeFrom.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_Clear(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_Clear.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_Clear" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  (arg1)->Clear();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_IsInitialized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_IsInitialized.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_IsInitialized" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (bool)((tensorflow::OpList const *)arg1)->IsInitialized();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_ByteSizeLong(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_ByteSizeLong.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_ByteSizeLong" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = ((tensorflow::OpList const *)arg1)->ByteSizeLong();
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_MergePartialFromCodedStream(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  ::google::protobuf::io::CodedInputStream *arg2 = (::google::protobuf::io::CodedInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_MergePartialFromCodedStream.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_MergePartialFromCodedStream" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_MergePartialFromCodedStream" "', argument " "2"" of type '" "::google::protobuf::io::CodedInputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedInputStream *)(argp2);
  result = (bool)(arg1)->MergePartialFromCodedStream(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_SerializeWithCachedSizes(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  ::google::protobuf::io::CodedOutputStream *arg2 = (::google::protobuf::io::CodedOutputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_SerializeWithCachedSizes.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_SerializeWithCachedSizes" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_google__protobuf__io__CodedOutputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_SerializeWithCachedSizes" "', argument " "2"" of type '" "::google::protobuf::io::CodedOutputStream *""'"); 
  }
  arg2 = (::google::protobuf::io::CodedOutputStream *)(argp2);
  ((tensorflow::OpList const *)arg1)->SerializeWithCachedSizes(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_InternalSerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  bool arg2 ;
  ::google::protobuf::uint8 *arg3 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_InternalSerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_InternalSerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  ecode2 = SWIG_AsVal_bool(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpList_InternalSerializeWithCachedSizesToArray" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = (bool)(val2);
  res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OpList_InternalSerializeWithCachedSizesToArray" "', argument " "3"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg3 = (::google::protobuf::uint8 *)(argp3);
  result = (::google::protobuf::uint8 *)((tensorflow::OpList const *)arg1)->InternalSerializeWithCachedSizesToArray(arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_SerializeWithCachedSizesToArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  ::google::protobuf::uint8 *arg2 = (::google::protobuf::uint8 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ::google::protobuf::uint8 *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_SerializeWithCachedSizesToArray.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_SerializeWithCachedSizesToArray" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  res2 = SWIG_ConvertPtr(args[0], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpList_SerializeWithCachedSizesToArray" "', argument " "2"" of type '" "::google::protobuf::uint8 *""'"); 
  }
  arg2 = (::google::protobuf::uint8 *)(argp2);
  result = (::google::protobuf::uint8 *)((tensorflow::OpList const *)arg1)->SerializeWithCachedSizesToArray(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_GetCachedSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_GetCachedSize.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_GetCachedSize" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (int)((tensorflow::OpList const *)arg1)->GetCachedSize();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_GetMetadata(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::Metadata result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_GetMetadata.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_GetMetadata" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = ((tensorflow::OpList const *)arg1)->GetMetadata();
  jsresult = SWIG_NewPointerObj((new ::google::protobuf::Metadata((const ::google::protobuf::Metadata&)(result))), SWIGTYPE_p_google__protobuf__Metadata, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_op_size(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_op_size.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_op_size" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (int)((tensorflow::OpList const *)arg1)->op_size();
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_clear_op(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_clear_op.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_clear_op" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  (arg1)->clear_op();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_tensorflow_OpList_kOpFieldNumber(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  
  jsresult = SWIG_From_int((int)(tensorflow::OpList::kOpFieldNumber));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_OpList_op__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  ::tensorflow::OpDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_op" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpList_op" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (::tensorflow::OpDef *) &((tensorflow::OpList const *)arg1)->op(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_mutable_op__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  ::tensorflow::OpDef *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_mutable_op" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  ecode2 = SWIG_AsVal_int(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OpList_mutable_op" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (::tensorflow::OpDef *)(arg1)->mutable_op(arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_add_op(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::tensorflow::OpDef *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_OpList_add_op.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_add_op" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (::tensorflow::OpDef *)(arg1)->add_op();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tensorflow__OpDef, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_mutable_op__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef > *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_mutable_op" "', argument " "1"" of type '" "tensorflow::OpList *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef > *)(arg1)->mutable_op();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_t, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList__wrap_OpList_mutable_op(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_mutable_op__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_mutable_op__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_mutable_op__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_mutable_op__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function mutable_op.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList_op__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::OpList *arg1 = (tensorflow::OpList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef > *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__OpList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_op" "', argument " "1"" of type '" "tensorflow::OpList const *""'"); 
  }
  arg1 = (tensorflow::OpList *)(argp1);
  result = (::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef > *) &((tensorflow::OpList const *)arg1)->op();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_t, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_OpList__wrap_OpList_op(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_op__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_op__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_OpList_op__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_OpList_op__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function op.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_OpList_default_instance__set(v8::Local<v8::String> property, v8::Local<v8::Value> value,
  const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpList > *arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpList > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(value, &argp1,SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpList_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpList_default_instance__set" "', argument " "1"" of type '" "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpList > *""'"); 
  }
  arg1 = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpList > *)(argp1);
  tensorflow::OpList_default_instance_ = *arg1;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_OpList_default_instance__get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  ::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpList > *result = 0 ;
  
  result = (::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpList > *)&tensorflow::OpList_default_instance_;
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpList_t, 0 |  0 );
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_StringPiece__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  tensorflow::StringPiece *result;
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_StringPiece__SWIG_0.");
  result = (tensorflow::StringPiece *)new tensorflow::StringPiece();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__StringPiece, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_StringPiece__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  tensorflow::StringPiece *result;
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_StringPiece__SWIG_1.");
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StringPiece" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  ecode2 = SWIG_AsVal_size_t(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_StringPiece" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  result = (tensorflow::StringPiece *)new tensorflow::StringPiece((char const *)arg1,arg2);
  
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__StringPiece, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_StringPiece__SWIG_2(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  string *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  tensorflow::StringPiece *result;
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_StringPiece__SWIG_2.");
  res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StringPiece" "', argument " "1"" of type '" "string const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StringPiece" "', argument " "1"" of type '" "string const &""'"); 
  }
  arg1 = (string *)(argp1);
  result = (tensorflow::StringPiece *)new tensorflow::StringPiece((string const &)*arg1);
  
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__StringPiece, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_StringPiece__SWIG_3(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> self = args.Holder();
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  tensorflow::StringPiece *result;
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_StringPiece__SWIG_3.");
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StringPiece" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = (tensorflow::StringPiece *)new tensorflow::StringPiece((char const *)arg1);
  
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_tensorflow__StringPiece, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_new_StringPiece(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  OverloadErrorHandler errorHandler;
  v8::Handle<v8::Value> self;
  
  // switch all cases by means of series of if-returns.
  
  if(args.Length() == 0) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_StringPiece__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_StringPiece__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_StringPiece__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_StringPiece__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_StringPiece__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_StringPiece__SWIG_2(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    self = _wrap_new_StringPiece__SWIG_3(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(self);
    }
#else
    _wrap_new_StringPiece__SWIG_3(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  // default:
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for construction of _exports_StringPiece");
  
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_set(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_set.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_set" "', argument " "1"" of type '" "tensorflow::StringPiece *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  res2 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg2), SWIGTYPE_p_void, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringPiece_set" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringPiece_set" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  (arg1)->set((void const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_data(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_data.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_data" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  result = (char *)((tensorflow::StringPiece const *)arg1)->data();
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_size(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_size.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_size" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  result = ((tensorflow::StringPiece const *)arg1)->size();
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_empty(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_empty.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_empty" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  result = (bool)((tensorflow::StringPiece const *)arg1)->empty();
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_begin(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  tensorflow::StringPiece::iterator result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_begin.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_begin" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  result = (tensorflow::StringPiece::iterator)((tensorflow::StringPiece const *)arg1)->begin();
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_end(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  tensorflow::StringPiece::iterator result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_end.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_end" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  result = (tensorflow::StringPiece::iterator)((tensorflow::StringPiece const *)arg1)->end();
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_npos_get(v8::Local<v8::String> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  size_t result;
  
  result = (size_t)tensorflow::StringPiece::npos;
  jsresult = SWIG_From_size_t((size_t)(result));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_StringPiece_clear(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_clear.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_clear" "', argument " "1"" of type '" "tensorflow::StringPiece *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  (arg1)->clear();
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_remove_prefix(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_remove_prefix.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_remove_prefix" "', argument " "1"" of type '" "tensorflow::StringPiece *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  ecode2 = SWIG_AsVal_size_t(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringPiece_remove_prefix" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  (arg1)->remove_prefix(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_remove_suffix(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_remove_suffix.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_remove_suffix" "', argument " "1"" of type '" "tensorflow::StringPiece *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  ecode2 = SWIG_AsVal_size_t(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringPiece_remove_suffix" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  (arg1)->remove_suffix(arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_find__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  char arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_find" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  ecode2 = SWIG_AsVal_char(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringPiece_find" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = (char)(val2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringPiece_find" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  result = ((tensorflow::StringPiece const *)arg1)->find(arg2,arg3);
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_find__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_find" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  ecode2 = SWIG_AsVal_char(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringPiece_find" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = (char)(val2);
  result = ((tensorflow::StringPiece const *)arg1)->find(arg2);
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece__wrap_StringPiece_find(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_StringPiece_find__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_StringPiece_find__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_StringPiece_find__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_StringPiece_find__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function find.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_rfind__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  char arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_rfind" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  ecode2 = SWIG_AsVal_char(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringPiece_rfind" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = (char)(val2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringPiece_rfind" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  result = ((tensorflow::StringPiece const *)arg1)->rfind(arg2,arg3);
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_rfind__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_rfind" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  ecode2 = SWIG_AsVal_char(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringPiece_rfind" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = (char)(val2);
  result = ((tensorflow::StringPiece const *)arg1)->rfind(arg2);
  jsresult = SWIG_From_size_t((size_t)(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece__wrap_StringPiece_rfind(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_StringPiece_rfind__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_StringPiece_rfind__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_StringPiece_rfind__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_StringPiece_rfind__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function rfind.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_contains(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  tensorflow::StringPiece arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_contains.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_contains" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__StringPiece,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringPiece_contains" "', argument " "2"" of type '" "tensorflow::StringPiece""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringPiece_contains" "', argument " "2"" of type '" "tensorflow::StringPiece""'");
    } else {
      arg2 = *((tensorflow::StringPiece *)(argp2));
    }
  }
  result = (bool)((tensorflow::StringPiece const *)arg1)->contains(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_Consume(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  tensorflow::StringPiece arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_Consume.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_Consume" "', argument " "1"" of type '" "tensorflow::StringPiece *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__StringPiece,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringPiece_Consume" "', argument " "2"" of type '" "tensorflow::StringPiece""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringPiece_Consume" "', argument " "2"" of type '" "tensorflow::StringPiece""'");
    } else {
      arg2 = *((tensorflow::StringPiece *)(argp2));
    }
  }
  result = (bool)(arg1)->Consume(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_substr__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  tensorflow::StringPiece result;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_substr" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  ecode2 = SWIG_AsVal_size_t(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringPiece_substr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  ecode3 = SWIG_AsVal_size_t(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringPiece_substr" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  result = ((tensorflow::StringPiece const *)arg1)->substr(arg2,arg3);
  jsresult = SWIG_NewPointerObj((new tensorflow::StringPiece((const tensorflow::StringPiece&)(result))), SWIGTYPE_p_tensorflow__StringPiece, SWIG_POINTER_OWN |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_substr__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  tensorflow::StringPiece result;
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_substr" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  ecode2 = SWIG_AsVal_size_t(args[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringPiece_substr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  result = ((tensorflow::StringPiece const *)arg1)->substr(arg2);
  jsresult = SWIG_NewPointerObj((new tensorflow::StringPiece((const tensorflow::StringPiece&)(result))), SWIGTYPE_p_tensorflow__StringPiece, SWIG_POINTER_OWN |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece__wrap_StringPiece_substr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() == 2) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_StringPiece_substr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_StringPiece_substr__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  if(args.Length() == 1) {
    errorHandler.err.Clear();
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
    jsresult = _wrap_StringPiece_substr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      SWIGV8_ESCAPE(jsresult);
    }
#else
    _wrap_StringPiece_substr__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
#endif
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function substr.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_ToString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_ToString.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_ToString" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  result = ((tensorflow::StringPiece const *)arg1)->ToString();
  jsresult = SWIG_NewPointerObj((new std::string((const std::string&)(result))), SWIGTYPE_p_std__string, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_compare(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  tensorflow::StringPiece arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_compare.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_compare" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__StringPiece,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringPiece_compare" "', argument " "2"" of type '" "tensorflow::StringPiece""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringPiece_compare" "', argument " "2"" of type '" "tensorflow::StringPiece""'");
    } else {
      arg2 = *((tensorflow::StringPiece *)(argp2));
    }
  }
  result = (int)((tensorflow::StringPiece const *)arg1)->compare(arg2);
  jsresult = SWIG_From_int((int)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_starts_with(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  tensorflow::StringPiece arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_starts_with.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_starts_with" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__StringPiece,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringPiece_starts_with" "', argument " "2"" of type '" "tensorflow::StringPiece""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringPiece_starts_with" "', argument " "2"" of type '" "tensorflow::StringPiece""'");
    } else {
      arg2 = *((tensorflow::StringPiece *)(argp2));
    }
  }
  result = (bool)((tensorflow::StringPiece const *)arg1)->starts_with(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_StringPiece_ends_with(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Value> jsresult;
  tensorflow::StringPiece *arg1 = (tensorflow::StringPiece *) 0 ;
  tensorflow::StringPiece arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_StringPiece_ends_with.");
  
  res1 = SWIG_ConvertPtr(args.Holder(), &argp1,SWIGTYPE_p_tensorflow__StringPiece, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringPiece_ends_with" "', argument " "1"" of type '" "tensorflow::StringPiece const *""'"); 
  }
  arg1 = (tensorflow::StringPiece *)(argp1);
  {
    res2 = SWIG_ConvertPtr(args[0], &argp2, SWIGTYPE_p_tensorflow__StringPiece,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringPiece_ends_with" "', argument " "2"" of type '" "tensorflow::StringPiece""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringPiece_ends_with" "', argument " "2"" of type '" "tensorflow::StringPiece""'");
    } else {
      arg2 = *((tensorflow::StringPiece *)(argp2));
    }
  }
  result = (bool)((tensorflow::StringPiece const *)arg1)->ends_with(arg2);
  jsresult = SWIG_From_bool((bool)(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
static void _wrap_delete_StringPiece(v8::Persistent<v8::Value> object, void *parameter) {
  SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
  static void _wrap_delete_StringPiece(v8::Isolate *isolate, v8::Persistent<v8::Value> object, void *parameter) {
    SWIGV8_Proxy *proxy = static_cast<SWIGV8_Proxy *>(parameter);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
    static void _wrap_delete_StringPiece(v8::Isolate *isolate, v8::Persistent< v8::Object> *object, SWIGV8_Proxy *proxy) {
#else
      static void _wrap_delete_StringPiece(const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data) {
        v8::Local<v8::Object> object = data.GetValue();
        SWIGV8_Proxy *proxy = data.GetParameter();
#endif
        
        if(proxy->swigCMemOwn && proxy->swigCObject) {
          tensorflow::StringPiece * arg1 = (tensorflow::StringPiece *)proxy->swigCObject;
          delete arg1;
        }
        delete proxy;
        
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031710)
        object.Dispose();
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031900)
        object.Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x032100)
        object->Dispose(isolate);
#elif (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < SWIGV8_SETWEAK_VERSION)
        object->Dispose();
#else
        object.Clear();
#endif
      }


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_tensorflow__OpDef_ArgDefTo_p_google__protobuf__Message(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::Message *)  ((tensorflow::OpDef_ArgDef *) x));
}
static void *_p_tensorflow__OpDef_AttrDefTo_p_google__protobuf__Message(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::Message *)  ((tensorflow::OpDef_AttrDef *) x));
}
static void *_p_tensorflow__OpDeprecationTo_p_google__protobuf__Message(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::Message *)  ((tensorflow::OpDeprecation *) x));
}
static void *_p_tensorflow__OpDefTo_p_google__protobuf__Message(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::Message *)  ((tensorflow::OpDef *) x));
}
static void *_p_tensorflow__OpListTo_p_google__protobuf__Message(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::Message *)  ((tensorflow::OpList *) x));
}
static void *_p_tensorflow__OpDef_ArgDefTo_p_google__protobuf__MessageLite(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::MessageLite *) (google::protobuf::Message *) ((tensorflow::OpDef_ArgDef *) x));
}
static void *_p_tensorflow__OpDef_AttrDefTo_p_google__protobuf__MessageLite(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::MessageLite *) (google::protobuf::Message *) ((tensorflow::OpDef_AttrDef *) x));
}
static void *_p_tensorflow__OpDeprecationTo_p_google__protobuf__MessageLite(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::MessageLite *) (google::protobuf::Message *) ((tensorflow::OpDeprecation *) x));
}
static void *_p_tensorflow__OpDefTo_p_google__protobuf__MessageLite(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::MessageLite *) (google::protobuf::Message *) ((tensorflow::OpDef *) x));
}
static void *_p_tensorflow__OpListTo_p_google__protobuf__MessageLite(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::MessageLite *) (google::protobuf::Message *) ((tensorflow::OpList *) x));
}
static void *_p_google__protobuf__MessageTo_p_google__protobuf__MessageLite(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((google::protobuf::MessageLite *)  ((google::protobuf::Message *) x));
}
static swig_type_info _swigt__p_ArgDef = {"_p_ArgDef", "ArgDef *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AttrDef = {"_p_AttrDef", "AttrDef *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Reflection = {"_p_Reflection", "Reflection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_AttrMetadata = {"_p_TF_AttrMetadata", "TF_AttrMetadata *|p_TF_AttrMetadata", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_AttrType = {"_p_TF_AttrType", "enum TF_AttrType *|TF_AttrType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Buffer = {"_p_TF_Buffer", "TF_Buffer *|p_TF_Buffer", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Code = {"_p_TF_Code", "enum TF_Code *|TF_Code *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_DataType = {"_p_TF_DataType", "TF_DataType *|TF_DataType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_DeprecatedSession = {"_p_TF_DeprecatedSession", "TF_DeprecatedSession *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Graph = {"_p_TF_Graph", "TF_Graph *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_ImportGraphDefOptions = {"_p_TF_ImportGraphDefOptions", "TF_ImportGraphDefOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Input = {"_p_TF_Input", "TF_Input *|p_TF_Input", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Library = {"_p_TF_Library", "TF_Library *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Operation = {"_p_TF_Operation", "TF_Operation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_OperationDescription = {"_p_TF_OperationDescription", "TF_OperationDescription *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Output = {"_p_TF_Output", "p_TF_Output|TF_Output *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Session = {"_p_TF_Session", "TF_Session *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_SessionOptions = {"_p_TF_SessionOptions", "TF_SessionOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Status = {"_p_TF_Status", "TF_Status *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TF_Tensor = {"_p_TF_Tensor", "TF_Tensor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_size_t__void = {"_p_f_p_void_size_t__void", "void (*)(void *,size_t)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_size_t_p_void__void = {"_p_f_p_void_size_t_p_void__void", "void (*)(void *,size_t,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_q_const__string__void = {"_p_f_r_q_const__string__void", "void (*)(string const &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__Arena = {"_p_google__protobuf__Arena", "::google::protobuf::Arena *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__Descriptor = {"_p_google__protobuf__Descriptor", "google::protobuf::Descriptor *|::google::protobuf::Descriptor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__EnumValueDescriptor = {"_p_google__protobuf__EnumValueDescriptor", "google::protobuf::EnumValueDescriptor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__FieldDescriptor = {"_p_google__protobuf__FieldDescriptor", "google::protobuf::FieldDescriptor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__Message = {"_p_google__protobuf__Message", "p_google__protobuf__Message|google::protobuf::Message *|::google::protobuf::Message *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__MessageFactory = {"_p_google__protobuf__MessageFactory", "google::protobuf::MessageFactory *|p_google__protobuf__MessageFactory", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__MessageLite = {"_p_google__protobuf__MessageLite", "google::protobuf::MessageLite *|p_google__protobuf__MessageLite", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__Metadata = {"_p_google__protobuf__Metadata", "google::protobuf::Metadata *|::google::protobuf::Metadata *|p_google__protobuf__Metadata", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__OneofDescriptor = {"_p_google__protobuf__OneofDescriptor", "google::protobuf::OneofDescriptor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__Reflection = {"_p_google__protobuf__Reflection", "google::protobuf::Reflection *|google::protobuf::Message::Reflection *|p_google__protobuf__Reflection", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t = {"_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t", "::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_ArgDef > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_AttrDef_t = {"_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_AttrDef_t", "::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef_AttrDef > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_t = {"_p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_t", "::google::protobuf::RepeatedPtrField< ::tensorflow::OpDef > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__UnknownFieldSet = {"_p_google__protobuf__UnknownFieldSet", "google::protobuf::UnknownFieldSet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_ArgDef_t = {"_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_ArgDef_t", "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_ArgDef > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_AttrDef_t = {"_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_AttrDef_t", "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef_AttrDef > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_t = {"_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_t", "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDef > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDeprecation_t = {"_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDeprecation_t", "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpDeprecation > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpList_t = {"_p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpList_t", "::google::protobuf::internal::ExplicitlyConstructed< tensorflow::OpList > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__io__CodedInputStream = {"_p_google__protobuf__io__CodedInputStream", "google::protobuf::io::CodedInputStream *|::google::protobuf::io::CodedInputStream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__io__CodedOutputStream = {"_p_google__protobuf__io__CodedOutputStream", "google::protobuf::io::CodedOutputStream *|::google::protobuf::io::CodedOutputStream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__io__ZeroCopyInputStream = {"_p_google__protobuf__io__ZeroCopyInputStream", "google::protobuf::io::ZeroCopyInputStream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_google__protobuf__io__ZeroCopyOutputStream = {"_p_google__protobuf__io__ZeroCopyOutputStream", "google::protobuf::io::ZeroCopyOutputStream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int16_t = {"_p_int16_t", "google::protobuf::int16 *|int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int32_t = {"_p_int32_t", "int32_t *|google::protobuf::int32 *|::google::protobuf::int32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int64_t = {"_p_int64_t", "int64_t *|google::protobuf::int64 *|::google::protobuf::int64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int8_t = {"_p_int8_t", "google::protobuf::int8 *|int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_TF_Buffer = {"_p_p_TF_Buffer", "TF_Buffer **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_TF_Operation = {"_p_p_TF_Operation", "TF_Operation **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_TF_Tensor = {"_p_p_TF_Tensor", "TF_Tensor **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_int64_t = {"_p_p_int64_t", "int64_t **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__istream = {"_p_std__istream", "std::istream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "::std::string *|std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_google__protobuf__FieldDescriptor_const_p_t = {"_p_std__vectorT_google__protobuf__FieldDescriptor_const_p_t", "std::vector< google::protobuf::FieldDescriptor const * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_string_t = {"_p_std__vectorT_string_t", "std::vector< string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_string = {"_p_string", "string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tensorflow__AttrValue = {"_p_tensorflow__AttrValue", "::tensorflow::AttrValue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tensorflow__DataType = {"_p_tensorflow__DataType", "::tensorflow::DataType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tensorflow__OpDef = {"_p_tensorflow__OpDef", "tensorflow::OpDef *|::tensorflow::OpDef *|p_tensorflow__OpDef", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tensorflow__OpDef_ArgDef = {"_p_tensorflow__OpDef_ArgDef", "p_tensorflow__OpDef_ArgDef|tensorflow::OpDef_ArgDef *|::tensorflow::OpDef_ArgDef *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tensorflow__OpDef_AttrDef = {"_p_tensorflow__OpDef_AttrDef", "tensorflow::OpDef_AttrDef *|p_tensorflow__OpDef_AttrDef|::tensorflow::OpDef_AttrDef *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tensorflow__OpDeprecation = {"_p_tensorflow__OpDeprecation", "p_tensorflow__OpDeprecation|::tensorflow::OpDeprecation *|tensorflow::OpDeprecation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tensorflow__OpList = {"_p_tensorflow__OpList", "tensorflow::OpList *|p_tensorflow__OpList", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tensorflow__StringPiece = {"_p_tensorflow__StringPiece", "tensorflow::StringPiece *|p_tensorflow__StringPiece", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint16_t = {"_p_uint16_t", "google::protobuf::uint16 *|uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *|google::protobuf::uint32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint64_t = {"_p_uint64_t", "uint64_t *|google::protobuf::uint64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint8_t = {"_p_uint8_t", "google::protobuf::uint8 *|::google::protobuf::uint8 *|uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *|google::protobuf::uint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ArgDef,
  &_swigt__p_AttrDef,
  &_swigt__p_Reflection,
  &_swigt__p_TF_AttrMetadata,
  &_swigt__p_TF_AttrType,
  &_swigt__p_TF_Buffer,
  &_swigt__p_TF_Code,
  &_swigt__p_TF_DataType,
  &_swigt__p_TF_DeprecatedSession,
  &_swigt__p_TF_Graph,
  &_swigt__p_TF_ImportGraphDefOptions,
  &_swigt__p_TF_Input,
  &_swigt__p_TF_Library,
  &_swigt__p_TF_Operation,
  &_swigt__p_TF_OperationDescription,
  &_swigt__p_TF_Output,
  &_swigt__p_TF_Session,
  &_swigt__p_TF_SessionOptions,
  &_swigt__p_TF_Status,
  &_swigt__p_TF_Tensor,
  &_swigt__p_char,
  &_swigt__p_f_p_void_size_t__void,
  &_swigt__p_f_p_void_size_t_p_void__void,
  &_swigt__p_f_r_q_const__string__void,
  &_swigt__p_float,
  &_swigt__p_google__protobuf__Arena,
  &_swigt__p_google__protobuf__Descriptor,
  &_swigt__p_google__protobuf__EnumValueDescriptor,
  &_swigt__p_google__protobuf__FieldDescriptor,
  &_swigt__p_google__protobuf__Message,
  &_swigt__p_google__protobuf__MessageFactory,
  &_swigt__p_google__protobuf__MessageLite,
  &_swigt__p_google__protobuf__Metadata,
  &_swigt__p_google__protobuf__OneofDescriptor,
  &_swigt__p_google__protobuf__Reflection,
  &_swigt__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t,
  &_swigt__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_AttrDef_t,
  &_swigt__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_t,
  &_swigt__p_google__protobuf__UnknownFieldSet,
  &_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_ArgDef_t,
  &_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_AttrDef_t,
  &_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_t,
  &_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDeprecation_t,
  &_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpList_t,
  &_swigt__p_google__protobuf__io__CodedInputStream,
  &_swigt__p_google__protobuf__io__CodedOutputStream,
  &_swigt__p_google__protobuf__io__ZeroCopyInputStream,
  &_swigt__p_google__protobuf__io__ZeroCopyOutputStream,
  &_swigt__p_int,
  &_swigt__p_int16_t,
  &_swigt__p_int32_t,
  &_swigt__p_int64_t,
  &_swigt__p_int8_t,
  &_swigt__p_p_TF_Buffer,
  &_swigt__p_p_TF_Operation,
  &_swigt__p_p_TF_Tensor,
  &_swigt__p_p_char,
  &_swigt__p_p_int64_t,
  &_swigt__p_p_void,
  &_swigt__p_size_t,
  &_swigt__p_size_type,
  &_swigt__p_std__istream,
  &_swigt__p_std__ostream,
  &_swigt__p_std__string,
  &_swigt__p_std__vectorT_google__protobuf__FieldDescriptor_const_p_t,
  &_swigt__p_std__vectorT_string_t,
  &_swigt__p_string,
  &_swigt__p_tensorflow__AttrValue,
  &_swigt__p_tensorflow__DataType,
  &_swigt__p_tensorflow__OpDef,
  &_swigt__p_tensorflow__OpDef_ArgDef,
  &_swigt__p_tensorflow__OpDef_AttrDef,
  &_swigt__p_tensorflow__OpDeprecation,
  &_swigt__p_tensorflow__OpList,
  &_swigt__p_tensorflow__StringPiece,
  &_swigt__p_uint16_t,
  &_swigt__p_uint32_t,
  &_swigt__p_uint64_t,
  &_swigt__p_uint8_t,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_ArgDef[] = {  {&_swigt__p_ArgDef, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AttrDef[] = {  {&_swigt__p_AttrDef, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Reflection[] = {  {&_swigt__p_Reflection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_AttrMetadata[] = {  {&_swigt__p_TF_AttrMetadata, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_AttrType[] = {  {&_swigt__p_TF_AttrType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Buffer[] = {  {&_swigt__p_TF_Buffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Code[] = {  {&_swigt__p_TF_Code, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_DataType[] = {  {&_swigt__p_TF_DataType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_DeprecatedSession[] = {  {&_swigt__p_TF_DeprecatedSession, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Graph[] = {  {&_swigt__p_TF_Graph, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_ImportGraphDefOptions[] = {  {&_swigt__p_TF_ImportGraphDefOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Input[] = {  {&_swigt__p_TF_Input, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Library[] = {  {&_swigt__p_TF_Library, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Operation[] = {  {&_swigt__p_TF_Operation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_OperationDescription[] = {  {&_swigt__p_TF_OperationDescription, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Output[] = {  {&_swigt__p_TF_Output, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Session[] = {  {&_swigt__p_TF_Session, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_SessionOptions[] = {  {&_swigt__p_TF_SessionOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Status[] = {  {&_swigt__p_TF_Status, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TF_Tensor[] = {  {&_swigt__p_TF_Tensor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_size_t__void[] = {  {&_swigt__p_f_p_void_size_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_size_t_p_void__void[] = {  {&_swigt__p_f_p_void_size_t_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_q_const__string__void[] = {  {&_swigt__p_f_r_q_const__string__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__Arena[] = {  {&_swigt__p_google__protobuf__Arena, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__Descriptor[] = {  {&_swigt__p_google__protobuf__Descriptor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__EnumValueDescriptor[] = {  {&_swigt__p_google__protobuf__EnumValueDescriptor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__FieldDescriptor[] = {  {&_swigt__p_google__protobuf__FieldDescriptor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__Message[] = {  {&_swigt__p_tensorflow__OpDef_ArgDef, _p_tensorflow__OpDef_ArgDefTo_p_google__protobuf__Message, 0, 0},  {&_swigt__p_tensorflow__OpDef_AttrDef, _p_tensorflow__OpDef_AttrDefTo_p_google__protobuf__Message, 0, 0},  {&_swigt__p_tensorflow__OpDeprecation, _p_tensorflow__OpDeprecationTo_p_google__protobuf__Message, 0, 0},  {&_swigt__p_google__protobuf__Message, 0, 0, 0},  {&_swigt__p_tensorflow__OpDef, _p_tensorflow__OpDefTo_p_google__protobuf__Message, 0, 0},  {&_swigt__p_tensorflow__OpList, _p_tensorflow__OpListTo_p_google__protobuf__Message, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__MessageFactory[] = {  {&_swigt__p_google__protobuf__MessageFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__MessageLite[] = {  {&_swigt__p_tensorflow__OpDef_ArgDef, _p_tensorflow__OpDef_ArgDefTo_p_google__protobuf__MessageLite, 0, 0},  {&_swigt__p_tensorflow__OpDef_AttrDef, _p_tensorflow__OpDef_AttrDefTo_p_google__protobuf__MessageLite, 0, 0},  {&_swigt__p_tensorflow__OpDeprecation, _p_tensorflow__OpDeprecationTo_p_google__protobuf__MessageLite, 0, 0},  {&_swigt__p_google__protobuf__MessageLite, 0, 0, 0},  {&_swigt__p_tensorflow__OpDef, _p_tensorflow__OpDefTo_p_google__protobuf__MessageLite, 0, 0},  {&_swigt__p_tensorflow__OpList, _p_tensorflow__OpListTo_p_google__protobuf__MessageLite, 0, 0},  {&_swigt__p_google__protobuf__Message, _p_google__protobuf__MessageTo_p_google__protobuf__MessageLite, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__Metadata[] = {  {&_swigt__p_google__protobuf__Metadata, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__OneofDescriptor[] = {  {&_swigt__p_google__protobuf__OneofDescriptor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__Reflection[] = {  {&_swigt__p_google__protobuf__Reflection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t[] = {  {&_swigt__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_AttrDef_t[] = {  {&_swigt__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_AttrDef_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_t[] = {  {&_swigt__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__UnknownFieldSet[] = {  {&_swigt__p_google__protobuf__UnknownFieldSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_ArgDef_t[] = {  {&_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_ArgDef_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_AttrDef_t[] = {  {&_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_AttrDef_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_t[] = {  {&_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDeprecation_t[] = {  {&_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDeprecation_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpList_t[] = {  {&_swigt__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpList_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__io__CodedInputStream[] = {  {&_swigt__p_google__protobuf__io__CodedInputStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__io__CodedOutputStream[] = {  {&_swigt__p_google__protobuf__io__CodedOutputStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__io__ZeroCopyInputStream[] = {  {&_swigt__p_google__protobuf__io__ZeroCopyInputStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_google__protobuf__io__ZeroCopyOutputStream[] = {  {&_swigt__p_google__protobuf__io__ZeroCopyOutputStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int16_t[] = {  {&_swigt__p_int16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int32_t[] = {  {&_swigt__p_int32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int64_t[] = {  {&_swigt__p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int8_t[] = {  {&_swigt__p_int8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_TF_Buffer[] = {  {&_swigt__p_p_TF_Buffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_TF_Operation[] = {  {&_swigt__p_p_TF_Operation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_TF_Tensor[] = {  {&_swigt__p_p_TF_Tensor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_int64_t[] = {  {&_swigt__p_p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__istream[] = {  {&_swigt__p_std__istream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_google__protobuf__FieldDescriptor_const_p_t[] = {  {&_swigt__p_std__vectorT_google__protobuf__FieldDescriptor_const_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_string_t[] = {  {&_swigt__p_std__vectorT_string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_string[] = {  {&_swigt__p_string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tensorflow__AttrValue[] = {  {&_swigt__p_tensorflow__AttrValue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tensorflow__DataType[] = {  {&_swigt__p_tensorflow__DataType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tensorflow__OpDef[] = {  {&_swigt__p_tensorflow__OpDef, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tensorflow__OpDef_ArgDef[] = {  {&_swigt__p_tensorflow__OpDef_ArgDef, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tensorflow__OpDef_AttrDef[] = {  {&_swigt__p_tensorflow__OpDef_AttrDef, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tensorflow__OpDeprecation[] = {  {&_swigt__p_tensorflow__OpDeprecation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tensorflow__OpList[] = {  {&_swigt__p_tensorflow__OpList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tensorflow__StringPiece[] = {  {&_swigt__p_tensorflow__StringPiece, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint16_t[] = {  {&_swigt__p_uint16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint64_t[] = {  {&_swigt__p_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint8_t[] = {  {&_swigt__p_uint8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ArgDef,
  _swigc__p_AttrDef,
  _swigc__p_Reflection,
  _swigc__p_TF_AttrMetadata,
  _swigc__p_TF_AttrType,
  _swigc__p_TF_Buffer,
  _swigc__p_TF_Code,
  _swigc__p_TF_DataType,
  _swigc__p_TF_DeprecatedSession,
  _swigc__p_TF_Graph,
  _swigc__p_TF_ImportGraphDefOptions,
  _swigc__p_TF_Input,
  _swigc__p_TF_Library,
  _swigc__p_TF_Operation,
  _swigc__p_TF_OperationDescription,
  _swigc__p_TF_Output,
  _swigc__p_TF_Session,
  _swigc__p_TF_SessionOptions,
  _swigc__p_TF_Status,
  _swigc__p_TF_Tensor,
  _swigc__p_char,
  _swigc__p_f_p_void_size_t__void,
  _swigc__p_f_p_void_size_t_p_void__void,
  _swigc__p_f_r_q_const__string__void,
  _swigc__p_float,
  _swigc__p_google__protobuf__Arena,
  _swigc__p_google__protobuf__Descriptor,
  _swigc__p_google__protobuf__EnumValueDescriptor,
  _swigc__p_google__protobuf__FieldDescriptor,
  _swigc__p_google__protobuf__Message,
  _swigc__p_google__protobuf__MessageFactory,
  _swigc__p_google__protobuf__MessageLite,
  _swigc__p_google__protobuf__Metadata,
  _swigc__p_google__protobuf__OneofDescriptor,
  _swigc__p_google__protobuf__Reflection,
  _swigc__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_ArgDef_t,
  _swigc__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_AttrDef_t,
  _swigc__p_google__protobuf__RepeatedPtrFieldT_tensorflow__OpDef_t,
  _swigc__p_google__protobuf__UnknownFieldSet,
  _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_ArgDef_t,
  _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_AttrDef_t,
  _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDef_t,
  _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpDeprecation_t,
  _swigc__p_google__protobuf__internal__ExplicitlyConstructedT_tensorflow__OpList_t,
  _swigc__p_google__protobuf__io__CodedInputStream,
  _swigc__p_google__protobuf__io__CodedOutputStream,
  _swigc__p_google__protobuf__io__ZeroCopyInputStream,
  _swigc__p_google__protobuf__io__ZeroCopyOutputStream,
  _swigc__p_int,
  _swigc__p_int16_t,
  _swigc__p_int32_t,
  _swigc__p_int64_t,
  _swigc__p_int8_t,
  _swigc__p_p_TF_Buffer,
  _swigc__p_p_TF_Operation,
  _swigc__p_p_TF_Tensor,
  _swigc__p_p_char,
  _swigc__p_p_int64_t,
  _swigc__p_p_void,
  _swigc__p_size_t,
  _swigc__p_size_type,
  _swigc__p_std__istream,
  _swigc__p_std__ostream,
  _swigc__p_std__string,
  _swigc__p_std__vectorT_google__protobuf__FieldDescriptor_const_p_t,
  _swigc__p_std__vectorT_string_t,
  _swigc__p_string,
  _swigc__p_tensorflow__AttrValue,
  _swigc__p_tensorflow__DataType,
  _swigc__p_tensorflow__OpDef,
  _swigc__p_tensorflow__OpDef_ArgDef,
  _swigc__p_tensorflow__OpDef_AttrDef,
  _swigc__p_tensorflow__OpDeprecation,
  _swigc__p_tensorflow__OpList,
  _swigc__p_tensorflow__StringPiece,
  _swigc__p_uint16_t,
  _swigc__p_uint32_t,
  _swigc__p_uint64_t,
  _swigc__p_uint8_t,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */




#include <assert.h>

SWIGRUNTIME void
SWIG_V8_SetModule(void *, swig_module_info *swig_module) {
  v8::Local<v8::Object> global_obj = SWIGV8_CURRENT_CONTEXT()->Global();
  v8::Local<v8::External> mod = SWIGV8_EXTERNAL_NEW(swig_module);
  assert(!mod.IsEmpty());
  global_obj->SetHiddenValue(SWIGV8_STRING_NEW("swig_module_info_data"), mod);
}

SWIGRUNTIME swig_module_info *
SWIG_V8_GetModule(void *) {
  v8::Local<v8::Object> global_obj = SWIGV8_CURRENT_CONTEXT()->Global();
  v8::Local<v8::Value> moduleinfo = global_obj->GetHiddenValue(SWIGV8_STRING_NEW("swig_module_info_data"));

  if (moduleinfo.IsEmpty())
  {
    // It's not yet loaded
    return 0;
  }

  v8::Local<v8::External> moduleinfo_extern = v8::Local<v8::External>::Cast(moduleinfo);

  if (moduleinfo_extern.IsEmpty())
  {
    // Something's not right
    return 0;
  }

  void *ptr = moduleinfo_extern->Value();
  assert(ptr);
  swig_module_info *retptr = static_cast<swig_module_info *>(ptr);
  assert(retptr);
  return retptr;
}

#define SWIG_GetModule(clientdata)                SWIG_V8_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)       SWIG_V8_SetModule(clientdata, pointer)


/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;

  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }

  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);

    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }

  /* When multiple interpreters are used, a module could have already been initialized in
     a different interpreter, but not yet have a pointer in this interpreter.
     In this case, we do not want to continue adding types... everything should be
     set up already */
  if (init == 0) return;

  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;

#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif

    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
	type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }

    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {

      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
	if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
	if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
	  printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
	  cast->type = ret;
	  ret = 0;
	} else {
	  /* Check for casting already in the list */
	  swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
	  if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
	  if (!ocast) ret = 0;
	}
      }

      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
	printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;

#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
  printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;

  if (init_run) return;
  init_run = 1;

  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
            SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{ /* c-mode */
#endif
}
#endif


// Note: 'extern "C"'' disables name mangling which makes it easier to load the symbol manually
// TODO: is it ok to do that?
extern "C"
#if (NODE_MODULE_VERSION < 0x000C)
void SWIGV8_INIT (v8::Handle<v8::Object> exports)
#else
void SWIGV8_INIT (v8::Handle<v8::Object> exports, v8::Handle<v8::Object> /*module*/)
#endif
{
  SWIG_InitializeModule(static_cast<void *>(&exports));

  SWIGV8_HANDLESCOPE();
  
  v8::Handle<v8::Object> exports_obj = exports;


  // a class template for creating proxies of undefined types
  SWIGV8_SET_CLASS_TEMPL(SWIGV8_SWIGTYPE_Proxy_class_templ, SWIGV8_CreateClassTemplate("SwigProxy"));

  /* create objects for namespaces */
  

  /* create class templates */
  /* Name: _exports_MessageLite, Type: p_google__protobuf__MessageLite, Dtor: _wrap_delete_MessageLite */
v8::Handle<v8::FunctionTemplate> _exports_MessageLite_class = SWIGV8_CreateClassTemplate("_exports_MessageLite");
SWIGV8_SET_CLASS_TEMPL(_exports_MessageLite_clientData.class_templ, _exports_MessageLite_class);
_exports_MessageLite_clientData.dtor = _wrap_delete_MessageLite;
if (SWIGTYPE_p_google__protobuf__MessageLite->clientdata == 0) {
  SWIGTYPE_p_google__protobuf__MessageLite->clientdata = &_exports_MessageLite_clientData;
}
/* Name: _exports_Metadata, Type: p_google__protobuf__Metadata, Dtor: _wrap_delete_Metadata */
v8::Handle<v8::FunctionTemplate> _exports_Metadata_class = SWIGV8_CreateClassTemplate("_exports_Metadata");
SWIGV8_SET_CLASS_TEMPL(_exports_Metadata_clientData.class_templ, _exports_Metadata_class);
_exports_Metadata_clientData.dtor = _wrap_delete_Metadata;
if (SWIGTYPE_p_google__protobuf__Metadata->clientdata == 0) {
  SWIGTYPE_p_google__protobuf__Metadata->clientdata = &_exports_Metadata_clientData;
}
/* Name: _exports_Message, Type: p_google__protobuf__Message, Dtor: _wrap_delete_Message */
v8::Handle<v8::FunctionTemplate> _exports_Message_class = SWIGV8_CreateClassTemplate("_exports_Message");
SWIGV8_SET_CLASS_TEMPL(_exports_Message_clientData.class_templ, _exports_Message_class);
_exports_Message_clientData.dtor = _wrap_delete_Message;
if (SWIGTYPE_p_google__protobuf__Message->clientdata == 0) {
  SWIGTYPE_p_google__protobuf__Message->clientdata = &_exports_Message_clientData;
}
/* Name: _exports_Reflection, Type: p_google__protobuf__Reflection, Dtor: _wrap_delete_Reflection */
v8::Handle<v8::FunctionTemplate> _exports_Reflection_class = SWIGV8_CreateClassTemplate("_exports_Reflection");
SWIGV8_SET_CLASS_TEMPL(_exports_Reflection_clientData.class_templ, _exports_Reflection_class);
_exports_Reflection_clientData.dtor = _wrap_delete_Reflection;
if (SWIGTYPE_p_google__protobuf__Reflection->clientdata == 0) {
  SWIGTYPE_p_google__protobuf__Reflection->clientdata = &_exports_Reflection_clientData;
}
/* Name: _exports_MessageFactory, Type: p_google__protobuf__MessageFactory, Dtor: _wrap_delete_MessageFactory */
v8::Handle<v8::FunctionTemplate> _exports_MessageFactory_class = SWIGV8_CreateClassTemplate("_exports_MessageFactory");
SWIGV8_SET_CLASS_TEMPL(_exports_MessageFactory_clientData.class_templ, _exports_MessageFactory_class);
_exports_MessageFactory_clientData.dtor = _wrap_delete_MessageFactory;
if (SWIGTYPE_p_google__protobuf__MessageFactory->clientdata == 0) {
  SWIGTYPE_p_google__protobuf__MessageFactory->clientdata = &_exports_MessageFactory_clientData;
}
/* Name: _exports_TF_Buffer, Type: p_TF_Buffer, Dtor: _wrap_delete_TF_Buffer */
v8::Handle<v8::FunctionTemplate> _exports_TF_Buffer_class = SWIGV8_CreateClassTemplate("_exports_TF_Buffer");
SWIGV8_SET_CLASS_TEMPL(_exports_TF_Buffer_clientData.class_templ, _exports_TF_Buffer_class);
_exports_TF_Buffer_clientData.dtor = _wrap_delete_TF_Buffer;
if (SWIGTYPE_p_TF_Buffer->clientdata == 0) {
  SWIGTYPE_p_TF_Buffer->clientdata = &_exports_TF_Buffer_clientData;
}
/* Name: _exports_TF_Input, Type: p_TF_Input, Dtor: _wrap_delete_TF_Input */
v8::Handle<v8::FunctionTemplate> _exports_TF_Input_class = SWIGV8_CreateClassTemplate("_exports_TF_Input");
SWIGV8_SET_CLASS_TEMPL(_exports_TF_Input_clientData.class_templ, _exports_TF_Input_class);
_exports_TF_Input_clientData.dtor = _wrap_delete_TF_Input;
if (SWIGTYPE_p_TF_Input->clientdata == 0) {
  SWIGTYPE_p_TF_Input->clientdata = &_exports_TF_Input_clientData;
}
/* Name: _exports_TF_Output, Type: p_TF_Output, Dtor: _wrap_delete_TF_Output */
v8::Handle<v8::FunctionTemplate> _exports_TF_Output_class = SWIGV8_CreateClassTemplate("_exports_TF_Output");
SWIGV8_SET_CLASS_TEMPL(_exports_TF_Output_clientData.class_templ, _exports_TF_Output_class);
_exports_TF_Output_clientData.dtor = _wrap_delete_TF_Output;
if (SWIGTYPE_p_TF_Output->clientdata == 0) {
  SWIGTYPE_p_TF_Output->clientdata = &_exports_TF_Output_clientData;
}
/* Name: _exports_TF_AttrMetadata, Type: p_TF_AttrMetadata, Dtor: _wrap_delete_TF_AttrMetadata */
v8::Handle<v8::FunctionTemplate> _exports_TF_AttrMetadata_class = SWIGV8_CreateClassTemplate("_exports_TF_AttrMetadata");
SWIGV8_SET_CLASS_TEMPL(_exports_TF_AttrMetadata_clientData.class_templ, _exports_TF_AttrMetadata_class);
_exports_TF_AttrMetadata_clientData.dtor = _wrap_delete_TF_AttrMetadata;
if (SWIGTYPE_p_TF_AttrMetadata->clientdata == 0) {
  SWIGTYPE_p_TF_AttrMetadata->clientdata = &_exports_TF_AttrMetadata_clientData;
}
/* Name: _exports_OpDef_ArgDef, Type: p_tensorflow__OpDef_ArgDef, Dtor: _wrap_delete_OpDef_ArgDef */
v8::Handle<v8::FunctionTemplate> _exports_OpDef_ArgDef_class = SWIGV8_CreateClassTemplate("_exports_OpDef_ArgDef");
SWIGV8_SET_CLASS_TEMPL(_exports_OpDef_ArgDef_clientData.class_templ, _exports_OpDef_ArgDef_class);
_exports_OpDef_ArgDef_clientData.dtor = _wrap_delete_OpDef_ArgDef;
if (SWIGTYPE_p_tensorflow__OpDef_ArgDef->clientdata == 0) {
  SWIGTYPE_p_tensorflow__OpDef_ArgDef->clientdata = &_exports_OpDef_ArgDef_clientData;
}
/* Name: _exports_OpDef_AttrDef, Type: p_tensorflow__OpDef_AttrDef, Dtor: _wrap_delete_OpDef_AttrDef */
v8::Handle<v8::FunctionTemplate> _exports_OpDef_AttrDef_class = SWIGV8_CreateClassTemplate("_exports_OpDef_AttrDef");
SWIGV8_SET_CLASS_TEMPL(_exports_OpDef_AttrDef_clientData.class_templ, _exports_OpDef_AttrDef_class);
_exports_OpDef_AttrDef_clientData.dtor = _wrap_delete_OpDef_AttrDef;
if (SWIGTYPE_p_tensorflow__OpDef_AttrDef->clientdata == 0) {
  SWIGTYPE_p_tensorflow__OpDef_AttrDef->clientdata = &_exports_OpDef_AttrDef_clientData;
}
/* Name: _exports_OpDef, Type: p_tensorflow__OpDef, Dtor: _wrap_delete_OpDef */
v8::Handle<v8::FunctionTemplate> _exports_OpDef_class = SWIGV8_CreateClassTemplate("_exports_OpDef");
SWIGV8_SET_CLASS_TEMPL(_exports_OpDef_clientData.class_templ, _exports_OpDef_class);
_exports_OpDef_clientData.dtor = _wrap_delete_OpDef;
if (SWIGTYPE_p_tensorflow__OpDef->clientdata == 0) {
  SWIGTYPE_p_tensorflow__OpDef->clientdata = &_exports_OpDef_clientData;
}
/* Name: _exports_OpDeprecation, Type: p_tensorflow__OpDeprecation, Dtor: _wrap_delete_OpDeprecation */
v8::Handle<v8::FunctionTemplate> _exports_OpDeprecation_class = SWIGV8_CreateClassTemplate("_exports_OpDeprecation");
SWIGV8_SET_CLASS_TEMPL(_exports_OpDeprecation_clientData.class_templ, _exports_OpDeprecation_class);
_exports_OpDeprecation_clientData.dtor = _wrap_delete_OpDeprecation;
if (SWIGTYPE_p_tensorflow__OpDeprecation->clientdata == 0) {
  SWIGTYPE_p_tensorflow__OpDeprecation->clientdata = &_exports_OpDeprecation_clientData;
}
/* Name: _exports_OpList, Type: p_tensorflow__OpList, Dtor: _wrap_delete_OpList */
v8::Handle<v8::FunctionTemplate> _exports_OpList_class = SWIGV8_CreateClassTemplate("_exports_OpList");
SWIGV8_SET_CLASS_TEMPL(_exports_OpList_clientData.class_templ, _exports_OpList_class);
_exports_OpList_clientData.dtor = _wrap_delete_OpList;
if (SWIGTYPE_p_tensorflow__OpList->clientdata == 0) {
  SWIGTYPE_p_tensorflow__OpList->clientdata = &_exports_OpList_clientData;
}
/* Name: _exports_StringPiece, Type: p_tensorflow__StringPiece, Dtor: _wrap_delete_StringPiece */
v8::Handle<v8::FunctionTemplate> _exports_StringPiece_class = SWIGV8_CreateClassTemplate("_exports_StringPiece");
SWIGV8_SET_CLASS_TEMPL(_exports_StringPiece_clientData.class_templ, _exports_StringPiece_class);
_exports_StringPiece_clientData.dtor = _wrap_delete_StringPiece;
if (SWIGTYPE_p_tensorflow__StringPiece->clientdata == 0) {
  SWIGTYPE_p_tensorflow__StringPiece->clientdata = &_exports_StringPiece_clientData;
}


  /* register wrapper functions */
  SWIGV8_AddMemberFunction(_exports_MessageLite_class, "GetTypeName", _wrap_MessageLite_GetTypeName);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "New", _wrap_MessageLite__wrap_MessageLite_New);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "GetArena", _wrap_MessageLite_GetArena);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "GetMaybeArenaPointer", _wrap_MessageLite_GetMaybeArenaPointer);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "Clear", _wrap_MessageLite_Clear);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "IsInitialized", _wrap_MessageLite_IsInitialized);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "InitializationErrorString", _wrap_MessageLite_InitializationErrorString);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "CheckTypeAndMergeFrom", _wrap_MessageLite_CheckTypeAndMergeFrom);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParseFromCodedStream", _wrap_MessageLite_ParseFromCodedStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParsePartialFromCodedStream", _wrap_MessageLite_ParsePartialFromCodedStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParseFromZeroCopyStream", _wrap_MessageLite_ParseFromZeroCopyStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParsePartialFromZeroCopyStream", _wrap_MessageLite_ParsePartialFromZeroCopyStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParseFromBoundedZeroCopyStream", _wrap_MessageLite_ParseFromBoundedZeroCopyStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParsePartialFromBoundedZeroCopyStream", _wrap_MessageLite_ParsePartialFromBoundedZeroCopyStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParseFromString", _wrap_MessageLite_ParseFromString);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParsePartialFromString", _wrap_MessageLite_ParsePartialFromString);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParseFromArray", _wrap_MessageLite_ParseFromArray);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ParsePartialFromArray", _wrap_MessageLite_ParsePartialFromArray);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "MergeFromCodedStream", _wrap_MessageLite_MergeFromCodedStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "MergePartialFromCodedStream", _wrap_MessageLite_MergePartialFromCodedStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializeToCodedStream", _wrap_MessageLite_SerializeToCodedStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializePartialToCodedStream", _wrap_MessageLite_SerializePartialToCodedStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializeToZeroCopyStream", _wrap_MessageLite_SerializeToZeroCopyStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializePartialToZeroCopyStream", _wrap_MessageLite_SerializePartialToZeroCopyStream);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializeToString", _wrap_MessageLite_SerializeToString);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializePartialToString", _wrap_MessageLite_SerializePartialToString);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializeToArray", _wrap_MessageLite_SerializeToArray);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializePartialToArray", _wrap_MessageLite_SerializePartialToArray);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializeAsString", _wrap_MessageLite_SerializeAsString);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializePartialAsString", _wrap_MessageLite_SerializePartialAsString);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "AppendToString", _wrap_MessageLite_AppendToString);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "AppendPartialToString", _wrap_MessageLite_AppendPartialToString);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ByteSize", _wrap_MessageLite_ByteSize);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "ByteSizeLong", _wrap_MessageLite_ByteSizeLong);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializeWithCachedSizes", _wrap_MessageLite_SerializeWithCachedSizes);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "SerializeWithCachedSizesToArray", _wrap_MessageLite_SerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "GetCachedSize", _wrap_MessageLite_GetCachedSize);
SWIGV8_AddMemberFunction(_exports_MessageLite_class, "InternalSerializeWithCachedSizesToArray", _wrap_MessageLite_InternalSerializeWithCachedSizesToArray);
SWIGV8_AddMemberVariable(_exports_Metadata_class, "descriptor", _wrap_Metadata_descriptor_get, _wrap_Metadata_descriptor_set);
SWIGV8_AddMemberVariable(_exports_Metadata_class, "reflection", _wrap_Metadata_reflection_get, _wrap_Metadata_reflection_set);
SWIGV8_AddMemberFunction(_exports_Message_class, "New", _wrap_Message__wrap_Message_New);
SWIGV8_AddMemberFunction(_exports_Message_class, "CopyFrom", _wrap_Message_CopyFrom);
SWIGV8_AddMemberFunction(_exports_Message_class, "MergeFrom", _wrap_Message_MergeFrom);
SWIGV8_AddMemberFunction(_exports_Message_class, "CheckInitialized", _wrap_Message_CheckInitialized);
SWIGV8_AddMemberFunction(_exports_Message_class, "FindInitializationErrors", _wrap_Message_FindInitializationErrors);
SWIGV8_AddMemberFunction(_exports_Message_class, "InitializationErrorString", _wrap_Message_InitializationErrorString);
SWIGV8_AddMemberFunction(_exports_Message_class, "DiscardUnknownFields", _wrap_Message_DiscardUnknownFields);
SWIGV8_AddMemberFunction(_exports_Message_class, "SpaceUsed", _wrap_Message_SpaceUsed);
SWIGV8_AddMemberFunction(_exports_Message_class, "DebugString", _wrap_Message_DebugString);
SWIGV8_AddMemberFunction(_exports_Message_class, "ShortDebugString", _wrap_Message_ShortDebugString);
SWIGV8_AddMemberFunction(_exports_Message_class, "Utf8DebugString", _wrap_Message_Utf8DebugString);
SWIGV8_AddMemberFunction(_exports_Message_class, "PrintDebugString", _wrap_Message_PrintDebugString);
SWIGV8_AddMemberFunction(_exports_Message_class, "ParseFromFileDescriptor", _wrap_Message_ParseFromFileDescriptor);
SWIGV8_AddMemberFunction(_exports_Message_class, "ParsePartialFromFileDescriptor", _wrap_Message_ParsePartialFromFileDescriptor);
SWIGV8_AddMemberFunction(_exports_Message_class, "ParseFromIstream", _wrap_Message_ParseFromIstream);
SWIGV8_AddMemberFunction(_exports_Message_class, "ParsePartialFromIstream", _wrap_Message_ParsePartialFromIstream);
SWIGV8_AddMemberFunction(_exports_Message_class, "SerializeToFileDescriptor", _wrap_Message_SerializeToFileDescriptor);
SWIGV8_AddMemberFunction(_exports_Message_class, "SerializePartialToFileDescriptor", _wrap_Message_SerializePartialToFileDescriptor);
SWIGV8_AddMemberFunction(_exports_Message_class, "SerializeToOstream", _wrap_Message_SerializeToOstream);
SWIGV8_AddMemberFunction(_exports_Message_class, "SerializePartialToOstream", _wrap_Message_SerializePartialToOstream);
SWIGV8_AddMemberFunction(_exports_Message_class, "GetTypeName", _wrap_Message_GetTypeName);
SWIGV8_AddMemberFunction(_exports_Message_class, "Clear", _wrap_Message_Clear);
SWIGV8_AddMemberFunction(_exports_Message_class, "IsInitialized", _wrap_Message_IsInitialized);
SWIGV8_AddMemberFunction(_exports_Message_class, "CheckTypeAndMergeFrom", _wrap_Message_CheckTypeAndMergeFrom);
SWIGV8_AddMemberFunction(_exports_Message_class, "MergePartialFromCodedStream", _wrap_Message_MergePartialFromCodedStream);
SWIGV8_AddMemberFunction(_exports_Message_class, "ByteSizeLong", _wrap_Message_ByteSizeLong);
SWIGV8_AddMemberFunction(_exports_Message_class, "SerializeWithCachedSizes", _wrap_Message_SerializeWithCachedSizes);
SWIGV8_AddMemberFunction(_exports_Message_class, "GetDescriptor", _wrap_Message_GetDescriptor);
SWIGV8_AddMemberFunction(_exports_Message_class, "GetReflection", _wrap_Message_GetReflection);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetUnknownFields", _wrap_Reflection_GetUnknownFields);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "MutableUnknownFields", _wrap_Reflection_MutableUnknownFields);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SpaceUsed", _wrap_Reflection_SpaceUsed);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "HasField", _wrap_Reflection_HasField);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "FieldSize", _wrap_Reflection_FieldSize);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "ClearField", _wrap_Reflection_ClearField);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "HasOneof", _wrap_Reflection_HasOneof);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "ClearOneof", _wrap_Reflection_ClearOneof);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetOneofFieldDescriptor", _wrap_Reflection_GetOneofFieldDescriptor);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "RemoveLast", _wrap_Reflection_RemoveLast);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "ReleaseLast", _wrap_Reflection_ReleaseLast);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "Swap", _wrap_Reflection_Swap);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SwapFields", _wrap_Reflection_SwapFields);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SwapElements", _wrap_Reflection_SwapElements);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "ListFields", _wrap_Reflection_ListFields);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetInt32", _wrap_Reflection_GetInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetInt64", _wrap_Reflection_GetInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetUInt32", _wrap_Reflection_GetUInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetUInt64", _wrap_Reflection_GetUInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetFloat", _wrap_Reflection_GetFloat);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetDouble", _wrap_Reflection_GetDouble);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetBool", _wrap_Reflection_GetBool);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetString", _wrap_Reflection_GetString);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetEnum", _wrap_Reflection_GetEnum);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetEnumValue", _wrap_Reflection_GetEnumValue);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetMessage", _wrap_Reflection__wrap_Reflection_GetMessage);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetStringReference", _wrap_Reflection_GetStringReference);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetInt32", _wrap_Reflection_SetInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetInt64", _wrap_Reflection_SetInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetUInt32", _wrap_Reflection_SetUInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetUInt64", _wrap_Reflection_SetUInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetFloat", _wrap_Reflection_SetFloat);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetDouble", _wrap_Reflection_SetDouble);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetBool", _wrap_Reflection_SetBool);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetString", _wrap_Reflection_SetString);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetEnum", _wrap_Reflection_SetEnum);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetEnumValue", _wrap_Reflection_SetEnumValue);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "MutableMessage", _wrap_Reflection__wrap_Reflection_MutableMessage);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetAllocatedMessage", _wrap_Reflection_SetAllocatedMessage);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "ReleaseMessage", _wrap_Reflection__wrap_Reflection_ReleaseMessage);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedInt32", _wrap_Reflection_GetRepeatedInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedInt64", _wrap_Reflection_GetRepeatedInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedUInt32", _wrap_Reflection_GetRepeatedUInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedUInt64", _wrap_Reflection_GetRepeatedUInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedFloat", _wrap_Reflection_GetRepeatedFloat);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedDouble", _wrap_Reflection_GetRepeatedDouble);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedBool", _wrap_Reflection_GetRepeatedBool);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedString", _wrap_Reflection_GetRepeatedString);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedEnum", _wrap_Reflection_GetRepeatedEnum);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedEnumValue", _wrap_Reflection_GetRepeatedEnumValue);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedMessage", _wrap_Reflection_GetRepeatedMessage);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetRepeatedStringReference", _wrap_Reflection_GetRepeatedStringReference);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedInt32", _wrap_Reflection_SetRepeatedInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedInt64", _wrap_Reflection_SetRepeatedInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedUInt32", _wrap_Reflection_SetRepeatedUInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedUInt64", _wrap_Reflection_SetRepeatedUInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedFloat", _wrap_Reflection_SetRepeatedFloat);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedDouble", _wrap_Reflection_SetRepeatedDouble);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedBool", _wrap_Reflection_SetRepeatedBool);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedString", _wrap_Reflection_SetRepeatedString);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedEnum", _wrap_Reflection_SetRepeatedEnum);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SetRepeatedEnumValue", _wrap_Reflection_SetRepeatedEnumValue);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "MutableRepeatedMessage", _wrap_Reflection_MutableRepeatedMessage);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddInt32", _wrap_Reflection_AddInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddInt64", _wrap_Reflection_AddInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddUInt32", _wrap_Reflection_AddUInt32);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddUInt64", _wrap_Reflection_AddUInt64);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddFloat", _wrap_Reflection_AddFloat);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddDouble", _wrap_Reflection_AddDouble);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddBool", _wrap_Reflection_AddBool);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddString", _wrap_Reflection_AddString);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddEnum", _wrap_Reflection_AddEnum);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddEnumValue", _wrap_Reflection_AddEnumValue);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddMessage", _wrap_Reflection__wrap_Reflection_AddMessage);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "AddAllocatedMessage", _wrap_Reflection_AddAllocatedMessage);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "FindKnownExtensionByName", _wrap_Reflection_FindKnownExtensionByName);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "FindKnownExtensionByNumber", _wrap_Reflection_FindKnownExtensionByNumber);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "SupportsUnknownEnumValues", _wrap_Reflection_SupportsUnknownEnumValues);
SWIGV8_AddMemberFunction(_exports_Reflection_class, "GetMessageFactory", _wrap_Reflection_GetMessageFactory);
SWIGV8_AddMemberFunction(_exports_MessageFactory_class, "GetPrototype", _wrap_MessageFactory_GetPrototype);
SWIGV8_AddStaticVariable(exports_obj, "TF_FLOAT", _wrap_TF_FLOAT, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_DOUBLE", _wrap_TF_DOUBLE, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_INT32", _wrap_TF_INT32, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_UINT8", _wrap_TF_UINT8, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_INT16", _wrap_TF_INT16, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_INT8", _wrap_TF_INT8, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_STRING", _wrap_TF_STRING, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_COMPLEX64", _wrap_TF_COMPLEX64, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_COMPLEX", _wrap_TF_COMPLEX, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_INT64", _wrap_TF_INT64, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_BOOL", _wrap_TF_BOOL, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_QINT8", _wrap_TF_QINT8, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_QUINT8", _wrap_TF_QUINT8, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_QINT32", _wrap_TF_QINT32, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_BFLOAT16", _wrap_TF_BFLOAT16, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_QINT16", _wrap_TF_QINT16, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_QUINT16", _wrap_TF_QUINT16, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_UINT16", _wrap_TF_UINT16, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_COMPLEX128", _wrap_TF_COMPLEX128, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_HALF", _wrap_TF_HALF, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_RESOURCE", _wrap_TF_RESOURCE, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_OK", _wrap_TF_OK, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_CANCELLED", _wrap_TF_CANCELLED, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_UNKNOWN", _wrap_TF_UNKNOWN, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_INVALID_ARGUMENT", _wrap_TF_INVALID_ARGUMENT, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_DEADLINE_EXCEEDED", _wrap_TF_DEADLINE_EXCEEDED, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_NOT_FOUND", _wrap_TF_NOT_FOUND, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ALREADY_EXISTS", _wrap_TF_ALREADY_EXISTS, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_PERMISSION_DENIED", _wrap_TF_PERMISSION_DENIED, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_UNAUTHENTICATED", _wrap_TF_UNAUTHENTICATED, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_RESOURCE_EXHAUSTED", _wrap_TF_RESOURCE_EXHAUSTED, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_FAILED_PRECONDITION", _wrap_TF_FAILED_PRECONDITION, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ABORTED", _wrap_TF_ABORTED, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_OUT_OF_RANGE", _wrap_TF_OUT_OF_RANGE, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_UNIMPLEMENTED", _wrap_TF_UNIMPLEMENTED, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_INTERNAL", _wrap_TF_INTERNAL, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_UNAVAILABLE", _wrap_TF_UNAVAILABLE, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_DATA_LOSS", _wrap_TF_DATA_LOSS, JS_veto_set_variable);
SWIGV8_AddMemberVariable(_exports_TF_Buffer_class, "data", _wrap_TF_Buffer_data_get, _wrap_TF_Buffer_data_set);
SWIGV8_AddMemberVariable(_exports_TF_Buffer_class, "length", _wrap_TF_Buffer_length_get, _wrap_TF_Buffer_length_set);
SWIGV8_AddMemberVariable(_exports_TF_Buffer_class, "data_deallocator", _wrap_TF_Buffer_data_deallocator_get, _wrap_TF_Buffer_data_deallocator_set);
SWIGV8_AddMemberVariable(_exports_TF_Input_class, "oper", _wrap_TF_Input_oper_get, _wrap_TF_Input_oper_set);
SWIGV8_AddMemberVariable(_exports_TF_Input_class, "index", _wrap_TF_Input_index_get, _wrap_TF_Input_index_set);
SWIGV8_AddMemberVariable(_exports_TF_Output_class, "oper", _wrap_TF_Output_oper_get, _wrap_TF_Output_oper_set);
SWIGV8_AddMemberVariable(_exports_TF_Output_class, "index", _wrap_TF_Output_index_get, _wrap_TF_Output_index_set);
SWIGV8_AddStaticVariable(exports_obj, "TF_ATTR_STRING", _wrap_TF_ATTR_STRING, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ATTR_INT", _wrap_TF_ATTR_INT, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ATTR_FLOAT", _wrap_TF_ATTR_FLOAT, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ATTR_BOOL", _wrap_TF_ATTR_BOOL, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ATTR_TYPE", _wrap_TF_ATTR_TYPE, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ATTR_SHAPE", _wrap_TF_ATTR_SHAPE, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ATTR_TENSOR", _wrap_TF_ATTR_TENSOR, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ATTR_PLACEHOLDER", _wrap_TF_ATTR_PLACEHOLDER, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_ATTR_FUNC", _wrap_TF_ATTR_FUNC, JS_veto_set_variable);
SWIGV8_AddMemberVariable(_exports_TF_AttrMetadata_class, "is_list", _wrap_TF_AttrMetadata_is_list_get, _wrap_TF_AttrMetadata_is_list_set);
SWIGV8_AddMemberVariable(_exports_TF_AttrMetadata_class, "list_size", _wrap_TF_AttrMetadata_list_size_get, _wrap_TF_AttrMetadata_list_size_set);
SWIGV8_AddMemberVariable(_exports_TF_AttrMetadata_class, "type", _wrap_TF_AttrMetadata_type_get, _wrap_TF_AttrMetadata_type_set);
SWIGV8_AddMemberVariable(_exports_TF_AttrMetadata_class, "total_size", _wrap_TF_AttrMetadata_total_size_get, _wrap_TF_AttrMetadata_total_size_set);
SWIGV8_AddStaticVariable(exports_obj, "TF_MAJOR_VERSION", _wrap_TF_MAJOR_VERSION, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_MINOR_VERSION", _wrap_TF_MINOR_VERSION, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_PATCH_VERSION", _wrap_TF_PATCH_VERSION, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_VERSION_SUFFIX", _wrap_TF_VERSION_SUFFIX, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_VERSION_STRING", _wrap_TF_VERSION_STRING, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_GRAPH_DEF_VERSION_MIN_PRODUCER", _wrap_TF_GRAPH_DEF_VERSION_MIN_PRODUCER, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_GRAPH_DEF_VERSION_MIN_CONSUMER", _wrap_TF_GRAPH_DEF_VERSION_MIN_CONSUMER, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_GRAPH_DEF_VERSION", _wrap_TF_GRAPH_DEF_VERSION, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_CHECKPOINT_VERSION_MIN_PRODUCER", _wrap_TF_CHECKPOINT_VERSION_MIN_PRODUCER, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_CHECKPOINT_VERSION_MIN_CONSUMER", _wrap_TF_CHECKPOINT_VERSION_MIN_CONSUMER, JS_veto_set_variable);
SWIGV8_AddStaticVariable(exports_obj, "TF_CHECKPOINT_VERSION", _wrap_TF_CHECKPOINT_VERSION, JS_veto_set_variable);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "GetArena", _wrap_OpDef_ArgDef_GetArena);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "GetMaybeArenaPointer", _wrap_OpDef_ArgDef_GetMaybeArenaPointer);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "UnsafeArenaSwap", _wrap_OpDef_ArgDef_UnsafeArenaSwap);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "Swap", _wrap_OpDef_ArgDef_Swap);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "New", _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_New);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "CopyFrom", _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_CopyFrom);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "MergeFrom", _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_MergeFrom);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "Clear", _wrap_OpDef_ArgDef_Clear);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "IsInitialized", _wrap_OpDef_ArgDef_IsInitialized);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "ByteSizeLong", _wrap_OpDef_ArgDef_ByteSizeLong);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "MergePartialFromCodedStream", _wrap_OpDef_ArgDef_MergePartialFromCodedStream);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "SerializeWithCachedSizes", _wrap_OpDef_ArgDef_SerializeWithCachedSizes);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "InternalSerializeWithCachedSizesToArray", _wrap_OpDef_ArgDef_InternalSerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "SerializeWithCachedSizesToArray", _wrap_OpDef_ArgDef_SerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "GetCachedSize", _wrap_OpDef_ArgDef_GetCachedSize);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "GetMetadata", _wrap_OpDef_ArgDef_GetMetadata);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "clear_name", _wrap_OpDef_ArgDef_clear_name);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "name", _wrap_OpDef_ArgDef_name);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_name", _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_name);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "mutable_name", _wrap_OpDef_ArgDef_mutable_name);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "release_name", _wrap_OpDef_ArgDef_release_name);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_allocated_name", _wrap_OpDef_ArgDef_set_allocated_name);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_release_name", _wrap_OpDef_ArgDef_unsafe_arena_release_name);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_set_allocated_name", _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_name);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "clear_description", _wrap_OpDef_ArgDef_clear_description);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "description", _wrap_OpDef_ArgDef_description);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_description", _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_description);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "mutable_description", _wrap_OpDef_ArgDef_mutable_description);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "release_description", _wrap_OpDef_ArgDef_release_description);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_allocated_description", _wrap_OpDef_ArgDef_set_allocated_description);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_release_description", _wrap_OpDef_ArgDef_unsafe_arena_release_description);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_set_allocated_description", _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_description);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "clear_type", _wrap_OpDef_ArgDef_clear_type);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "type", _wrap_OpDef_ArgDef_type);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_type", _wrap_OpDef_ArgDef_set_type);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "clear_type_attr", _wrap_OpDef_ArgDef_clear_type_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "type_attr", _wrap_OpDef_ArgDef_type_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_type_attr", _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_type_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "mutable_type_attr", _wrap_OpDef_ArgDef_mutable_type_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "release_type_attr", _wrap_OpDef_ArgDef_release_type_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_allocated_type_attr", _wrap_OpDef_ArgDef_set_allocated_type_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_release_type_attr", _wrap_OpDef_ArgDef_unsafe_arena_release_type_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_set_allocated_type_attr", _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_type_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "clear_number_attr", _wrap_OpDef_ArgDef_clear_number_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "number_attr", _wrap_OpDef_ArgDef_number_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_number_attr", _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_number_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "mutable_number_attr", _wrap_OpDef_ArgDef_mutable_number_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "release_number_attr", _wrap_OpDef_ArgDef_release_number_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_allocated_number_attr", _wrap_OpDef_ArgDef_set_allocated_number_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_release_number_attr", _wrap_OpDef_ArgDef_unsafe_arena_release_number_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_set_allocated_number_attr", _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_number_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "clear_type_list_attr", _wrap_OpDef_ArgDef_clear_type_list_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "type_list_attr", _wrap_OpDef_ArgDef_type_list_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_type_list_attr", _wrap_OpDef_ArgDef__wrap_OpDef_ArgDef_set_type_list_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "mutable_type_list_attr", _wrap_OpDef_ArgDef_mutable_type_list_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "release_type_list_attr", _wrap_OpDef_ArgDef_release_type_list_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_allocated_type_list_attr", _wrap_OpDef_ArgDef_set_allocated_type_list_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_release_type_list_attr", _wrap_OpDef_ArgDef_unsafe_arena_release_type_list_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "unsafe_arena_set_allocated_type_list_attr", _wrap_OpDef_ArgDef_unsafe_arena_set_allocated_type_list_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "clear_is_ref", _wrap_OpDef_ArgDef_clear_is_ref);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "is_ref", _wrap_OpDef_ArgDef_is_ref);
SWIGV8_AddMemberFunction(_exports_OpDef_ArgDef_class, "set_is_ref", _wrap_OpDef_ArgDef_set_is_ref);
SWIGV8_AddStaticVariable(exports_obj, "OpDef_ArgDef_default_instance_", _wrap_OpDef_ArgDef_default_instance__get, _wrap_OpDef_ArgDef_default_instance__set);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "GetArena", _wrap_OpDef_AttrDef_GetArena);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "GetMaybeArenaPointer", _wrap_OpDef_AttrDef_GetMaybeArenaPointer);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "UnsafeArenaSwap", _wrap_OpDef_AttrDef_UnsafeArenaSwap);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "Swap", _wrap_OpDef_AttrDef_Swap);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "New", _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_New);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "CopyFrom", _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_CopyFrom);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "MergeFrom", _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_MergeFrom);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "Clear", _wrap_OpDef_AttrDef_Clear);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "IsInitialized", _wrap_OpDef_AttrDef_IsInitialized);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "ByteSizeLong", _wrap_OpDef_AttrDef_ByteSizeLong);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "MergePartialFromCodedStream", _wrap_OpDef_AttrDef_MergePartialFromCodedStream);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "SerializeWithCachedSizes", _wrap_OpDef_AttrDef_SerializeWithCachedSizes);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "InternalSerializeWithCachedSizesToArray", _wrap_OpDef_AttrDef_InternalSerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "SerializeWithCachedSizesToArray", _wrap_OpDef_AttrDef_SerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "GetCachedSize", _wrap_OpDef_AttrDef_GetCachedSize);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "GetMetadata", _wrap_OpDef_AttrDef_GetMetadata);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "clear_name", _wrap_OpDef_AttrDef_clear_name);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "name", _wrap_OpDef_AttrDef_name);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_name", _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_set_name);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "mutable_name", _wrap_OpDef_AttrDef_mutable_name);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "release_name", _wrap_OpDef_AttrDef_release_name);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_allocated_name", _wrap_OpDef_AttrDef_set_allocated_name);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_release_name", _wrap_OpDef_AttrDef_unsafe_arena_release_name);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_set_allocated_name", _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_name);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "clear_type", _wrap_OpDef_AttrDef_clear_type);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "type", _wrap_OpDef_AttrDef_type);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_type", _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_set_type);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "mutable_type", _wrap_OpDef_AttrDef_mutable_type);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "release_type", _wrap_OpDef_AttrDef_release_type);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_allocated_type", _wrap_OpDef_AttrDef_set_allocated_type);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_release_type", _wrap_OpDef_AttrDef_unsafe_arena_release_type);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_set_allocated_type", _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_type);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "has_default_value", _wrap_OpDef_AttrDef_has_default_value);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "clear_default_value", _wrap_OpDef_AttrDef_clear_default_value);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "default_value", _wrap_OpDef_AttrDef_default_value);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "mutable_default_value", _wrap_OpDef_AttrDef_mutable_default_value);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "release_default_value", _wrap_OpDef_AttrDef_release_default_value);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_allocated_default_value", _wrap_OpDef_AttrDef_set_allocated_default_value);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_release_default_value", _wrap_OpDef_AttrDef_unsafe_arena_release_default_value);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_set_allocated_default_value", _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_default_value);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "clear_description", _wrap_OpDef_AttrDef_clear_description);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "description", _wrap_OpDef_AttrDef_description);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_description", _wrap_OpDef_AttrDef__wrap_OpDef_AttrDef_set_description);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "mutable_description", _wrap_OpDef_AttrDef_mutable_description);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "release_description", _wrap_OpDef_AttrDef_release_description);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_allocated_description", _wrap_OpDef_AttrDef_set_allocated_description);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_release_description", _wrap_OpDef_AttrDef_unsafe_arena_release_description);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_set_allocated_description", _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_description);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "clear_has_minimum", _wrap_OpDef_AttrDef_clear_has_minimum);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "has_minimum", _wrap_OpDef_AttrDef_has_minimum);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_has_minimum", _wrap_OpDef_AttrDef_set_has_minimum);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "clear_minimum", _wrap_OpDef_AttrDef_clear_minimum);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "minimum", _wrap_OpDef_AttrDef_minimum);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_minimum", _wrap_OpDef_AttrDef_set_minimum);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "has_allowed_values", _wrap_OpDef_AttrDef_has_allowed_values);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "clear_allowed_values", _wrap_OpDef_AttrDef_clear_allowed_values);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "allowed_values", _wrap_OpDef_AttrDef_allowed_values);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "mutable_allowed_values", _wrap_OpDef_AttrDef_mutable_allowed_values);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "release_allowed_values", _wrap_OpDef_AttrDef_release_allowed_values);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "set_allocated_allowed_values", _wrap_OpDef_AttrDef_set_allocated_allowed_values);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_release_allowed_values", _wrap_OpDef_AttrDef_unsafe_arena_release_allowed_values);
SWIGV8_AddMemberFunction(_exports_OpDef_AttrDef_class, "unsafe_arena_set_allocated_allowed_values", _wrap_OpDef_AttrDef_unsafe_arena_set_allocated_allowed_values);
SWIGV8_AddStaticVariable(exports_obj, "OpDef_AttrDef_default_instance_", _wrap_OpDef_AttrDef_default_instance__get, _wrap_OpDef_AttrDef_default_instance__set);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "GetArena", _wrap_OpDef_GetArena);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "GetMaybeArenaPointer", _wrap_OpDef_GetMaybeArenaPointer);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "UnsafeArenaSwap", _wrap_OpDef_UnsafeArenaSwap);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "Swap", _wrap_OpDef_Swap);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "New", _wrap_OpDef__wrap_OpDef_New);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "CopyFrom", _wrap_OpDef__wrap_OpDef_CopyFrom);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "MergeFrom", _wrap_OpDef__wrap_OpDef_MergeFrom);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "Clear", _wrap_OpDef_Clear);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "IsInitialized", _wrap_OpDef_IsInitialized);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "ByteSizeLong", _wrap_OpDef_ByteSizeLong);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "MergePartialFromCodedStream", _wrap_OpDef_MergePartialFromCodedStream);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "SerializeWithCachedSizes", _wrap_OpDef_SerializeWithCachedSizes);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "InternalSerializeWithCachedSizesToArray", _wrap_OpDef_InternalSerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "SerializeWithCachedSizesToArray", _wrap_OpDef_SerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "GetCachedSize", _wrap_OpDef_GetCachedSize);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "GetMetadata", _wrap_OpDef_GetMetadata);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_name", _wrap_OpDef_clear_name);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "name", _wrap_OpDef_name);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_name", _wrap_OpDef__wrap_OpDef_set_name);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "mutable_name", _wrap_OpDef_mutable_name);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "release_name", _wrap_OpDef_release_name);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_allocated_name", _wrap_OpDef_set_allocated_name);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "unsafe_arena_release_name", _wrap_OpDef_unsafe_arena_release_name);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "unsafe_arena_set_allocated_name", _wrap_OpDef_unsafe_arena_set_allocated_name);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "input_arg_size", _wrap_OpDef_input_arg_size);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_input_arg", _wrap_OpDef_clear_input_arg);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "add_input_arg", _wrap_OpDef_add_input_arg);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "mutable_input_arg", _wrap_OpDef__wrap_OpDef_mutable_input_arg);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "input_arg", _wrap_OpDef__wrap_OpDef_input_arg);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "output_arg_size", _wrap_OpDef_output_arg_size);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_output_arg", _wrap_OpDef_clear_output_arg);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "add_output_arg", _wrap_OpDef_add_output_arg);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "mutable_output_arg", _wrap_OpDef__wrap_OpDef_mutable_output_arg);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "output_arg", _wrap_OpDef__wrap_OpDef_output_arg);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "attr_size", _wrap_OpDef_attr_size);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_attr", _wrap_OpDef_clear_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "add_attr", _wrap_OpDef_add_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "mutable_attr", _wrap_OpDef__wrap_OpDef_mutable_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "attr", _wrap_OpDef__wrap_OpDef_attr);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "has_deprecation", _wrap_OpDef_has_deprecation);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_deprecation", _wrap_OpDef_clear_deprecation);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "deprecation", _wrap_OpDef_deprecation);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "mutable_deprecation", _wrap_OpDef_mutable_deprecation);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "release_deprecation", _wrap_OpDef_release_deprecation);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_allocated_deprecation", _wrap_OpDef_set_allocated_deprecation);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "unsafe_arena_release_deprecation", _wrap_OpDef_unsafe_arena_release_deprecation);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "unsafe_arena_set_allocated_deprecation", _wrap_OpDef_unsafe_arena_set_allocated_deprecation);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_summary", _wrap_OpDef_clear_summary);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "summary", _wrap_OpDef_summary);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_summary", _wrap_OpDef__wrap_OpDef_set_summary);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "mutable_summary", _wrap_OpDef_mutable_summary);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "release_summary", _wrap_OpDef_release_summary);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_allocated_summary", _wrap_OpDef_set_allocated_summary);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "unsafe_arena_release_summary", _wrap_OpDef_unsafe_arena_release_summary);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "unsafe_arena_set_allocated_summary", _wrap_OpDef_unsafe_arena_set_allocated_summary);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_description", _wrap_OpDef_clear_description);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "description", _wrap_OpDef_description);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_description", _wrap_OpDef__wrap_OpDef_set_description);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "mutable_description", _wrap_OpDef_mutable_description);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "release_description", _wrap_OpDef_release_description);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_allocated_description", _wrap_OpDef_set_allocated_description);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "unsafe_arena_release_description", _wrap_OpDef_unsafe_arena_release_description);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "unsafe_arena_set_allocated_description", _wrap_OpDef_unsafe_arena_set_allocated_description);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_is_commutative", _wrap_OpDef_clear_is_commutative);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "is_commutative", _wrap_OpDef_is_commutative);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_is_commutative", _wrap_OpDef_set_is_commutative);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_is_aggregate", _wrap_OpDef_clear_is_aggregate);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "is_aggregate", _wrap_OpDef_is_aggregate);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_is_aggregate", _wrap_OpDef_set_is_aggregate);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_is_stateful", _wrap_OpDef_clear_is_stateful);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "is_stateful", _wrap_OpDef_is_stateful);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_is_stateful", _wrap_OpDef_set_is_stateful);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "clear_allows_uninitialized_input", _wrap_OpDef_clear_allows_uninitialized_input);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "allows_uninitialized_input", _wrap_OpDef_allows_uninitialized_input);
SWIGV8_AddMemberFunction(_exports_OpDef_class, "set_allows_uninitialized_input", _wrap_OpDef_set_allows_uninitialized_input);
SWIGV8_AddStaticVariable(exports_obj, "OpDef_default_instance_", _wrap_OpDef_default_instance__get, _wrap_OpDef_default_instance__set);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "GetArena", _wrap_OpDeprecation_GetArena);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "GetMaybeArenaPointer", _wrap_OpDeprecation_GetMaybeArenaPointer);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "UnsafeArenaSwap", _wrap_OpDeprecation_UnsafeArenaSwap);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "Swap", _wrap_OpDeprecation_Swap);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "New", _wrap_OpDeprecation__wrap_OpDeprecation_New);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "CopyFrom", _wrap_OpDeprecation__wrap_OpDeprecation_CopyFrom);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "MergeFrom", _wrap_OpDeprecation__wrap_OpDeprecation_MergeFrom);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "Clear", _wrap_OpDeprecation_Clear);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "IsInitialized", _wrap_OpDeprecation_IsInitialized);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "ByteSizeLong", _wrap_OpDeprecation_ByteSizeLong);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "MergePartialFromCodedStream", _wrap_OpDeprecation_MergePartialFromCodedStream);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "SerializeWithCachedSizes", _wrap_OpDeprecation_SerializeWithCachedSizes);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "InternalSerializeWithCachedSizesToArray", _wrap_OpDeprecation_InternalSerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "SerializeWithCachedSizesToArray", _wrap_OpDeprecation_SerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "GetCachedSize", _wrap_OpDeprecation_GetCachedSize);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "GetMetadata", _wrap_OpDeprecation_GetMetadata);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "clear_version", _wrap_OpDeprecation_clear_version);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "version", _wrap_OpDeprecation_version);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "set_version", _wrap_OpDeprecation_set_version);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "clear_explanation", _wrap_OpDeprecation_clear_explanation);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "explanation", _wrap_OpDeprecation_explanation);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "set_explanation", _wrap_OpDeprecation__wrap_OpDeprecation_set_explanation);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "mutable_explanation", _wrap_OpDeprecation_mutable_explanation);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "release_explanation", _wrap_OpDeprecation_release_explanation);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "set_allocated_explanation", _wrap_OpDeprecation_set_allocated_explanation);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "unsafe_arena_release_explanation", _wrap_OpDeprecation_unsafe_arena_release_explanation);
SWIGV8_AddMemberFunction(_exports_OpDeprecation_class, "unsafe_arena_set_allocated_explanation", _wrap_OpDeprecation_unsafe_arena_set_allocated_explanation);
SWIGV8_AddStaticVariable(exports_obj, "OpDeprecation_default_instance_", _wrap_OpDeprecation_default_instance__get, _wrap_OpDeprecation_default_instance__set);
SWIGV8_AddMemberFunction(_exports_OpList_class, "GetArena", _wrap_OpList_GetArena);
SWIGV8_AddMemberFunction(_exports_OpList_class, "GetMaybeArenaPointer", _wrap_OpList_GetMaybeArenaPointer);
SWIGV8_AddMemberFunction(_exports_OpList_class, "UnsafeArenaSwap", _wrap_OpList_UnsafeArenaSwap);
SWIGV8_AddMemberFunction(_exports_OpList_class, "Swap", _wrap_OpList_Swap);
SWIGV8_AddMemberFunction(_exports_OpList_class, "New", _wrap_OpList__wrap_OpList_New);
SWIGV8_AddMemberFunction(_exports_OpList_class, "CopyFrom", _wrap_OpList__wrap_OpList_CopyFrom);
SWIGV8_AddMemberFunction(_exports_OpList_class, "MergeFrom", _wrap_OpList__wrap_OpList_MergeFrom);
SWIGV8_AddMemberFunction(_exports_OpList_class, "Clear", _wrap_OpList_Clear);
SWIGV8_AddMemberFunction(_exports_OpList_class, "IsInitialized", _wrap_OpList_IsInitialized);
SWIGV8_AddMemberFunction(_exports_OpList_class, "ByteSizeLong", _wrap_OpList_ByteSizeLong);
SWIGV8_AddMemberFunction(_exports_OpList_class, "MergePartialFromCodedStream", _wrap_OpList_MergePartialFromCodedStream);
SWIGV8_AddMemberFunction(_exports_OpList_class, "SerializeWithCachedSizes", _wrap_OpList_SerializeWithCachedSizes);
SWIGV8_AddMemberFunction(_exports_OpList_class, "InternalSerializeWithCachedSizesToArray", _wrap_OpList_InternalSerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpList_class, "SerializeWithCachedSizesToArray", _wrap_OpList_SerializeWithCachedSizesToArray);
SWIGV8_AddMemberFunction(_exports_OpList_class, "GetCachedSize", _wrap_OpList_GetCachedSize);
SWIGV8_AddMemberFunction(_exports_OpList_class, "GetMetadata", _wrap_OpList_GetMetadata);
SWIGV8_AddMemberFunction(_exports_OpList_class, "op_size", _wrap_OpList_op_size);
SWIGV8_AddMemberFunction(_exports_OpList_class, "clear_op", _wrap_OpList_clear_op);
SWIGV8_AddMemberFunction(_exports_OpList_class, "add_op", _wrap_OpList_add_op);
SWIGV8_AddMemberFunction(_exports_OpList_class, "mutable_op", _wrap_OpList__wrap_OpList_mutable_op);
SWIGV8_AddMemberFunction(_exports_OpList_class, "op", _wrap_OpList__wrap_OpList_op);
SWIGV8_AddStaticVariable(exports_obj, "OpList_default_instance_", _wrap_OpList_default_instance__get, _wrap_OpList_default_instance__set);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "set", _wrap_StringPiece_set);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "data", _wrap_StringPiece_data);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "size", _wrap_StringPiece_size);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "empty", _wrap_StringPiece_empty);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "begin", _wrap_StringPiece_begin);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "end", _wrap_StringPiece_end);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "clear", _wrap_StringPiece_clear);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "remove_prefix", _wrap_StringPiece_remove_prefix);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "remove_suffix", _wrap_StringPiece_remove_suffix);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "find", _wrap_StringPiece__wrap_StringPiece_find);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "rfind", _wrap_StringPiece__wrap_StringPiece_rfind);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "contains", _wrap_StringPiece_contains);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "Consume", _wrap_StringPiece_Consume);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "substr", _wrap_StringPiece__wrap_StringPiece_substr);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "ToString", _wrap_StringPiece_ToString);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "compare", _wrap_StringPiece_compare);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "starts_with", _wrap_StringPiece_starts_with);
SWIGV8_AddMemberFunction(_exports_StringPiece_class, "ends_with", _wrap_StringPiece_ends_with);


  /* setup inheritances */
  if (SWIGTYPE_p_google__protobuf__MessageLite->clientdata && !(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__MessageLite->clientdata)->class_templ.IsEmpty()))
{
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
  _exports_Message_class->Inherit(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__MessageLite->clientdata)->class_templ);
#else
  _exports_Message_class->Inherit(
    v8::Local<v8::FunctionTemplate>::New(
      v8::Isolate::GetCurrent(),
      static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__MessageLite->clientdata)->class_templ)
    );
#endif
  
#ifdef SWIGRUNTIME_DEBUG
  printf("Inheritance successful _exports_Message _google__protobuf__MessageLite\n");
#endif
} else {
#ifdef SWIGRUNTIME_DEBUG
  printf("Unable to inherit baseclass, it didn't exist _exports_Message _google__protobuf__MessageLite\n");
#endif
}
if (SWIGTYPE_p_google__protobuf__Message->clientdata && !(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ.IsEmpty()))
{
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
  _exports_OpDef_ArgDef_class->Inherit(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ);
#else
  _exports_OpDef_ArgDef_class->Inherit(
    v8::Local<v8::FunctionTemplate>::New(
      v8::Isolate::GetCurrent(),
      static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ)
    );
#endif
  
#ifdef SWIGRUNTIME_DEBUG
  printf("Inheritance successful _exports_OpDef_ArgDef _google__protobuf__Message\n");
#endif
} else {
#ifdef SWIGRUNTIME_DEBUG
  printf("Unable to inherit baseclass, it didn't exist _exports_OpDef_ArgDef _google__protobuf__Message\n");
#endif
}
if (SWIGTYPE_p_google__protobuf__Message->clientdata && !(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ.IsEmpty()))
{
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
  _exports_OpDef_AttrDef_class->Inherit(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ);
#else
  _exports_OpDef_AttrDef_class->Inherit(
    v8::Local<v8::FunctionTemplate>::New(
      v8::Isolate::GetCurrent(),
      static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ)
    );
#endif
  
#ifdef SWIGRUNTIME_DEBUG
  printf("Inheritance successful _exports_OpDef_AttrDef _google__protobuf__Message\n");
#endif
} else {
#ifdef SWIGRUNTIME_DEBUG
  printf("Unable to inherit baseclass, it didn't exist _exports_OpDef_AttrDef _google__protobuf__Message\n");
#endif
}
if (SWIGTYPE_p_google__protobuf__Message->clientdata && !(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ.IsEmpty()))
{
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
  _exports_OpDef_class->Inherit(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ);
#else
  _exports_OpDef_class->Inherit(
    v8::Local<v8::FunctionTemplate>::New(
      v8::Isolate::GetCurrent(),
      static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ)
    );
#endif
  
#ifdef SWIGRUNTIME_DEBUG
  printf("Inheritance successful _exports_OpDef _google__protobuf__Message\n");
#endif
} else {
#ifdef SWIGRUNTIME_DEBUG
  printf("Unable to inherit baseclass, it didn't exist _exports_OpDef _google__protobuf__Message\n");
#endif
}
if (SWIGTYPE_p_google__protobuf__Message->clientdata && !(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ.IsEmpty()))
{
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
  _exports_OpDeprecation_class->Inherit(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ);
#else
  _exports_OpDeprecation_class->Inherit(
    v8::Local<v8::FunctionTemplate>::New(
      v8::Isolate::GetCurrent(),
      static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ)
    );
#endif
  
#ifdef SWIGRUNTIME_DEBUG
  printf("Inheritance successful _exports_OpDeprecation _google__protobuf__Message\n");
#endif
} else {
#ifdef SWIGRUNTIME_DEBUG
  printf("Unable to inherit baseclass, it didn't exist _exports_OpDeprecation _google__protobuf__Message\n");
#endif
}
if (SWIGTYPE_p_google__protobuf__Message->clientdata && !(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ.IsEmpty()))
{
#if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
  _exports_OpList_class->Inherit(static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ);
#else
  _exports_OpList_class->Inherit(
    v8::Local<v8::FunctionTemplate>::New(
      v8::Isolate::GetCurrent(),
      static_cast<SWIGV8_ClientData *>(SWIGTYPE_p_google__protobuf__Message->clientdata)->class_templ)
    );
#endif
  
#ifdef SWIGRUNTIME_DEBUG
  printf("Inheritance successful _exports_OpList _google__protobuf__Message\n");
#endif
} else {
#ifdef SWIGRUNTIME_DEBUG
  printf("Unable to inherit baseclass, it didn't exist _exports_OpList _google__protobuf__Message\n");
#endif
}


  /* class instances */
  /* Class: MessageLite (_exports_MessageLite) */
v8::Handle<v8::FunctionTemplate> _exports_MessageLite_class_0 = SWIGV8_CreateClassTemplate("MessageLite");
_exports_MessageLite_class_0->SetCallHandler(_wrap_new_veto_MessageLite);
_exports_MessageLite_class_0->Inherit(_exports_MessageLite_class);
_exports_MessageLite_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_MessageLite_obj = _exports_MessageLite_class_0->GetFunction();
/* Class: Metadata (_exports_Metadata) */
v8::Handle<v8::FunctionTemplate> _exports_Metadata_class_0 = SWIGV8_CreateClassTemplate("Metadata");
_exports_Metadata_class_0->SetCallHandler(_wrap_new_Metadata);
_exports_Metadata_class_0->Inherit(_exports_Metadata_class);
_exports_Metadata_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_Metadata_obj = _exports_Metadata_class_0->GetFunction();
/* Class: Message (_exports_Message) */
v8::Handle<v8::FunctionTemplate> _exports_Message_class_0 = SWIGV8_CreateClassTemplate("Message");
_exports_Message_class_0->SetCallHandler(_wrap_new_veto_Message);
_exports_Message_class_0->Inherit(_exports_Message_class);
_exports_Message_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_Message_obj = _exports_Message_class_0->GetFunction();
/* Class: Reflection (_exports_Reflection) */
v8::Handle<v8::FunctionTemplate> _exports_Reflection_class_0 = SWIGV8_CreateClassTemplate("Reflection");
_exports_Reflection_class_0->SetCallHandler(_wrap_new_veto_Reflection);
_exports_Reflection_class_0->Inherit(_exports_Reflection_class);
_exports_Reflection_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_Reflection_obj = _exports_Reflection_class_0->GetFunction();
/* Class: MessageFactory (_exports_MessageFactory) */
v8::Handle<v8::FunctionTemplate> _exports_MessageFactory_class_0 = SWIGV8_CreateClassTemplate("MessageFactory");
_exports_MessageFactory_class_0->SetCallHandler(_wrap_new_veto_MessageFactory);
_exports_MessageFactory_class_0->Inherit(_exports_MessageFactory_class);
_exports_MessageFactory_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_MessageFactory_obj = _exports_MessageFactory_class_0->GetFunction();
/* Class: TF_Buffer (_exports_TF_Buffer) */
v8::Handle<v8::FunctionTemplate> _exports_TF_Buffer_class_0 = SWIGV8_CreateClassTemplate("TF_Buffer");
_exports_TF_Buffer_class_0->SetCallHandler(_wrap_new_TF_Buffer);
_exports_TF_Buffer_class_0->Inherit(_exports_TF_Buffer_class);
_exports_TF_Buffer_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_TF_Buffer_obj = _exports_TF_Buffer_class_0->GetFunction();
/* Class: TF_Input (_exports_TF_Input) */
v8::Handle<v8::FunctionTemplate> _exports_TF_Input_class_0 = SWIGV8_CreateClassTemplate("TF_Input");
_exports_TF_Input_class_0->SetCallHandler(_wrap_new_TF_Input);
_exports_TF_Input_class_0->Inherit(_exports_TF_Input_class);
_exports_TF_Input_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_TF_Input_obj = _exports_TF_Input_class_0->GetFunction();
/* Class: TF_Output (_exports_TF_Output) */
v8::Handle<v8::FunctionTemplate> _exports_TF_Output_class_0 = SWIGV8_CreateClassTemplate("TF_Output");
_exports_TF_Output_class_0->SetCallHandler(_wrap_new_TF_Output);
_exports_TF_Output_class_0->Inherit(_exports_TF_Output_class);
_exports_TF_Output_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_TF_Output_obj = _exports_TF_Output_class_0->GetFunction();
/* Class: TF_AttrMetadata (_exports_TF_AttrMetadata) */
v8::Handle<v8::FunctionTemplate> _exports_TF_AttrMetadata_class_0 = SWIGV8_CreateClassTemplate("TF_AttrMetadata");
_exports_TF_AttrMetadata_class_0->SetCallHandler(_wrap_new_TF_AttrMetadata);
_exports_TF_AttrMetadata_class_0->Inherit(_exports_TF_AttrMetadata_class);
_exports_TF_AttrMetadata_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_TF_AttrMetadata_obj = _exports_TF_AttrMetadata_class_0->GetFunction();
/* Class: OpDef_ArgDef (_exports_OpDef_ArgDef) */
v8::Handle<v8::FunctionTemplate> _exports_OpDef_ArgDef_class_0 = SWIGV8_CreateClassTemplate("OpDef_ArgDef");
_exports_OpDef_ArgDef_class_0->SetCallHandler(_wrap_new_OpDef_ArgDef);
_exports_OpDef_ArgDef_class_0->Inherit(_exports_OpDef_ArgDef_class);
_exports_OpDef_ArgDef_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_OpDef_ArgDef_obj = _exports_OpDef_ArgDef_class_0->GetFunction();
/* Class: OpDef_AttrDef (_exports_OpDef_AttrDef) */
v8::Handle<v8::FunctionTemplate> _exports_OpDef_AttrDef_class_0 = SWIGV8_CreateClassTemplate("OpDef_AttrDef");
_exports_OpDef_AttrDef_class_0->SetCallHandler(_wrap_new_OpDef_AttrDef);
_exports_OpDef_AttrDef_class_0->Inherit(_exports_OpDef_AttrDef_class);
_exports_OpDef_AttrDef_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_OpDef_AttrDef_obj = _exports_OpDef_AttrDef_class_0->GetFunction();
/* Class: OpDef (_exports_OpDef) */
v8::Handle<v8::FunctionTemplate> _exports_OpDef_class_0 = SWIGV8_CreateClassTemplate("OpDef");
_exports_OpDef_class_0->SetCallHandler(_wrap_new_OpDef);
_exports_OpDef_class_0->Inherit(_exports_OpDef_class);
_exports_OpDef_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_OpDef_obj = _exports_OpDef_class_0->GetFunction();
/* Class: OpDeprecation (_exports_OpDeprecation) */
v8::Handle<v8::FunctionTemplate> _exports_OpDeprecation_class_0 = SWIGV8_CreateClassTemplate("OpDeprecation");
_exports_OpDeprecation_class_0->SetCallHandler(_wrap_new_OpDeprecation);
_exports_OpDeprecation_class_0->Inherit(_exports_OpDeprecation_class);
_exports_OpDeprecation_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_OpDeprecation_obj = _exports_OpDeprecation_class_0->GetFunction();
/* Class: OpList (_exports_OpList) */
v8::Handle<v8::FunctionTemplate> _exports_OpList_class_0 = SWIGV8_CreateClassTemplate("OpList");
_exports_OpList_class_0->SetCallHandler(_wrap_new_OpList);
_exports_OpList_class_0->Inherit(_exports_OpList_class);
_exports_OpList_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_OpList_obj = _exports_OpList_class_0->GetFunction();
/* Class: StringPiece (_exports_StringPiece) */
v8::Handle<v8::FunctionTemplate> _exports_StringPiece_class_0 = SWIGV8_CreateClassTemplate("StringPiece");
_exports_StringPiece_class_0->SetCallHandler(_wrap_new_StringPiece);
_exports_StringPiece_class_0->Inherit(_exports_StringPiece_class);
_exports_StringPiece_class_0->SetHiddenPrototype(true);
v8::Handle<v8::Object> _exports_StringPiece_obj = _exports_StringPiece_class_0->GetFunction();


  /* add static class functions and variables */
  SWIGV8_AddStaticFunction(_exports_MessageFactory_obj, "generated_factory", _wrap_MessageFactory_generated_factory);
SWIGV8_AddStaticFunction(_exports_MessageFactory_obj, "InternalRegisterGeneratedFile", _wrap_MessageFactory_InternalRegisterGeneratedFile);
SWIGV8_AddStaticFunction(_exports_MessageFactory_obj, "InternalRegisterGeneratedMessage", _wrap_MessageFactory_InternalRegisterGeneratedMessage);
SWIGV8_AddStaticFunction(exports_obj, "TF_Version", _wrap_TF_Version);
SWIGV8_AddStaticFunction(exports_obj, "TF_DataTypeSize", _wrap_TF_DataTypeSize);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewStatus", _wrap_TF_NewStatus);
SWIGV8_AddStaticFunction(exports_obj, "TF_DeleteStatus", _wrap_TF_DeleteStatus);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetStatus", _wrap_TF_SetStatus);
SWIGV8_AddStaticFunction(exports_obj, "TF_GetCode", _wrap_TF_GetCode);
SWIGV8_AddStaticFunction(exports_obj, "TF_Message", _wrap_TF_Message);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewBufferFromString", _wrap_TF_NewBufferFromString);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewBuffer", _wrap_TF_NewBuffer);
SWIGV8_AddStaticFunction(exports_obj, "TF_DeleteBuffer", _wrap_TF_DeleteBuffer);
SWIGV8_AddStaticFunction(exports_obj, "TF_GetBuffer", _wrap_TF_GetBuffer);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewTensor", _wrap_TF_NewTensor);
SWIGV8_AddStaticFunction(exports_obj, "TF_AllocateTensor", _wrap_TF_AllocateTensor);
SWIGV8_AddStaticFunction(exports_obj, "TF_DeleteTensor", _wrap_TF_DeleteTensor);
SWIGV8_AddStaticFunction(exports_obj, "TF_TensorType", _wrap_TF_TensorType);
SWIGV8_AddStaticFunction(exports_obj, "TF_NumDims", _wrap_TF_NumDims);
SWIGV8_AddStaticFunction(exports_obj, "TF_Dim", _wrap_TF_Dim);
SWIGV8_AddStaticFunction(exports_obj, "TF_TensorByteSize", _wrap_TF_TensorByteSize);
SWIGV8_AddStaticFunction(exports_obj, "TF_TensorData", _wrap_TF_TensorData);
SWIGV8_AddStaticFunction(exports_obj, "TF_StringEncode", _wrap_TF_StringEncode);
SWIGV8_AddStaticFunction(exports_obj, "TF_StringDecode", _wrap_TF_StringDecode);
SWIGV8_AddStaticFunction(exports_obj, "TF_StringEncodedSize", _wrap_TF_StringEncodedSize);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewSessionOptions", _wrap_TF_NewSessionOptions);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetTarget", _wrap_TF_SetTarget);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetConfig", _wrap_TF_SetConfig);
SWIGV8_AddStaticFunction(exports_obj, "TF_DeleteSessionOptions", _wrap_TF_DeleteSessionOptions);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewGraph", _wrap_TF_NewGraph);
SWIGV8_AddStaticFunction(exports_obj, "TF_DeleteGraph", _wrap_TF_DeleteGraph);
SWIGV8_AddStaticFunction(exports_obj, "TF_GraphSetTensorShape", _wrap_TF_GraphSetTensorShape);
SWIGV8_AddStaticFunction(exports_obj, "TF_GraphGetTensorNumDims", _wrap_TF_GraphGetTensorNumDims);
SWIGV8_AddStaticFunction(exports_obj, "TF_GraphGetTensorShape", _wrap_TF_GraphGetTensorShape);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewOperation", _wrap_TF_NewOperation);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetDevice", _wrap_TF_SetDevice);
SWIGV8_AddStaticFunction(exports_obj, "TF_AddInput", _wrap_TF_AddInput);
SWIGV8_AddStaticFunction(exports_obj, "TF_AddInputList", _wrap_TF_AddInputList);
SWIGV8_AddStaticFunction(exports_obj, "TF_AddControlInput", _wrap_TF_AddControlInput);
SWIGV8_AddStaticFunction(exports_obj, "TF_ColocateWith", _wrap_TF_ColocateWith);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrString", _wrap_TF_SetAttrString);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrStringList", _wrap_TF_SetAttrStringList);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrInt", _wrap_TF_SetAttrInt);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrIntList", _wrap_TF_SetAttrIntList);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrFloat", _wrap_TF_SetAttrFloat);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrFloatList", _wrap_TF_SetAttrFloatList);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrBool", _wrap_TF_SetAttrBool);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrBoolList", _wrap_TF_SetAttrBoolList);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrType", _wrap_TF_SetAttrType);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrTypeList", _wrap_TF_SetAttrTypeList);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrShape", _wrap_TF_SetAttrShape);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrShapeList", _wrap_TF_SetAttrShapeList);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrTensorShapeProto", _wrap_TF_SetAttrTensorShapeProto);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrTensorShapeProtoList", _wrap_TF_SetAttrTensorShapeProtoList);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrTensor", _wrap_TF_SetAttrTensor);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrTensorList", _wrap_TF_SetAttrTensorList);
SWIGV8_AddStaticFunction(exports_obj, "TF_SetAttrValueProto", _wrap_TF_SetAttrValueProto);
SWIGV8_AddStaticFunction(exports_obj, "TF_FinishOperation", _wrap_TF_FinishOperation);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationName", _wrap_TF_OperationName);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationOpType", _wrap_TF_OperationOpType);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationDevice", _wrap_TF_OperationDevice);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationNumOutputs", _wrap_TF_OperationNumOutputs);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationOutputType", _wrap_TF_OperationOutputType);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationOutputListLength", _wrap_TF_OperationOutputListLength);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationNumInputs", _wrap_TF_OperationNumInputs);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationInputType", _wrap_TF_OperationInputType);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationInputListLength", _wrap_TF_OperationInputListLength);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationInput", _wrap_TF_OperationInput);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationOutputNumConsumers", _wrap_TF_OperationOutputNumConsumers);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationOutputConsumers", _wrap_TF_OperationOutputConsumers);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationNumControlInputs", _wrap_TF_OperationNumControlInputs);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetControlInputs", _wrap_TF_OperationGetControlInputs);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationNumControlOutputs", _wrap_TF_OperationNumControlOutputs);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetControlOutputs", _wrap_TF_OperationGetControlOutputs);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrMetadata", _wrap_TF_OperationGetAttrMetadata);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrString", _wrap_TF_OperationGetAttrString);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrStringList", _wrap_TF_OperationGetAttrStringList);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrInt", _wrap_TF_OperationGetAttrInt);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrIntList", _wrap_TF_OperationGetAttrIntList);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrFloat", _wrap_TF_OperationGetAttrFloat);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrFloatList", _wrap_TF_OperationGetAttrFloatList);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrBool", _wrap_TF_OperationGetAttrBool);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrBoolList", _wrap_TF_OperationGetAttrBoolList);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrType", _wrap_TF_OperationGetAttrType);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrTypeList", _wrap_TF_OperationGetAttrTypeList);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrShape", _wrap_TF_OperationGetAttrShape);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrShapeList", _wrap_TF_OperationGetAttrShapeList);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrTensorShapeProto", _wrap_TF_OperationGetAttrTensorShapeProto);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrTensorShapeProtoList", _wrap_TF_OperationGetAttrTensorShapeProtoList);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrTensor", _wrap_TF_OperationGetAttrTensor);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrTensorList", _wrap_TF_OperationGetAttrTensorList);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationGetAttrValueProto", _wrap_TF_OperationGetAttrValueProto);
SWIGV8_AddStaticFunction(exports_obj, "TF_GraphOperationByName", _wrap_TF_GraphOperationByName);
SWIGV8_AddStaticFunction(exports_obj, "TF_GraphNextOperation", _wrap_TF_GraphNextOperation);
SWIGV8_AddStaticFunction(exports_obj, "TF_GraphToGraphDef", _wrap_TF_GraphToGraphDef);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewImportGraphDefOptions", _wrap_TF_NewImportGraphDefOptions);
SWIGV8_AddStaticFunction(exports_obj, "TF_DeleteImportGraphDefOptions", _wrap_TF_DeleteImportGraphDefOptions);
SWIGV8_AddStaticFunction(exports_obj, "TF_ImportGraphDefOptionsSetPrefix", _wrap_TF_ImportGraphDefOptionsSetPrefix);
SWIGV8_AddStaticFunction(exports_obj, "TF_GraphImportGraphDef", _wrap_TF_GraphImportGraphDef);
SWIGV8_AddStaticFunction(exports_obj, "TF_OperationToNodeDef", _wrap_TF_OperationToNodeDef);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewSession", _wrap_TF_NewSession);
SWIGV8_AddStaticFunction(exports_obj, "TF_LoadSessionFromSavedModel", _wrap_TF_LoadSessionFromSavedModel);
SWIGV8_AddStaticFunction(exports_obj, "TF_CloseSession", _wrap_TF_CloseSession);
SWIGV8_AddStaticFunction(exports_obj, "TF_DeleteSession", _wrap_TF_DeleteSession);
SWIGV8_AddStaticFunction(exports_obj, "TF_SessionRun", _wrap_TF_SessionRun);
SWIGV8_AddStaticFunction(exports_obj, "TF_SessionPRunSetup", _wrap_TF_SessionPRunSetup);
SWIGV8_AddStaticFunction(exports_obj, "TF_SessionPRun", _wrap_TF_SessionPRun);
SWIGV8_AddStaticFunction(exports_obj, "TF_NewDeprecatedSession", _wrap_TF_NewDeprecatedSession);
SWIGV8_AddStaticFunction(exports_obj, "TF_CloseDeprecatedSession", _wrap_TF_CloseDeprecatedSession);
SWIGV8_AddStaticFunction(exports_obj, "TF_DeleteDeprecatedSession", _wrap_TF_DeleteDeprecatedSession);
SWIGV8_AddStaticFunction(exports_obj, "TF_Reset", _wrap_TF_Reset);
SWIGV8_AddStaticFunction(exports_obj, "TF_ExtendGraph", _wrap_TF_ExtendGraph);
SWIGV8_AddStaticFunction(exports_obj, "TF_Run", _wrap_TF_Run);
SWIGV8_AddStaticFunction(exports_obj, "TF_PRunSetup", _wrap_TF_PRunSetup);
SWIGV8_AddStaticFunction(exports_obj, "TF_PRun", _wrap_TF_PRun);
SWIGV8_AddStaticFunction(exports_obj, "TF_LoadLibrary", _wrap_TF_LoadLibrary);
SWIGV8_AddStaticFunction(exports_obj, "TF_GetOpList", _wrap_TF_GetOpList);
SWIGV8_AddStaticFunction(exports_obj, "TF_DeleteLibraryHandle", _wrap_TF_DeleteLibraryHandle);
SWIGV8_AddStaticFunction(exports_obj, "TF_GetAllOpList", _wrap_TF_GetAllOpList);
SWIGV8_AddStaticFunction(exports_obj, "IsGoogleCudaEnabled", _wrap_IsGoogleCudaEnabled);
SWIGV8_AddStaticFunction(exports_obj, "CudaSupportsHalfMatMulAndConv", _wrap_CudaSupportsHalfMatMulAndConv);
SWIGV8_AddStaticFunction(exports_obj, "tf_compiler_version", _wrap_tf_compiler_version);
SWIGV8_AddStaticFunction(exports_obj, "tf_git_version", _wrap_tf_git_version);
SWIGV8_AddStaticFunction(exports_obj, "protobuf_AddDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto", _wrap_protobuf_AddDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto);
SWIGV8_AddStaticFunction(exports_obj, "protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto", _wrap_protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto);
SWIGV8_AddStaticFunction(exports_obj, "protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto", _wrap_protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto);
SWIGV8_AddStaticFunction(exports_obj, "protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto", _wrap_protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto);
SWIGV8_AddStaticFunction(_exports_OpDef_ArgDef_obj, "descriptor", _wrap_OpDef_ArgDef_descriptor);
SWIGV8_AddStaticFunction(_exports_OpDef_ArgDef_obj, "default_instance", _wrap_OpDef_ArgDef_default_instance);
SWIGV8_AddStaticFunction(_exports_OpDef_ArgDef_obj, "internal_default_instance", _wrap_OpDef_ArgDef_internal_default_instance);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kNameFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kNameFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kNameFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kNameFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kDescriptionFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kDescriptionFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kDescriptionFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kDescriptionFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kTypeFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kTypeFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kTypeFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kTypeFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kTypeAttrFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kTypeAttrFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kTypeAttrFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kTypeAttrFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kNumberAttrFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kNumberAttrFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kNumberAttrFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kNumberAttrFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kTypeListAttrFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kTypeListAttrFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kTypeListAttrFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kTypeListAttrFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kIsRefFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kIsRefFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_ArgDef_obj, "kIsRefFieldNumber", _wrap_tensorflow_OpDef_ArgDef_kIsRefFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticFunction(_exports_OpDef_AttrDef_obj, "descriptor", _wrap_OpDef_AttrDef_descriptor);
SWIGV8_AddStaticFunction(_exports_OpDef_AttrDef_obj, "default_instance", _wrap_OpDef_AttrDef_default_instance);
SWIGV8_AddStaticFunction(_exports_OpDef_AttrDef_obj, "internal_default_instance", _wrap_OpDef_AttrDef_internal_default_instance);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kNameFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kNameFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kNameFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kNameFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kTypeFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kTypeFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kTypeFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kTypeFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kDefaultValueFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kDefaultValueFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kDefaultValueFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kDefaultValueFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kDescriptionFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kDescriptionFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kDescriptionFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kDescriptionFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kHasMinimumFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kHasMinimumFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kHasMinimumFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kHasMinimumFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kMinimumFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kMinimumFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kMinimumFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kMinimumFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kAllowedValuesFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kAllowedValuesFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_AttrDef_obj, "kAllowedValuesFieldNumber", _wrap_tensorflow_OpDef_AttrDef_kAllowedValuesFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticFunction(_exports_OpDef_obj, "descriptor", _wrap_OpDef_descriptor);
SWIGV8_AddStaticFunction(_exports_OpDef_obj, "default_instance", _wrap_OpDef_default_instance);
SWIGV8_AddStaticFunction(_exports_OpDef_obj, "internal_default_instance", _wrap_OpDef_internal_default_instance);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kNameFieldNumber", _wrap_tensorflow_OpDef_kNameFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kNameFieldNumber", _wrap_tensorflow_OpDef_kNameFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kInputArgFieldNumber", _wrap_tensorflow_OpDef_kInputArgFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kInputArgFieldNumber", _wrap_tensorflow_OpDef_kInputArgFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kOutputArgFieldNumber", _wrap_tensorflow_OpDef_kOutputArgFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kOutputArgFieldNumber", _wrap_tensorflow_OpDef_kOutputArgFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kAttrFieldNumber", _wrap_tensorflow_OpDef_kAttrFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kAttrFieldNumber", _wrap_tensorflow_OpDef_kAttrFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kDeprecationFieldNumber", _wrap_tensorflow_OpDef_kDeprecationFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kDeprecationFieldNumber", _wrap_tensorflow_OpDef_kDeprecationFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kSummaryFieldNumber", _wrap_tensorflow_OpDef_kSummaryFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kSummaryFieldNumber", _wrap_tensorflow_OpDef_kSummaryFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kDescriptionFieldNumber", _wrap_tensorflow_OpDef_kDescriptionFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kDescriptionFieldNumber", _wrap_tensorflow_OpDef_kDescriptionFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kIsCommutativeFieldNumber", _wrap_tensorflow_OpDef_kIsCommutativeFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kIsCommutativeFieldNumber", _wrap_tensorflow_OpDef_kIsCommutativeFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kIsAggregateFieldNumber", _wrap_tensorflow_OpDef_kIsAggregateFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kIsAggregateFieldNumber", _wrap_tensorflow_OpDef_kIsAggregateFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kIsStatefulFieldNumber", _wrap_tensorflow_OpDef_kIsStatefulFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kIsStatefulFieldNumber", _wrap_tensorflow_OpDef_kIsStatefulFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kAllowsUninitializedInputFieldNumber", _wrap_tensorflow_OpDef_kAllowsUninitializedInputFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDef_obj, "kAllowsUninitializedInputFieldNumber", _wrap_tensorflow_OpDef_kAllowsUninitializedInputFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticFunction(_exports_OpDeprecation_obj, "descriptor", _wrap_OpDeprecation_descriptor);
SWIGV8_AddStaticFunction(_exports_OpDeprecation_obj, "default_instance", _wrap_OpDeprecation_default_instance);
SWIGV8_AddStaticFunction(_exports_OpDeprecation_obj, "internal_default_instance", _wrap_OpDeprecation_internal_default_instance);
SWIGV8_AddStaticVariable(_exports_OpDeprecation_obj, "kVersionFieldNumber", _wrap_tensorflow_OpDeprecation_kVersionFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDeprecation_obj, "kVersionFieldNumber", _wrap_tensorflow_OpDeprecation_kVersionFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDeprecation_obj, "kExplanationFieldNumber", _wrap_tensorflow_OpDeprecation_kExplanationFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpDeprecation_obj, "kExplanationFieldNumber", _wrap_tensorflow_OpDeprecation_kExplanationFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticFunction(_exports_OpList_obj, "descriptor", _wrap_OpList_descriptor);
SWIGV8_AddStaticFunction(_exports_OpList_obj, "default_instance", _wrap_OpList_default_instance);
SWIGV8_AddStaticFunction(_exports_OpList_obj, "internal_default_instance", _wrap_OpList_internal_default_instance);
SWIGV8_AddStaticVariable(_exports_OpList_obj, "kOpFieldNumber", _wrap_tensorflow_OpList_kOpFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_OpList_obj, "kOpFieldNumber", _wrap_tensorflow_OpList_kOpFieldNumber, JS_veto_set_variable);
SWIGV8_AddStaticVariable(_exports_StringPiece_obj, "npos", _wrap_StringPiece_npos_get, JS_veto_set_variable);


  /* register classes */
  exports_obj->Set(SWIGV8_SYMBOL_NEW("MessageLite"), _exports_MessageLite_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("Metadata"), _exports_Metadata_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("Message"), _exports_Message_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("Reflection"), _exports_Reflection_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("MessageFactory"), _exports_MessageFactory_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("TF_Buffer"), _exports_TF_Buffer_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("TF_Input"), _exports_TF_Input_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("TF_Output"), _exports_TF_Output_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("TF_AttrMetadata"), _exports_TF_AttrMetadata_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("OpDef_ArgDef"), _exports_OpDef_ArgDef_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("OpDef_AttrDef"), _exports_OpDef_AttrDef_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("OpDef"), _exports_OpDef_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("OpDeprecation"), _exports_OpDeprecation_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("OpList"), _exports_OpList_obj);
exports_obj->Set(SWIGV8_SYMBOL_NEW("StringPiece"), _exports_StringPiece_obj);


  /* create and register namespace objects */
  
}

#if defined(BUILDING_NODE_EXTENSION)
NODE_MODULE(tensorflow, tensorflow_initialize)
#endif
